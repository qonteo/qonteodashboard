{"version":3,"sources":["types/types.js","helpers/fetch.js","actions/auth.js","components/Auth/IconsAuth.js","hooks/useForm.js","components/Auth/ChooseGroup.js","components/Auth/LoginScreen.js","components/Auth/RegisterScreen.js","components/ui/Navbar.js","routes/AuthRoute.js","actions/person.js","components/boxes/BoxPrimary.js","helpers/calculo.js","components/boxes/BoxSecondary.js","components/boxes/BoxSex.js","components/grafics/GraficHours.js","components/grafics/GraficWeekLine.js","components/grafics/GraficMonth.js","components/grafics/GrillaDesktop.js","actions/date.js","components/date/DateChange.js","components/date/DateChangeMonth.js","components/grafics/HorizontalGrafic.js","helpers/exports.js","components/desktop/Persons.js","helpers/roundbarchart.js","actions/vehicle.js","components/grafics/GraficWeek.js","components/mobile/TimeRealButton.js","components/mobile/ScrollButton.js","components/grafics/GraficGrilla.js","actions/typeVehicle.js","actions/plate.js","components/mobile/QonteoMobile.js","components/qonteo/QonteoScreen.js","components/boxes/BoxPLate.js","components/desktop/SearchScreen.js","components/ui/NavbarDesktop.js","actions/ui.js","routes/DasboardRoute.js","routes/PublicRoute.js","routes/PrivateRoute.js","routes/AppRoute.js","reducers/authReducer.js","reducers/DateReducer.js","reducers/personReducer.js","reducers/plateReducer.js","reducers/typesVehicleReducer.js","reducers/uiReducer.js","reducers/vehicleReducer.js","reducers/rootReducer.js","store/store.js","QonteoApp.js","index.js"],"names":["types","groupUrl","groupName","groupId","authChecking","authCheckingFinish","authStartLogin","authLogin","authStartRegister","authLogout","dataVehicles","setHoursVehicles","setWeeksVehicles","setMonthsVehicles","dataPersons","getMapHeat","setHoursPersons","setHoursPersonsMale","setHoursPersonsFemale","setWeekPersons","setWeekPersonsMale","setWeekPersonsFemale","setMonthGraficPersons","setMonthGraficPersonsMale","setMonthGraficPersonsFemale","setGraficRangesAges","changeDate","setDateStartHourVehicle","setDateEndHourVehicle","setDateStartWeekVehicle","setDateEndWeekVehicle","setDateStartMonthVehicle","setDateEndMonthVehicle","setDateStartHourPerson","setDateEndHourPerson","setDateStartHourMalePerson","setDateEndHourMalePerson","setDateStartHourFemalePerson","setDateEndHourFemalePerson","setDateStartWeekPerson","setDateEndWeekPerson","setDateStartWeekMalePerson","setDateEndWeekMalePerson","setDateStartWeekFemalePerson","setDateEndWeekFemalePerson","setDateStartMonthPerson","setDateEndMonthPerson","setDateStartMonthMalePerson","setDateEndMonthMalePerson","setDateStartMonthFemalePerson","setDateEndMonthFemalePerson","setDateStartAgePerson","setDateEndAgePerson","setDateStartPlate","setDateEndPlate","uiMenu","uiMenuHide","getPlate","startLoadingPlate","searchPlate","sortByPlate","sortByDate","sortByHour","sortByLocation","sortByTimes","sortByClient","sortByMembership","setPlatesCurrenDate","dataTypeVehicle","baseUrl","process","fetchSinToken","endpoint","data","method","token","localStorage","getItem","url","fetch","headers","Authorization","body","JSON","stringify","fetchConToken","startLogin","user","dispatch","setItem","_id","toString","Date","getTime","login","uid","firstNames","lastName","email","phonenumber","portraitUrl","portrait_url","country","groups","city","isCheking","checkingStart","type","payload","IconsAuth","className","src","alt","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","ChooseGroup","select","useRef","useDispatch","selectGroup","codeAndName","current","split","resp","json","window","location","href","ref","hidden","map","g","i","key","id","code","onClick","LoginScreen","history","React","error","setError","isLoading","setIsLoading","isSelect","setIsSelect","countGroup","setcountGroup","password","fields","inputChange","handleLogin","e","preventDefault","errors","Swal","fire","console","log","length","Error","onSubmit","onChange","placeholder","to","RegisterScreen","rFirstname","rLastname","rEmail","rPassword","inputValue","firstName","meta","status","replace","autoComplete","Navbar","AuthRouter","exact","path","component","getPersondata","getState","auth","filter","today_total","today_female","today_male","heatmap","heatmap_range","yesterday_total","yesterday_female","yesterday_male","week_total","week_female","week_male","month_total","month_female","month_male","hours","week","month","ageRanges","today_percent","today_percent_female","today_percent_male","week_percent","max_hour","max_hour_female","max_hour_male","max_week_day","max_week_day_female","max_week_day_male","max_month_day","max_month_day_female","max_month_day_male","linehoyhoursT","h","time","hour","total","linehoyhoursM","male","linehoyhoursF","female","linehoursweekT","dow","linehoursweekM","linehoursweekF","lineMonthT","day","lineMonthM","lineMonthF","getData","hoursPerson","hoursPersonFemale","hoursPersonMale","weekPerson","weekPersonMale","weekPersonFemale","monthPerson","monthPersonFemale","monthPersonMale","heatmapPerson","heatmapRangePerson","ageRangePerson","totalTodayPerson","totalTodayPersonFemale","totalTodayPersonMale","todayPercentPerson","todayPercentFemalePerson","todayPercentMalePerson","totalYesterdayPerson","totalYesterdayFemalePerson","totalYesterdayMalePerson","maxHourPerson","maxHourFemalePerson","maxHourMalePerson","maxWeekPerson","maxWeekFemalePerson","maxWeekMalePerson","maxMonthPerson","maxMonthFemalePerson","maxMonthMalePerson","totalWeekPerson","totalWeekFemale","totalWeekMale","weekPercentPerson","totalMonthPerson","totalMonthFemalePerson","totalMonthMalePerson","date_from","date_to","linehoyhours","initSetGraficHoursPersons","initSetGraficHoursPersonsMale","initSetGraficHoursPersonsFemale","linehoursweek","max_week_dayP","initSetGraficWeekPersons","initSetGraficWeekPersonsMale","initSetGraficWeekPersonsFemale","setMonthPerson","lineMonth","max_month_dayP","initSetGraficMonthPerson","setMonthPersonMale","initSetGraficMonthPersonMale","setMonthPersonFemale","initSetGraficMonthPersonFemale","setGraficRangeAges","initSetGraficRangeAges","BoxPrimary","memo","date","cantidad","text1","text2","bg","textHeadLeft","textBottom","dateEnd","formatNumber","num","porcentajepersona","resultado","Math","round","BoxSecondary","count","percent","ispercent","initDate","endDate","BoxSex","textsex","color","sex","txttop","isNaN","Number","POSITIVE_INFINITY","GraficHours","label","dtsetbg","optionbg","scalebg","title","labelop","legendbg","sexo","scltxtlbl","pl","pr","pb","pt","graficData","setGraficData","isScaleText","setIsScaleText","useCallback","a","scaleText","useEffect","labels","datasets","backgroundColor","borderWidth","options","cornerRadius","display","fontSize","fontColor","fontFamily","fontStyle","layout","padding","left","right","top","bottom","legend","position","boxWidth","tooltips","enabled","mode","callbacks","tooltipItem","datax","index","tooltipItems","yLabel","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","gridLines","scaleLabel","labelString","xAxes","GraficWeekLine","lineColor","lineTension","borderDashOffset","borderJoinStyle","borderCapStyle","pointBorderWidth","pointHoverRadius","elements","line","fill","borderColor","tension","point","radius","drawBorder","zeroLineColor","zeroLineWidth","GraficMonth","GraficGrillaDesktop","tablehours","validarref","querySelector","remove","dias_semana","push","moment","subtract","format","margin","width","height","svg","d3","attr","append","x","range","domain","call","y","r","myColor","rectContainer","selectAll","d","enter","hora","bandwidth","style","text","setStartDateHourVehicle","setEndDateHourVehicle","setStartDateWeekVehicle","setEndDateWeekVehicle","setStartDateMonthVehicle","setEndDateMonthVehicle","setStartDateHourPerson","setEndDateHourPerson","setStartDateHourMalePerson","setEndDateHourMalePerson","setStartDateHourFemalePerson","setEndDateHourFemalePerson","setStartDateWeekPerson","setEndDateWeekPerson","setStartDateWeekMalePerson","setEndDateWeekMalePerson","setStartDateWeekFemalePerson","setEndDateWeekFemalePerson","setStartDateMonthPerson","setEndDateMonthPerson","setStartDateMonthMalePerson","setEndDateMonthMalePerson","setStartDateMonthFemalePerson","setEndDateMonthFemalePerson","setStartDateAgePerson","setEndDateAgePerson","setStartDatePlate","setEndDatePlate","registerLocale","es","DateChange","startDate","methodStart","methodEnd","flexColumn","isPlate","methodPlate","inputReset","startDateValue","setStartDateValue","endDateValue","setEndDateValue","selected","locale","momentStart","momentEnd","isAfter","document","maxDate","isSameOrAfter","DateChangeMonth","showMonthYearPicker","getFullYear","getMonth","endOf","HorizontalGrafic","dataAge","reverse","titleFontSize","xPadding","yPadding","bodyFontSize","bodySpacing","sign","datasetIndex","stacked","downloadImage","grafic","bgColor","numberX","finDate","interval","canvas","ctx","getContext","font","fillStyle","fillText","parseInt","img","getElementById","drawImage","img2","globalCompositeOperation","fillRect","restore","url_base64jp","toDataURL","clearRect","linkHref","createElement","user_id","image","setAttribute","click","exportGraficVehicle","dateFrom","dateTo","peticion","blob","exportExcel","inititalDate","filename","then","saveAs","exportPdf","year","doc","jsPDF","Image","addImage","setFontSize","toUpperCase","save","downloadImageDesktop","textMax","downloadHeatMapImage","svgElement","svgAsXML","XMLSerializer","serializeToString","encodeURIComponent","can","setTimeout","base_64","downloadPdfHeatMap","currentDate","PersonDesktop","isMenu","useSelector","state","ui","person","dateStartHourPerson","dateEndHourPerson","dateStartHourMalePerson","dateEndHourMalePerson","dateStartHourFemalePerson","dateEndHourFemalePerson","dateStartWeekPerson","dateEndWeekPerson","dateStartWeekMalePerson","dateEndWeekMalePerson","dateStartWeekFemalePerson","dateEndWeekFemalePerson","dateStartMonthPerson","dateEndMonthPerson","dateStartMonthMalePerson","dateEndMonthMalePerson","dateStartMonthFemalePerson","dateEndMonthFemalePerson","dateStartAgePerson","dateEndAgePerson","add","ChartJS","Rectangle","prototype","draw","signX","signY","borderSkipped","this","_chart","vm","_view","config","horizontal","base","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","strokeStyle","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","nextCornerId","floor","x_tl","x_tr","y_tl","y_tr","x_bl","x_br","y_bl","y_br","lineTo","quadraticCurveTo","stroke","getStartVehicles","getVehicles","vehicleHours","vehicleDaysOfWeek","vehicleDaysOfMonth","totalToday","todayPercent","yesterdayTotal","weekTotal","weekPercent","monthTotal","maxHour","maxWeek","maxMonth","setHoursGrafic","setWeekVehicles","setWeekGrafic","setMonthVehicles","setMonthGrafic","GraficWeek","TimeRealButton","dispath","isTimeReal","setTimeReal","isInterval","setIsInterval","callbackTimeReal","idInterval","setInterval","clearInterval","reload","ScrollButton","refVehicle","refPerson","active","scrollTo","offsetTop","GraficGrilla","typeVehicle","PlateData","offset","q","rangeDate","initLoading","totalPlates","plates","topPLateMonth","top_plate_month","countPlate","topPlate","top_plate","inicialdataplate","setDatePlates","initChangeDate","inicialplatesearch","QonteoMobile","vehicle","bus","car","bike","suv","truck","other","countTypes","countTodayTypes","todayPercentTypes","countYesterdayTypes","countWeekTypes","weekPercentTypes","plate","dateStartHourVehicle","dateEndHourVehicle","dateStartWeekVehicle","dateEndWeekVehicle","dateStartMonthVehicle","dateEndMonthVehicle","van","creation_date","current_date","creationDate","occurency","QonteoScreen","isMobile","isBrowser","isSmartTV","BoxPLate","textTop","nveces","SearchScreen","dateStartPlate","dateEndPlate","currentPage","setCurrentPage","lINputPlate","valueInput","resetForm","PlateSearch","handlePageChange","page","searchValue","aria-colspan","colSpan","client_p","membership_p","limit","pageCount","pages","hasNextPage","hasPreviousPage","previousPage","nextPage","getPageItemProps","totalPages","role","pageValue","onPageChange","NavbarDesktop","pathname","useLocation","setIsMenu","HideMenuBar","activeClassName","clear","DashboardRouter","PublicRoute","Component","isAuthenticated","rest","render","props","PrivateRouter","AppRoute","Object","keys","require","initialize","dateStartTypesVehicle","dateEndTypesVehicle","initial","isTimes","isSortPlate","isSortDate","isSortByHour","isSortByLocation","isSortByClient","isSortByMembership","init","rootReducer","combineReducers","action","sort","b","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","QonteoApp","ReactDOM"],"mappings":"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","file":"static/js/main.f0b73c11.chunk.js","sourcesContent":["export const types={\n    groupUrl: 'dashboard',\n    groupName: 'Qonteo',\n    groupId: '12169343',\n    \n    authChecking:'[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish Checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authLogout: '[auth] Logout',\n\n    dataVehicles: '[vehicles] inicialize data',\n    setHoursVehicles:'[Vehicles] Change grafic hours',\n    setWeeksVehicles:'[Vehicles] Change grafic Week',\n    setMonthsVehicles:'[Vehicles] Change grafic Month',\n\n    dataPersons: '[Persons] inicialize data',\n    getMapHeat:'[Person Grafic] get HeatMap',\n \n    setHoursPersons:'[Persons] change grafic hours Total',\n    setHoursPersonsMale:'[Persons] change grafic hours male',\n    setHoursPersonsFemale:'[Persons] change grafic hours female',\n    setWeekPersons:'[Persons] Change grafic Week total',\n    setWeekPersonsMale:'[Persons] Change grafic Week male',\n    setWeekPersonsFemale:'[Persons] Change grafic Week female',\n    setMonthGraficPersons:'[Persons] Change grafic Month total',\n    setMonthGraficPersonsMale:'[Persons] Change grafic Month male',\n    setMonthGraficPersonsFemale:'[Persons] Change grafic Month female',\n    setGraficRangesAges:'[Persons] Change grafic Age Ranges',\n    changeDate:'[Date] set New Date',\n\n    setDateStartHourVehicle:'[Date] change date start hour vehicle',\n    setDateEndHourVehicle:'[Date] change date End hour vehicle',\n    setDateStartWeekVehicle:'[Date] change date start Week vehicle',\n    setDateEndWeekVehicle:'[Date] change date End Week vehicle',\n    setDateStartMonthVehicle:'[Date] change date start Month vehicle',\n    setDateEndMonthVehicle:'[Date] change date End Month vehicle',\n\n    setDateStartHourPerson:'[Date] change date start hour Person',\n    setDateEndHourPerson:'[Date] change date End hour Person',\n    setDateStartHourMalePerson:'[Date] change date start hour Male Person',\n    setDateEndHourMalePerson:'[Date] change date End hour Male Person',\n    setDateStartHourFemalePerson:'[Date] change date start hour Female Person',\n    setDateEndHourFemalePerson:'[Date] change date End hour Female Person',\n    setDateStartWeekPerson:'[Date] change date start Week Person',\n    setDateEndWeekPerson:'[Date] change date End Week Person',\n    setDateStartWeekMalePerson:'[Date] change date start Week Male Person',\n    setDateEndWeekMalePerson:'[Date] change date End Week Male Person',\n    setDateStartWeekFemalePerson:'[Date] change date start Week Female Person',\n    setDateEndWeekFemalePerson:'[Date] change date End Week Female Person',\n    setDateStartMonthPerson:'[Date] change date start Month Person',\n    setDateEndMonthPerson:'[Date] change date End Month Male Person',\n    setDateStartMonthMalePerson:'[Date] change date start Month Male Person',\n    setDateEndMonthMalePerson:'[Date] change date End Month Person',\n    setDateStartMonthFemalePerson:'[Date] change date start Month Female Person',\n    setDateEndMonthFemalePerson:'[Date] change date End Month Female Person',\n    setDateStartAgePerson:'[Date] change date start Age Person',\n    setDateEndAgePerson:'[Date] change date End Age Person',\n    setDateStartPlate:'[Date] change date start Plate',\n    setDateEndPlate:'[Date] change date End Plate',\n    \n    uiMenu: '[UI] Menu',\n    uiMenuHide: '[UI] Menu Hide',\n\n    getPlate:'[Plate] get plate',\n    startLoadingPlate:'[Plate] start loading',\n    searchPlate:'[Plate] search Plate',\n    sortByPlate:'[Plate] Sort By PLate',\n    sortByDate:'[Plate] Sort By Date',\n    sortByHour:'[Plate] Sort By Hour',\n    sortByLocation:'[Plate] Sort By Location',\n    sortByTimes:'[Plate] Sort By Times',\n    sortByClient:'[Plate] Sort By Client',\n    sortByMembership:'[Plate] Sort by Menbership',\n    setPlatesCurrenDate:'[Plate] Set Date Plate',\n\n    dataTypeVehicle:'[Type Vehicle] Init Data'\n}","const baseUrl=process.env.REACT_APP_API_URL;\n\nconst fetchSinToken=(endpoint,data,method='GET')=>{\n    const token = localStorage.getItem('token-qonteo') || '';\n    const url=`${baseUrl}/${endpoint}`;\n    if(method==='GET'){\n        return fetch(url,{\n            headers:{\n                Authorization:token\n            }\n        })\n    }else{\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify(data)\n        })\n    }\n}\n\nconst fetchConToken=(endpoint,data,method='GET')=>{\n    \n    const url=`${baseUrl}${endpoint}`;\n    const token=localStorage.getItem('token-qonteo') || '';\n    if(method==='GET'){\n        return fetch(url,{\n            method,\n            headers:{\n                'Authorization':token\n            }\n        })\n    }else if(method==='POST'){\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'Authorization':token\n            },\n            body: JSON.stringify(data)\n        })\n    }else{\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Authorization':token\n            },\n            body:data \n        })\n    }\n}\n\n\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import { fetchSinToken } from '../helpers/fetch'\nimport { types } from '../types/types';\nimport swal from 'sweetalert2'\n\nexport const startLogin = ({ token, user },groupId) => {\n    return async (dispatch) => {\n\n        localStorage.setItem('token-qonteo',`bear ${token}`)\n        localStorage.setItem('id-user-qonteo', user._id)\n        localStorage.setItem('group-id-qonteo',groupId.toString())\n        localStorage.setItem('token-init-date-qonteo', new Date().getTime())\n        dispatch(login({\n            uid: user._id,\n            firstNames: user.firstNames,\n            lastName: user.lastName,\n            email: user.email,\n            phonenumber: user.phonenumber,\n            portraitUrl: user.portrait_url,\n            country: user.country,\n            groups:user.groups,\n            city: user.city,\n            isCheking:true\n        }))\n    }\n}\n\n\nexport const startRegister = (firstName, lastName, email, password) => {\n    return async () => {\n       try {\n        const resp = await fetchSinToken('register', { email, firstName, lastName, password }, 'POST');\n        const body = await resp.json();\n        if (!body.meta.status) {\n            console.log(\"there was an error creating the user\")\n        }\n       } catch (error) {\n         console.log(error)  \n       }\n    }\n}\n\n\nexport const startChecking = (dispatch) => {\n    return async(dispatch) => {\n        const token=localStorage.getItem('token-qonteo') || '';\n        \n        if(token){\n            try {\n            \n                    const resp = await (await fetchSinToken('token-renew')).json();\n                    if (Object.keys(resp).length>0) {\n                        const { user }=resp;\n                        dispatch(login({\n                            uid: user._id,\n                            firstNames: user.firstNames,\n                            lastName: user.lastName,\n                            email: user.email,\n                            phonenumber: user.phonenumber,\n                            portraitUrl: user.portrait_url,\n                            country: user.country,\n                            city: user.city,\n                            groups:user.groups,\n                            isCheking:true\n                        }))\n                        \n                    }\n                } catch (error) {\n                    dispatch(checkingStart())\n                    console.log('error')\n                }\n        }else{\n            console.log('no token')\n            dispatch(checkingStart())\n        }\n    }\n}\nexport const checkingStart = () => ({ type: types.authChecking })\n\nexport const checkingFinish = () => ({ type: types.authCheckingFinish })\n\nexport const logout = () => ({ type: types.authChecking });\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n","import React from 'react'\n\nexport const IconsAuth = () => {\n    return (\n        <div className=\"iconos\">\n        <div className=\"group_img\">\n            <img src=\"../assets/iconos/camara.svg\" alt=\"\" />\n            <img src=\"../assets/iconos/auto.svg\" alt=\"\" />\n            <img src=\"../assets/iconos/person.svg\" alt=\"\" />\n\n        </div>\n    </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n\n    const [values, setValues] = useState(initialState);\n    const reset = () => {\n  \n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React, { useRef } from 'react'\nimport {useDispatch } from 'react-redux'\nimport { startLogin } from '../../actions/auth';\nimport { fetchSinToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\n\nexport const ChooseGroup = ({groups,data}) => {\n    const select = useRef(null)\n    const dispatch = useDispatch();\n    const selectGroup=async ()=>{\n        const codeAndName=select.current.value.split(',');\n        if(codeAndName[0]===types.groupId){\n            const resp = await fetchSinToken('login', data, 'POST');\n            const body = await resp.json();\n            return dispatch(startLogin(body,codeAndName[0]));\n        }\n        window.location.href=`https://${codeAndName[1]}.qonteo.com/`;\n    }\n    return (\n        <div className=\"chooseGroup\">\n            <select ref={select} name=\"groupNumber\">\n                <option hidden >Seleccione un grupo</option>\n                {groups.map((g, i) => (\n                    <option key={i} value={[g.id,g.name]}>{g.code}</option>\n                ))}\n              \n            </select>\n            <button className=\"btn choose\" onClick={selectGroup} >Ir</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { IconsAuth } from './IconsAuth'\nimport { useForm } from '../../hooks/useForm'\nimport { startLogin } from '../../actions/auth'\nimport { useDispatch } from 'react-redux'\nimport { fetchSinToken } from '../../helpers/fetch'\n\nimport Swal from 'sweetalert2'\nimport { ChooseGroup } from './ChooseGroup'\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ({ history }) => {\n    const [error, setError] = React.useState(false);\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [isSelect, setIsSelect] = React.useState(false);\n    const [countGroup, setcountGroup] = React.useState([])\n\n    const dispatch = useDispatch();\n\n    const [fields, inputChange] = useForm({\n        email: '',\n        password: ''\n    })\n    const { email, password } = fields;\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            if (email !== '' && password !== '') {\n                setIsLoading(true);\n                const resp = await (await fetchSinToken('login', fields, 'POST')).json();\n                if (!!resp.errors) {\n                    setIsLoading(false);\n                    return Swal.fire('Error', 'Las credenciales son invalidas', 'error');\n                };\n\n                const { user: { groups } } = resp\n                setIsLoading(false);\n                console.log(\"GRPUPS\", groups);\n                if (groups.length === 0 || !groups) return setError('No tiene acceso a este sitio')\n                if (groups.length === 1 && groups[0].name !== types.groupName) return setError('No pertenece a este grupo')\n                if (groups.length === 1 && groups[0].name === types.groupName) return dispatch(startLogin(resp));\n\n                setIsSelect(true);\n                setcountGroup(groups);\n                return;\n            }\n            Swal.fire('Error', 'Los campos no pueden estar vacios', 'error')\n\n        } catch (error) {\n            throw new Error('ocurrio un error al realizar la peticion')\n        }\n\n\n    }\n\n    return (\n        <div className=\"front_formulario contenedor\">\n            <IconsAuth />\n\n            <div className=\"contenedor\">\n                {!isSelect\n                    ? (\n                        <>\n                            <span className=\"error spaceTopSmall d-block text-center\">{error && error}</span>\n                            <form onSubmit={handleLogin} className=\"formLogin spaceBottomSmall\" >\n                                <input type=\"text\" name=\"email\"\n                                    onChange={inputChange}\n                                    placeholder=\"Correo electrónico\"\n                                    value={email}\n                                />\n                                <input type=\"password\"\n                                    name=\"password\"\n                                    onChange={inputChange}\n                                    placeholder=\"Contraseña\"\n                                    value={password}\n                                />\n                                <div className=\"olvidaste_pass\">\n                                    <span>¿Olvidaste tu contraseña?</span>\n                                </div>\n\n                                <input type=\"submit\" value={isLoading ? 'Cargando...' : 'Iniciar Sesíon'} className=\"btn btn-login\" />\n                                <NavLink className=\"enlace_registro\" to=\"/auth/registrarse\">Registrarse</NavLink>\n                            </form>\n                        </>\n                    )\n                    :\n                    (\n                        <ChooseGroup groups={countGroup} data={fields} />\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { IconsAuth } from './IconsAuth'\nimport { NavLink } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm'\nimport { useDispatch } from 'react-redux'\nimport { startRegister } from '../../actions/auth'\n\n\nexport const RegisterScreen = ({history}) => {\n    const dispatch = useDispatch()\n    const [inputValue,inputChange]=useForm({\n        rFirstname:'',\n        rLastname:'',\n        rEmail:'',\n        rPassword:''\n    })\n    const {rFirstname,rLastname,rEmail,rPassword}=inputValue\n\n    const handletRegister=(e)=>{\n        e.preventDefault();\n        dispatch(startRegister(rFirstname,rLastname,rEmail,rPassword))\n        history.replace('/auth/login')\n    }\n\n    return (\n        <div className=\"front_formulario contenedor\">\n            <IconsAuth />\n\n        <form id=\"register_form\" onSubmit={handletRegister}>\n            <input type=\"text\" onChange={inputChange} value={rFirstname} name=\"rFirstname\" id=\"firstname\" autoComplete=\"off\" placeholder=\"Nombre\" />\n            <input type=\"text\" onChange={inputChange} value={rLastname} name=\"rLastname\" id=\"lastname\" autoComplete=\"off\" placeholder=\"Apellidos\" />\n            <input type=\"email\" onChange={inputChange} value={rEmail} name=\"rEmail\" id=\"correoregister\" autoComplete=\"off\" placeholder=\"Correo electrónico\" />\n            <input type=\"password\" onChange={inputChange} value={rPassword} name=\"rPassword\" id=\"contraregister\" autoComplete=\"off\" placeholder=\"Contraseña\" />\n            <div className=\"olvidaste_pass\">\n\n            </div>\n            <input type=\"submit\" value=\"Registrarse\" className=\"btn btn-login\" />\n        </form>\n        <NavLink className=\"enlace_registro\" to=\"/auth/login\">Ingresar</NavLink>\n    </div>\n    )\n}\n","import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <header>\n             <div className=\"site_header\">\n\n                <div className=\"left_logo\">\n                    <img id=\"logoDataPerformanceMobile\"  src=\"../assets/imagenes/logo.png\"  alt=\"logo_qonteo\"/>\n                </div>\n                <div className=\"right_text\">\n                    <h1 className=\"text_p\">\n                        Data <br></br> Street <br></br> Performance\n                    </h1>\n                </div>\n            </div>\n            <div className=\"logo_soda\">\n            <img id=\"logoSodaMobile\" src=\"../assets/imagenes/soda_logo.png\" alt=\"logo_qonteo\" />\n            </div>\n\n        </header>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { LoginScreen } from '../components/Auth/LoginScreen'\nimport { RegisterScreen } from '../components/Auth/RegisterScreen'\nimport { Navbar } from '../components/ui/Navbar'\n\nexport const AuthRouter = () => {\n    return (\n        <>\n            <div>\n            <Navbar />\n                <Switch>\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\n                    <Route exact path=\"/auth/registrarse\" component={RegisterScreen} />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </>\n    )\n}\n","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const getPersondata = () => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-person-graphics?heatmap_p=true&age_range_p=true&group_id=${groupId}`);\n        const body = await resp.json();\n        console.log(\"RESP\", body);\n        \n        const { today_total, today_female, today_male, heatmap, heatmap_range,\n            yesterday_total, yesterday_female, yesterday_male,\n            week_total, week_female, week_male,\n            month_total, month_female, month_male,\n            hours, week, month,\n            ageRanges, today_percent, today_percent_female, today_percent_male, week_percent,\n            max_hour, max_hour_female, max_hour_male,\n            max_week_day, max_week_day_female, max_week_day_male,\n            max_month_day, max_month_day_female,\n            max_month_day_male } = body;\n\n        const linehoyhoursT = hours.map(h => {\n            return {\n                \"time\": h.time,\n                \"hour\": h.hour,\n                \"total\": h.total\n            }\n        })\n\n        const linehoyhoursM = hours.map(h => {\n            return {\n                \"time\": h.time,\n                \"hour\": h.hour,\n                \"male\": h.male\n            }\n        })\n        const linehoyhoursF = hours.map(h => {\n            return {\n                \"time\": h.time,\n                \"hour\": h.hour,\n                \"female\": h.female\n            }\n        })\n        const linehoursweekT = week.map(h => {\n            return {\n                \"dow\": h.dow,\n                \"total\": h.total\n            }\n        })\n\n        const linehoursweekM = week.map(h => {\n            return {\n                \"dow\": h.dow,\n                \"male\": h.male\n            }\n        })\n        const linehoursweekF = week.map(h => {\n            return {\n                \"dow\": h.dow,\n                \"female\": h.female\n            }\n        })\n        const lineMonthT = month.map(h => {\n            return {\n                \"day\": h.day,\n                \"total\": h.total\n            }\n        })\n        const lineMonthM = month.map(h => {\n            return {\n                \"day\": h.day,\n                \"male\": h.male\n            }\n        })\n        const lineMonthF = month.map(h => {\n            return {\n                \"day\": h.day,\n                \"female\": h.female\n            }\n        })\n\n        dispatch(getData({\n            hoursPerson: linehoyhoursT,\n            hoursPersonFemale: linehoyhoursF,\n            hoursPersonMale: linehoyhoursM,\n            weekPerson: linehoursweekT,\n            weekPersonMale: linehoursweekM,\n            weekPersonFemale: linehoursweekF,\n            monthPerson: lineMonthT,\n            monthPersonFemale: lineMonthF,\n            monthPersonMale: lineMonthM,\n            heatmapPerson: heatmap,\n            heatmapRangePerson: heatmap_range,\n            ageRangePerson: ageRanges,\n            totalTodayPerson: today_total,\n            totalTodayPersonFemale: today_female,\n            totalTodayPersonMale: today_male,\n            todayPercentPerson: today_percent,\n            todayPercentFemalePerson: today_percent_female,\n            todayPercentMalePerson: today_percent_male,\n            totalYesterdayPerson: yesterday_total,\n            totalYesterdayFemalePerson: yesterday_female,\n            totalYesterdayMalePerson: yesterday_male,\n            maxHourPerson: max_hour,\n            maxHourFemalePerson: max_hour_female,\n            maxHourMalePerson: max_hour_male,\n            maxWeekPerson: max_week_day,\n            maxWeekFemalePerson: max_week_day_female,\n            maxWeekMalePerson: max_week_day_male,\n            maxMonthPerson: max_month_day,\n            maxMonthFemalePerson: max_month_day_female,\n            maxMonthMalePerson: max_month_day_male,\n            totalWeekPerson: week_total,\n            totalWeekFemale: week_female,\n            totalWeekMale: week_male,\n            weekPercentPerson: week_percent,\n            totalMonthPerson: month_total,\n            totalMonthFemalePerson: month_female,\n            totalMonthMalePerson: month_male\n        }))\n    }\n}\n\nexport const setHoursPersons = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n      \n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&date_to=${date_to}&group_id=${groupId}`);\n        const body = await resp.json();\n        const linehoyhours = body.hours;\n        const linehoyhoursT=linehoyhours.map(h=>{\n            return {\n                \"time\":h.time,\n                \"hour\":h.hour,\n                \"total\":h.total\n            }\n        })\n        const max_hour = body.max_hour;\n        dispatch(initSetGraficHoursPersons({\n            hoursPerson:linehoyhoursT,\n            maxHourPerson:max_hour\n        }))\n    }\n}\n\n\nexport const setHoursPersonsMale = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&date_to=${date_to}&group_id=${groupId}`);\n        const body = await resp.json();\n        console.log(body)\n        const linehoyhours = body.hours;\n        const linehoyhoursM=linehoyhours.map(h=>{\n            return {\n                \"time\":h.time,\n                \"hour\":h.hour,\n                \"male\":h.male\n            }\n        })\n        const max_hour_male = body.max_hour_male;\n        dispatch(initSetGraficHoursPersonsMale({\n            hoursPersonMale:linehoyhoursM,\n            maxHourMalePerson:max_hour_male\n        }))\n    }\n\n}\n\nexport const setHoursPersonsFemale = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&date_to=${date_to}&group_id=${groupId}`);\n        const body = await resp.json();\n        console.log(body)\n        const linehoyhours = body.hours;\n        const linehoyhoursF=linehoyhours.map(h=>{\n            return {\n                \"time\":h.time,\n                \"hour\":h.hour,\n                \"female\":h.female\n            }\n        })\n        const max_hour_female = body.max_hour_female;\n        dispatch(initSetGraficHoursPersonsFemale({\n            hoursPersonFemale:linehoyhoursF,\n            maxHourFemalePerson:max_hour_female\n        }))\n    }\n\n}\n/****WEEK */\n\nexport const setWeekPersons = (date_from,date_to) => {\n    return async (dispatch) => {\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&date_to=${date_to}`);\n        const body = await resp.json();\n        const linehoursweek = body.week;\n        const linehoursweekT=linehoursweek.map(h=>{\n            return {\n                \"dow\":h.dow,\n                \"total\":h.total\n            }\n        })\n        const max_week_dayP = body.max_week_day;\n        dispatch(initSetGraficWeekPersons({\n            weekPerson:linehoursweekT,\n            maxWeekPerson:max_week_dayP\n        }))\n    }\n\n}\nexport const setWeekPersonsMale = (date_from,date_to) => {\n    return async (dispatch) => {\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&date_to=${date_to}`);\n        const body = await resp.json();\n        const linehoursweek = body.week;\n        const linehoursweekM=linehoursweek.map(h=>{\n            return {\n                \"dow\":h.dow,\n                \"male\":h.male\n            }\n        })\n        const max_week_day_male = body.max_week_day_male;\n        dispatch(initSetGraficWeekPersonsMale({\n            weekPersonMale: linehoursweekM,\n            maxWeekMalePerson:max_week_day_male\n        }))\n    }\n\n}\n\n\nexport const setWeekPersonsFemale = (date_from,date_to) => {\n    return async (dispatch) => {\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&date_to=${date_to}`);\n        const body = await resp.json();\n        const linehoursweek = body.week;\n        const linehoursweekF=linehoursweek.map(h=>{\n            return {\n                \"dow\":h.dow,\n                \"female\":h.female\n            }\n        })\n        const max_week_day_female = body.max_week_day_female;\n        dispatch(initSetGraficWeekPersonsFemale({\n            weekPersonFemale:linehoursweekF,\n            maxWeekFemalePerson:max_week_day_female\n        }))\n    }\n\n}\n\n/******MONTH PERSONS */\n\nexport const setMonthPerson = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n         const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code==='CO.PMXCO.BOG.A01')[0].id;\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&group_id=${groupId}date_to=${date_to}`);\n        const body = await resp.json();\n        const lineMonth = body.month;\n\n        const lineMonthT=lineMonth.map(h=>{\n            return {\n                \"day\":h.day,\n                \"total\":h.total\n            }\n        })\n        const max_month_dayP = body.max_month_day;\n        dispatch(initSetGraficMonthPerson({\n            monthPerson:lineMonthT,\n            maxMonthPerson:max_month_dayP\n        }))\n    }\n\n}\n\nexport const setMonthPersonMale = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&group_id=${groupId}date_to=${date_to}`);\n        const body = await resp.json();\n        const lineMonth = body.month;\n\n        const lineMonthM=lineMonth.map(h=>{\n            return {\n                \"day\":h.day,\n                \"male\":h.male\n            }\n        })\n        const max_month_day_male = body.max_month_day_male;\n        dispatch(initSetGraficMonthPersonMale({\n            monthPersonMale:lineMonthM,\n            maxMonthMalePerson:max_month_day_male\n        }))\n    }\n\n}\n\n\nexport const setMonthPersonFemale = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&group_id=${groupId}date_to=${date_to}`);\n        const body = await resp.json();\n        const lineMonth = body.month;\n\n        const lineMonthF=lineMonth.map(h=>{\n            return {\n                \"day\":h.day,\n                \"female\":h.female\n            }\n        })\n        const max_month_day_female = body.max_month_day_female;\n        dispatch(initSetGraficMonthPersonFemale({\n            monthPersonFemale:lineMonthF,\n            maxMonthFemalePerson:max_month_day_female\n        }))\n    }\n\n}\n\nexport const setGraficRangeAges = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-person-graphics?date_from=${date_from}&group_id=${groupId}date_to=${date_to}&age_range_p=true`);\n        const body = await resp.json();\n        const {ageRanges}=body;\n        dispatch(initSetGraficRangeAges({\n            ageRangePerson:ageRanges\n        }))\n    }\n\n}\n\nconst getData = (data) => ({\n    type: types.dataPersons,\n    payload: data\n})\n\nconst initSetGraficHoursPersons = (data) => ({\n    type: types.setHoursPersons,\n    payload: data\n})\n\nconst initSetGraficHoursPersonsMale = (data) => ({\n    type: types.setHoursPersonsMale,\n    payload: data\n})\n\nconst initSetGraficHoursPersonsFemale = (data) => ({\n    type: types.setHoursPersonsFemale,\n    payload: data\n})\n\n\n\nconst initSetGraficWeekPersons = (data) => ({\n    type: types.setWeekPersons,\n    payload: data\n})\n\nconst initSetGraficWeekPersonsMale = (data) => ({\n    type: types.setWeekPersonsMale,\n    payload: data\n})\n\nconst initSetGraficWeekPersonsFemale = (data) => ({\n    type: types.setWeekPersonsFemale,\n    payload: data\n})\n\nconst initSetGraficMonthPerson = (data) => ({\n    type: types.setMonthGraficPersons,\n    payload: data\n})\n\nconst initSetGraficMonthPersonMale = (data) => ({\n    type: types.setMonthGraficPersonsMale,\n    payload: data\n})\n\nconst initSetGraficMonthPersonFemale = (data) => ({\n    type: types.setMonthGraficPersonsFemale,\n    payload: data\n})\n\nconst initSetGraficRangeAges = (data) => ({\n    type: types.setGraficRangesAges,\n    payload: data\n})\n","import React from 'react'\n\n\nexport const BoxPrimary = React.memo(({ date, cantidad=0, text1, text2,bg='bg-primary',textHeadLeft='',textBottom='',dateEnd='' }) => {\n    return (\n        <div className={`box_v1 box ${bg}`}>\n            <div className={`header_box uifecha_t ${textHeadLeft && '_d_flex_btw'}`}>\n                {textHeadLeft!=='' && (<img src={`./assets/iconos/${textHeadLeft}`} alt=\"icon_vehicle\"/>)}\n                {dateEnd!=='' ? (<div className=\"__d_flex __flex_column\">\n                        <span>{date}</span>\n                    <span>{dateEnd}</span></div>)\n                    :\n                    <span>{date}</span>\n                }\n            </div>\n            <div className=\"body_box\">\n                {textBottom==='' && <span className=\"text-white text-uppercase\">{text2}</span>}\n                <div className=\"number\" id=\"uihoy1\">{cantidad}</div>\n                <span className=\"text-white text-normal\">{text1}</span>\n                {textBottom!=='' && <span className=\"text-white\">{textBottom}</span>}\n            </div>\n        </div>\n    )\n})\n","const formatNumber=(num)=> {\n    if(num===null){\n        return 0\n    }\n    return num?.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\n\n\nconst porcentajepersona=(total=100, num=20)=> {\n    const resultado=Math.round((num * 100) / total);\n    return resultado;\n}\n\n\n\nexport {\n    formatNumber,\n    porcentajepersona,\n}","import React from 'react'\n\nimport {formatNumber } from '../../helpers/calculo';\n\nexport const BoxSecondary = React.memo(({count,percent=0, text1,text2,ispercent=false,initDate=null,endDate=null}) => {\n    return (\n        <div className=\"box_2 box bg-white mt\">\n            <div className=\"content\">\n                <div className=\"header_box percent\" id=\"uiayerper1\">\n                    \n                    { \n                    (percent===0 && ispercent===false && initDate==null && endDate==null) ? (<span></span>)\n                    :\n                    initDate!==null  ? (<><span>{initDate}</span><span>{endDate}</span></>) : \n                    percent>=0\n                        ?\n                        (\n                        <>\n                        <img className=\"arrow_e\"\n                        src=\"../assets/iconos/icon-flecha.png\" \n                        alt=\"box_percent\" />\n                        \n                        <span className='positive_num' >+ {percent} %</span>\n                        </>\n                        )\n                        : \n                        (\n                        <>\n                        <img className=\"arrow_e\"\n                        src=\"../assets/iconos/arrow_low.png\" \n                        alt=\"box_percent\" />\n                        <span className='negative_num'> {percent} %</span>\n                        </>\n                        )\n                    }\n                   </div>\n                <div className=\"body_box mobil\">\n                    <div className=\"number\" id=\"uiayer1\">{formatNumber(count)}</div>\n                    <span>{text1}</span>\n                    <span>{text2}</span>\n                </div>\n            </div>\n        </div>\n    )\n})\n","import React from 'react'\nimport { formatNumber, porcentajepersona } from '../../helpers/calculo'\n\nexport const BoxSex = React.memo(({ total=0,count=100, textsex,bg='primary',color='grey',sex='men',txttop=null,textBottom='' }) => {\n    \n    return (\n        <div className={`box person bg-${bg}`}>\n            <div className=\"content text-center\">\n                {txttop && <span className={`text-${color} _text_day_box`}>{txttop}</span>}\n                <div className=\"header_box percent icon_person\">\n\n                    <img className=\"imgperson\"\n                    src={`../assets/iconos/${sex}-${color}.svg`} alt=\"box_percent\" /></div>\n                \n                <div className=\"body_box mobil\">\n                    <div className={`number text-${color}`} id=\"uipersonm1\">{formatNumber(count)}</div>\n                    <span className={`text-${color}`}>{textsex}</span>\n                    {textBottom!=='' ? \n                    <span className={`text-${color}`}>{textBottom}</span>    \n                    :\n                    <span className={`text-${color}`} id=\"uipersonperce1m\">{(isNaN(porcentajepersona(total,count)) || porcentajepersona(total,count)===Number.POSITIVE_INFINITY ) ? 0 : porcentajepersona(total,count) } %</span>\n                    }\n                    \n                    </div>\n            </div>\n        </div>\n    )\n})\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Bar } from 'react-chartjs-2';\nexport const GraficHours = React.memo(({ data, label, dtsetbg, optionbg, scalebg, title, labelop, legendbg = 'black', sexo, scltxtlbl, pl = 0, pr = 0, pb = 0, pt = 0 }) => {\n    const [graficData, setGraficData] = useState([]);\n    const [isScaleText, setIsScaleText] = useState(false);\n  \n    const getData =useCallback(\n        ()=>{\n            if (!!sexo ) {\n                if (sexo === 'male') {\n                   return setGraficData(data.map(a => a.male))\n                }\n                if(sexo==='female'){\n                    return setGraficData(data.map(a => a.female))\n\n                }\n\n                  return setGraficData(data.map(a => a.total)) \n            }\n            \n            setGraficData(data.map(a => a.total))\n        },[data,sexo]\n    )\n\n    const scaleText=useCallback(\n        () => {\n            \n            if (!!scltxtlbl) {\n                return setIsScaleText(true)\n            }\n            setIsScaleText(false)\n            \n        },\n        [setIsScaleText,scltxtlbl]\n    )\n\n\n\n    useEffect(() => {\n        getData()\n        scaleText()\n    }, [getData,scaleText])\n\n\n\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\">\n                    <img src=\"./assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <Bar data={\n\n                        {\n            \n                            labels: data.map(a => a.hour),\n                            datasets: [\n                                {\n                                    label: `${label}`,\n            \n                                    backgroundColor: `${dtsetbg}`,\n                                    data: graficData,\n                                    borderWidth: 0\n                                },\n            \n                            ],\n                            borderWidth: 0\n                        }\n            \n                    }\n                        options={{\n            \n                            cornerRadius: 20,\n                            title: {\n                                display: true,\n            \n                                fontSize: 30,\n                                fontColor: `${optionbg}`,\n                                fontFamily: 'Barlow',\n                                fontStyle: 400,\n                            },\n                                layout:{\n                                        padding:{\n                                            left: pl,\n                                            right: pr,\n                                            top: pt,\n                                            bottom: pb\n                                        },\n                                },\n                            legend: {\n                                position: 'bottom',\n                                labels: {\n                                    padding: 20,\n                                    boxWidth: 15,\n                                    fontSize: 18,\n                                    fontFamily: 'Barlow',\n                                    fontColor: `${legendbg}`\n                                }\n                            },\n                            tooltips: {\n                                enabled: true,\n                                mode: 'single',\n                                callbacks: {\n                                    title: function (tooltipItem, datax) {\n            \n                                        return `${title}` + data[tooltipItem[0].index].time;\n                                    },\n                                    label: function (tooltipItems, data) {\n                                        return `${labelop}` + tooltipItems.yLabel;\n                                    },\n                                }\n                            },\n                            maintainAspectRatio: false,\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        fontColor: `${scalebg}`,\n                                        fontSize: 18,\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 600,\n                                        beginAtZero: true,\n            \n                                    },\n                                    gridLines: {\n                                        display: false\n                                    }\n                                    ,\n                                    scaleLabel: {\n                                        display: isScaleText,\n                                        labelString: `${scltxtlbl}`,\n                                        fontSize: 18,\n            \n                                    }\n            \n                                }],\n            \n                                xAxes: [{\n                                    ticks: {\n                                        fontColor: `${scalebg}`,\n                                        fontSize: 18,\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 600,\n            \n                                        beginAtZero: true\n                                    },\n                                    gridLines: {\n                                        display: false\n                                    }\n                                }]\n                            },\n                            \n                        }}\n                    />\n                )\n            }\n        </>\n    )\n})\n","import React, { useCallback, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { useEffect } from 'react';\nexport const GraficWeekLine = ({ data, label, dtsetbg, optionbg, scalebg, title, labelop, legendbg = 'black', sexo = null, lineColor = \"#5BCDFA\", scltxtlbl = \"Cantidad de vehículos\", pl = 0, pr = 0, pb = 0, pt = 0 }) => {\n    const [graficData, setGraficData] = useState([]);\n\n\n    const getData = useCallback(\n        () => {\n            if (!!sexo) {\n                if (sexo === 'male') {\n                    return setGraficData(data.map(a => a.male))\n                }\n                if (sexo === 'female') {\n                    return setGraficData(data.map(a => a.female))\n\n                }\n\n                return setGraficData(data.map(a => a.total))\n            }\n\n            setGraficData(data.map(a => a.total))\n        }, [data, sexo]\n    )\n\n\n\n\n\n    useEffect(() => {\n        getData()\n\n    }, [getData])\n\n\n\n\n\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\">\n                    <img src=\"./assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <Line data={\n                        {\n                            labels: data.map(a => a.dow),\n                            datasets: [\n                                {\n                                    label: `${label}`,\n            \n                                    backgroundColor: `${dtsetbg}`,\n                                    data: graficData,\n                                    lineTension: 0.1,\n                                    borderDashOffset: 0.0,\n                                    borderJoinStyle: 'miter',\n                                    borderCapStyle: 'butt',\n                                    pointBorderWidth: 1,\n                                    pointHoverRadius: 5,\n                                },\n            \n                            ],\n                            borderWidth: 1\n                        }\n            \n                    }\n                        options={\n            \n                            {\n            \n                                cornerRadius: 20,\n                                title: {\n                                    display: true,\n                                    /*   text: ['TOTAL VEHÍCULOS POR HORA DEL DÍA', '', ''], */\n                                    fontSize: 30,\n                                    padding: 50,\n                                    fontColor: `${optionbg}`,\n                                    fontFamily: 'Barlow',\n                                    fontStyle: 400,\n                                },\n            \n                                layout: {\n                                    padding: {\n                                        left: pl,\n                                        right: pr,\n                                        top: pt,\n                                        bottom: pb\n                                    },\n                                },\n            \n            \n                                legend: {\n                                    position: 'bottom',\n                                    labels: {\n                                        padding: 20,\n                                        boxWidth: 15,\n                                        fontSize: 18,\n                                        fontFamily: 'Barlow',\n                                        fontColor: `${legendbg}`\n                                    }\n                                },\n                                elements: {\n                                    line: {\n                                        borderWidth: 5,\n                                        fill: false,\n                                        borderColor: `${lineColor}`,\n                                        tension: .5,\n                                    },\n            \n                                    point: {\n                                        radius: 6,\n            \n            \n                                    }\n                                },\n                                tooltips: {\n                                    enabled: true,\n                                    mode: 'single',\n                                    callbacks: {\n                                        title: function (tooltipItem, datax) {\n            \n                                            return `${title} ` + data[tooltipItem[0].index].dow;\n                                        },\n                                        label: function (tooltipItems, data) {\n                                            return `${labelop} ` + tooltipItems.yLabel;\n                                        },\n                                    }\n                                },\n                                maintainAspectRatio: false,\n                                scales: {\n                                    yAxes: [{\n                                        ticks: {\n                                            fontColor: `${scalebg}`,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontStyle: 600,\n                                            beginAtZero: true,\n            \n                                        },\n                                        gridLines: {\n            \n                                            display: true,\n                                            drawBorder: false,\n                                            zeroLineColor: '#FEE700',\n                                            zeroLineWidth: 3,\n            \n            \n                                        },\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: `${scltxtlbl}`,\n                                            fontSize: 18,\n            \n                                        }\n            \n                                    }],\n                                    xAxes: [{\n                                        ticks: {\n                                            fontColor: `${scalebg}`,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontStyle: 600,\n                                            beginAtZero: true\n                                        },\n                                        gridLines: {\n                                            display: false,\n            \n                                        }\n                                    }],\n            \n                                },\n            \n                            }}\n                    />\n                )\n            }\n        </>\n\n    )\n}\n","import React, { useCallback, useState } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport { useEffect } from 'react';\nexport const GraficMonth = ({data,label,dtsetbg,optionbg,scalebg,title,labelop,legendbg='black',sexo=null,scltxtlbl,pl=0,pr=0,pb=0,pt=0}) => {\n    const [graficData, setGraficData] = useState([]);\n    const [isScaleText, setIsScaleText] = useState(false);\n  \n    const getData =useCallback(\n        ()=>{\n            if (!!sexo ) {\n                if (sexo === 'male') {\n                   return setGraficData(data.map(a => a.male))\n                }\n                if(sexo==='female'){\n                    return setGraficData(data.map(a => a.female))\n\n                }\n\n                  return setGraficData(data.map(a => a.total)) \n            }\n            \n            setGraficData(data.map(a => a.total))\n        },[data,sexo]\n    )\n\n    const scaleText=useCallback(\n        () => {\n            \n            if (!!scltxtlbl) {\n                return setIsScaleText(true)\n            }\n            setIsScaleText(false)\n            \n        },\n        [setIsScaleText,scltxtlbl]\n    )\n\n\n\n    useEffect(() => {\n        getData()\n        scaleText()\n    }, [getData,scaleText])\n    \n    \n    \n\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\">\n                    <img src=\"./assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <Bar data={\n                        {\n                            labels: data.map(a =>  a.day),\n                            datasets: [\n                                { \n                                    label: `${label}`,\n                                    \n                                    backgroundColor: `${dtsetbg}`,\n                                    data:graficData,\n                                    borderWidth: 0\n                                },\n            \n                            ],\n                            borderWidth: 0\n                        }\n            \n                    }\n                        options={{\n                            cornerRadius: 20,\n                            title: {\n                                display: true,\n                              /*   text: ['TOTAL VEHÍCULOS POR HORA DEL DÍA', '', ''], */\n                                fontSize: 30,\n                                padding: 50,\n                                fontColor: `${optionbg}`,\n                                fontFamily: 'Barlow',\n                                fontStyle: 400,\n                            },\n                            layout:{\n                                padding:{\n                                    left: pl,\n                                    right: pr,\n                                    top: pt,\n                                    bottom: pb\n                                },\n                        },\n            \n            \n                            legend: {\n                                position: 'bottom',\n                                labels: {\n                                    padding: 20,\n                                    boxWidth: 15,\n                                    fontSize: 18,\n                                    fontFamily: 'Barlow',\n                                    fontColor: `${legendbg}`\n                                }\n                            },\n                            tooltips: {\n                                enabled: true,\n                                mode: 'single',\n                                callbacks: {\n                                     title: function (tooltipItem, datax) {\n            \n                                        return `${title} ` + data[tooltipItem[0].index].day;\n                                    }, \n                                    label: function (tooltipItems, data) {\n                                        return `${labelop} ` + tooltipItems.yLabel;\n                                    },\n                                }\n                            },\n                            maintainAspectRatio: false,\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        fontColor: `${scalebg}`,\n                                        fontSize: 18,\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 600,\n                                        beginAtZero: true,\n            \n                                    },\n                                    gridLines: {\n                                        display: false\n                                    },\n                                    scaleLabel: {\n                                        display: isScaleText,\n                                        labelString: `${scltxtlbl}`,\n                                        fontSize: 18,\n            \n                                      }\n            \n                                }],\n                                xAxes: [{\n                                    ticks: {\n                                        fontColor: `${scalebg}`,\n                                        fontSize: 18,\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 600,\n            \n                                        beginAtZero: true\n                                    },\n                                    gridLines: {\n                                        display: false\n                                    }\n                                }]\n                            },\n            \n                        }}\n                    />\n                )\n            }\n        </>\n    )\n}\n","import React, { useRef, useEffect, memo } from 'react'\nimport * as d3 from 'd3'\nimport moment from 'moment'\nexport const GraficGrillaDesktop = memo(({data}) => {\n\n    const ref = useRef()\n\n    useEffect(() => {\n\n            tablehours(data)\n        \n            return ()=>{\n                 validarref()\n            }\n    }, [data])\n\n    const validarref=()=>{\n        ref.current.querySelector('svg')!==null && ref.current.querySelector('svg').remove()\n    }\n\n    const tablehours = (data) => {\n\n\n        const dias_semana = [];\n        for (let i = 6; i >= 0; i--) {\n            dias_semana.push(moment().subtract(i, 'days').format(\"DD/MM\"))\n        }\n\n\n\n        if (data.length > 0) {\n            const margin = { top: 30, right: 200, bottom: 200, left: 50 },\n                width = 900 - margin.left - margin.right,\n                height = 950 - margin.top - margin.bottom;\n\n\n            const svg = d3.select(ref.current)\n                .attr(\"align\", \"center\")\n\n                .append(\"svg\")\n                .attr(\"width\", 700)\n                .attr(\"height\", 750)\n                .append(\"g\")\n\n                .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n            const myVars = [\"23:00\", \"22:00\", \"21:00\", \"20:00\", \"19:00\", \"18:00\", \"17:00\", \"16:00\", \"15:00\", \"14:00\", \"13:00\", \"12:00\", \"11:00\", \"10:00\", \"09:00\", \"08:00\", \"07:00\", \"06:00\", \"05:00\", \"04:00\", \"03:00\", \"02:00\", \"01:00\", \"00:00\"];\n\n            const x = d3.scaleBand()\n                .range([0, width])\n                .domain(dias_semana)\n                .padding(0.01);\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0, 0)\")\n                .call(d3.axisTop(x))\n\n\n            // Build X scales and axis:\n            const y = d3.scaleBand()\n                .range([height, 0])\n                .domain(myVars)\n                .padding(0.01);\n            svg.append(\"g\")\n                .call(d3.axisLeft(y));\n            const range = data.map(r => r.total)\n            // Build color scale\n            const myColor = d3.scaleQuantile()\n                .range(['#5BCDFA', '#5EAFFE', '#4782F5', '#3450EF', '#0502D3'])\n                //\t\t\t\t\t\t\t\t\t\t  .range([\"#63be7b\", \"#f8696b\"])\n                .domain(range)\n            const rectContainer = svg.selectAll()\n                .data(data, function (d) { return d.date + ':' + d.time; })\n                .enter().append(\"g\")\n                .attr(\"transform\", function (d) {\n                    let hora = d.time.replace('h', ':00');\n\n                    return \"translate(\" + (x(d.date)) + \",\" + (y(hora)) + \")\"\n                });\n\n            /* svg.append(\"text\")\n                .attr(\"x\", 525)\n                .attr(\"y\", 720)\n                .attr(\"text-anchor\", \"left\")\n                .style(\"font-size\", \"30px\")\n                .style(\"font-family\", \"Barlow\")\n                .text(\"Total\"); */\n\n            rectContainer.append(\"rect\")\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", y.bandwidth())\n                .style(\"fill\", function (d) { return myColor(d.total) })\n\n            rectContainer.append(\"text\")\n            .attr(\"x\", (x.bandwidth()) / 2)\n            .attr(\"y\", ((y.bandwidth()) / 2) + 4)\n            .text(function (d) { return d.total })\n            .style(\"font-family\", \"Barlow\")\n            .style(\"font-size\", \"8pt\")\n            .style('fill', 'white')\n            .style(\"text-anchor\", \"middle\")\n\n        }\n\n\n\n    }\n    return (\n        <div className=\"mt text-center\"\n        ref={ref}\n    ></div>\n    )\n}\n)","import { types } from \"../types/types\";\n\nexport const setStartDateHourVehicle=(data)=>({type:types.setDateStartHourVehicle,payload:data})\nexport const setEndDateHourVehicle=(data)=>({type:types.setDateEndHourVehicle,payload:data})\n\nexport const setStartDateWeekVehicle=(data)=>({type:types.setDateStartWeekVehicle,payload:data})\nexport const setEndDateWeekVehicle=(data)=>({type:types.setDateEndWeekVehicle,payload:data})\n\nexport const setStartDateMonthVehicle=(data)=>({type:types.setDateStartMonthVehicle,payload:data})\nexport const setEndDateMonthVehicle=(data)=>({type:types.setDateEndMonthVehicle,payload:data})\n\n\nexport const setStartDateHourPerson=(data)=>({type:types.setDateStartHourPerson,payload:data})\nexport const setEndDateHourPerson=(data)=>({type:types.setDateEndHourPerson,payload:data})\n\nexport const setStartDateHourMalePerson=(data)=>({type:types.setDateStartHourMalePerson,payload:data})\nexport const setEndDateHourMalePerson=(data)=>({type:types.setDateEndHourMalePerson,payload:data})\n\nexport const setStartDateHourFemalePerson=(data)=>({type:types.setDateStartHourFemalePerson,payload:data})\nexport const setEndDateHourFemalePerson=(data)=>({type:types.setDateEndHourFemalePerson,payload:data})\n\nexport const setStartDateWeekPerson=(data)=>({type:types.setDateStartWeekPerson,payload:data})\nexport const setEndDateWeekPerson=(data)=>({type:types.setDateEndWeekPerson,payload:data})\n\n\nexport const setStartDateWeekMalePerson=(data)=>({type:types.setDateStartWeekMalePerson,payload:data})\nexport const setEndDateWeekMalePerson=(data)=>({type:types.setDateEndWeekMalePerson,payload:data})\n\nexport const setStartDateWeekFemalePerson=(data)=>({type:types.setDateStartWeekFemalePerson,payload:data})\nexport const setEndDateWeekFemalePerson=(data)=>({type:types.setDateEndWeekFemalePerson,payload:data})\n\nexport const setStartDateMonthPerson=(data)=>({type:types.setDateStartMonthPerson,payload:data})\nexport const setEndDateMonthPerson=(data)=>({type:types.setDateEndMonthPerson,payload:data})\n\n\nexport const setStartDateMonthMalePerson=(data)=>({type:types.setDateStartMonthMalePerson,payload:data})\nexport const setEndDateMonthMalePerson=(data)=>({type:types.setDateEndMonthMalePerson,payload:data})\n\nexport const setStartDateMonthFemalePerson=(data)=>({type:types.setDateStartMonthFemalePerson,payload:data})\nexport const setEndDateMonthFemalePerson=(data)=>({type:types.setDateEndMonthFemalePerson,payload:data})\n\nexport const setStartDateAgePerson=(data)=>({type:types.setDateStartAgePerson,payload:data})\nexport const setEndDateAgePerson=(data)=>({type:types.setDateEndAgePerson,payload:data})\n\n\n\nexport const setStartDatePlate=(data)=>({type:types.setDateStartPlate,payload:data})\nexport const setEndDatePlate=(data)=>({type:types.setDateEndPlate,payload:data})\nexport const setDate=(start,startvalue,end,endvalue) => ({\n    type: types.changeDate,\n    start,\n    startvalue,\n    end,\n    endvalue\n})","import React, {useState } from 'react'\nimport moment from 'moment'\nimport es from 'date-fns/locale/es';\nimport Swal from 'sweetalert2'\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch } from 'react-redux';\n\nregisterLocale('es', es)\n\nexport const DateChange = React.memo(({startDate,endDate,method,methodStart,methodEnd,flexColumn=true,isPlate=false,methodPlate,inputReset}) => {\n    const dispatch = useDispatch();\n    const [startDateValue, setStartDateValue] = useState(new Date(startDate))\n    const [endDateValue, setEndDateValue] = useState(new Date(endDate))\n\n    const changeInitDate=(date)=>{\n    \n        const momentStart=moment(date);\n        const momentEnd=moment(endDateValue);\n        if(momentStart.isAfter(momentEnd)){\n            return Swal.fire('Error','La fecha Inicio debe ser menor que la fecha de fin','error')\n        }\n\n        setStartDateValue(date)\n        dispatch(method(moment(date).format('YYYY-MM-DD'),moment(endDateValue).format('YYYY-MM-DD')))\n        dispatch(methodStart(moment(date).format('YYYY-MM-DD')))\n        if(isPlate){\n            methodPlate(1)\n        }\n        if(inputReset){\n            document.querySelector(inputReset).value=''\n        }\n    }\n    \n\n    const changeEndDate=(date)=>{\n        const momentStart=moment(startDateValue);\n        const momentEnd=moment(date);\n        if(momentStart.isSameOrAfter(momentEnd)){\n            return Swal.fire('Error','La fecha fin debe ser mayor que la fecha de inicio','error')\n        }\n        setEndDateValue(date)\n        dispatch(method(moment(startDateValue).format('YYYY-MM-DD'),moment(date).format('YYYY-MM-DD')))    \n        dispatch(methodEnd(moment(date).format('YYYY-MM-DD')))\n        if(isPlate){\n            methodPlate(1)\n        }\n        if(inputReset){\n            document.querySelector(inputReset).value=''\n        }\n    }\n\n\n\n\n    return (\n        <div className={`__date_change ${flexColumn ? '__flex_column' : '' } `}>\n            <div className=\"content_date\">\n                <img src=\"./assets/iconos/Calendario.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={startDateValue}\n                    locale=\"es\"\n                    onChange={changeInitDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n                    \n                />\n            </div>\n            <div className=\"content_date\">\n                <img src=\"./assets/iconos/Calendario.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={endDateValue}\n                    locale=\"es\"\n                    onChange={changeEndDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n\n                />\n            </div>\n        </div>\n    )\n})\n","import React, {useState } from 'react'\nimport moment from 'moment'\nimport es from 'date-fns/locale/es';\nimport Swal from 'sweetalert2'\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch } from 'react-redux';\nregisterLocale('es', es)\n\nexport const DateChangeMonth = React.memo(({startDate,endDate,method,methodStart,methodEnd,flexColumn=true}) => {\n    const dispatch = useDispatch();\n    const [startDateValue, setStartDateValue] = useState(new Date(startDate))\n    const [endDateValue, setEndDateValue] = useState(new Date(endDate))\n\n    const changeInitDate=(date)=>{\n        const momentStart=moment(date);\n        const momentEnd=moment(endDateValue);\n        if(momentStart.isAfter(momentEnd)){\n            return Swal.fire('Error','La fecha Inicio debe ser menor que la fecha de fin','error')\n        }\n        setStartDateValue(date)\n        dispatch(method(moment(date).format('YYYY-MM-DD'),moment(endDateValue).format('YYYY-MM-DD')))\n        dispatch(methodStart(moment(date).format('YYYY-MM-DD')))\n    }\n    \n\n    const changeEndDate=(date)=>{\n        const momentStart=moment(startDateValue);\n        const momentEnd=moment(date);\n        if(momentStart.isAfter(momentEnd)){\n            return Swal.fire('Error','La fecha fin debe ser mayor que la fecha de inicio','error')\n        }\n        setEndDateValue(new Date(date.getFullYear(), date.getMonth() + 1, 0))\n        dispatch(method(moment(startDateValue).format(\"YYYY-MM-DD\"), moment(date).endOf('month').format(\"YYYY-MM-DD\")))   \n        dispatch(methodEnd(moment(date).endOf('month').format(\"YYYY-MM-DD\")))\n    }\n\n\n\n\n    return (\n        <div className={`__date_change ${flexColumn ? '__flex_column' : '' } `}>\n            <div className=\"content_date\">\n                <img src=\"./assets/iconos/Calendario.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={startDateValue}\n                    locale=\"es\"\n                    onChange={changeInitDate}\n                    format='yyyy-MM-dd'\n                    showMonthYearPicker\n                />\n            </div>\n            <div className=\"content_date\">\n                <img src=\"./assets/iconos/Calendario.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={endDateValue}\n                    locale=\"es\"\n                    onChange={changeEndDate}\n                    format='yyyy-MM-dd'\n                    showMonthYearPicker\n                />\n            </div>\n        </div>\n    )\n})\n","import React, { useCallback, useEffect } from 'react'\nimport { useState } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nexport const HorizontalGrafic = ({dataAge,scltxtlbl}) => {\n    const [isScaleText, setIsScaleText] = useState(false);\n    const scaleText=useCallback(\n        () => {\n            \n            if (!!scltxtlbl) {\n                return setIsScaleText(true)\n            }\n            setIsScaleText(false)\n            \n        },\n        [setIsScaleText,scltxtlbl]\n    )\n    useEffect(() => {\n\n        scaleText()\n    }, [scaleText])\n    return (\n        <>\n        {dataAge.length === 0 ?\n            <div className=\"__loader_grafic\">\n                <img src=\"./assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n            </div> :\n            (\n                <HorizontalBar data={\n                    {\n                        labels: dataAge.map(a => a.range),\n                        datasets: [\n\n                            {\n                                label: 'Hombres',\n                                backgroundColor: '#0502D3',\n\n                                data: dataAge.map(a => a.male)\n                            },\n                            {\n                                label: 'Mujeres',\n                                backgroundColor: '#1EAEF0',\n                                data: dataAge.map(a => -1 * a.female)\n                            }\n                        ]\n                    }\n\n                }\n                    options={{\n                        cornerRadius: 20,\n                        title: {\n                            display: true,\n                            /*    text: ['TOTAL ACUMULADO PERSONAS POR GÉNERO', '', ''], */\n                            fontSize: 30,\n                            padding: 30,\n                            fontColor: '#454545',\n                            fontFamily: 'Barlow',\n                            fontStyle: 400\n                        },\n                        maintainAspectRatio: false,\n                        legend: {\n                            position: 'bottom',\n                            labels: {\n                                padding: 20,\n                                boxWidth: 15,\n                                fontFamily: 'system-ui',\n                                fontColor: 'black'\n                            },\n                            reverse: true\n                        },\n\n\n\n                        tooltips: {\n                            titleFontSize: 20,\n                            xPadding: 20,\n                            yPadding: 20,\n                            bodyFontSize: 15,\n                            bodySpacing: 10,\n                            callbacks: {\n                                title: function (tooltipItem, data) {\n                                    return \"Edad:  \" + data.labels[tooltipItem[0].index] + ' años';\n                                },\n                                label: function (tooltipItem, data) {\n                                    var value = Math.sign(data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]) === -1 ? data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] * -1 : data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]\n\n\n                                    return data.datasets[tooltipItem.datasetIndex].label + ': ' + value;\n\n\n                                }\n                            }\n                        },\n                        elements: {\n                            line: {\n                                borderWidth: 8,\n                                fill: false\n                            },\n\n                        },\n\n                        scales: {\n                            xAxes: [\n                                {\n                                    stacked: false,\n                                    ticks: {\n                                        beginAtZero: true,\n                                    },\n                                    gridLines: {\n                                        display: false\n                                    }\n                                },\n\n                            ],\n                            yAxes: [\n                                {\n                                    stacked: true,\n                                    ticks: {\n                                        beginAtZero: true,\n                                    },\n                                    gridLines: {\n                                        display: false\n                                    },\n                                    scaleLabel: {\n                                        display: isScaleText,\n                                        labelString: \"Edad\",\n                                        fontSize: 18,\n\n                                    },\n                                    position: \"left\",\n                                }\n                            ],\n                        }\n\n                    }}\n                />\n            )\n        }\n    </>\n   \n    )\n}\n","import moment from 'moment'\nimport jsPDF from 'jspdf'\nimport { saveAs } from 'file-saver';\nimport { fetchConToken } from \"./fetch\";\n\nconst downloadImage = async (grafic, text, bgColor, numberX, initDate, finDate, interval, type) => {\n    const canvas = document.querySelector(`#${grafic} canvas:last-of-type`);\n    let ctx = canvas.getContext(\"2d\");\n    ctx.font = \"bold 12px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`${text}`, parseInt(numberX), 50); //10\n\n    ctx.font = \"9px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`${moment(initDate).format(\"YYYY/MM/DD\")} - ${moment(finDate).format(\"YYYY/MM/DD\")}`, 120, 85);\n\n    ctx.font = \"11px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`Reporte generado ${moment().format(\"YYYY-MM-DD HH:mm:ss\")} CO.PMXCO.BOG.A01`, 30, 70);\n    const img = document.getElementById(\"logoDataPerformanceMobile\");\n    ctx.drawImage(img, 10, 10, 40, 20);\n\n    const img2 = document.getElementById(\"logoSodaMobile\");\n    ctx.drawImage(img2, 290, 15, 40, 10);\n\n    ctx.globalCompositeOperation = 'destination-over';\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n    const url_base64jp = canvas.toDataURL(\"image/jpg\");\n    ctx.clearRect(10, 37, 600, 30);\n    ctx.clearRect(35, 70, 300, 50);\n\n    const linkHref = document.createElement('a');\n\n    const resp = await fetchConToken('/upload-image', {\n        data: {\n            user_id: \"704\",\n            type,\n            interval,\n            date_from: moment(initDate).format('YYYY/MM/DD\"'),\n            date_to: moment(finDate).format('YYYY/MM/DD\"'),\n            image: url_base64jp\n        }\n    }, 'POST');\n    const body = await resp.json();\n    linkHref.setAttribute('target', '__blank');\n    linkHref.href = body.url;\n    linkHref.click();\n}\nconst exportGraficVehicle = async (type,interval,dateFrom,dateTo) => {\n    const peticion=await fetchConToken('/export', {\n        \"type\": type,\n        \"format\": \"csv\",\n        \"interval\": interval,\n        \"date_from\":dateFrom,\n        \"date_to\":dateTo\n    },'POST')\n    const json=await peticion.blob();\n    return json;\n}\n\nconst exportExcel = (type, inititalDate, endDate, filename) => {\n    exportGraficVehicle('p', type, moment(inititalDate).format(\"YYYY-MM-DD\"), moment(endDate).format(\"YYYY-MM-DD\")).then(r => saveAs(r, `DSP-SODA-CO-PMXCO-BOG-A01-${moment(inititalDate).format(\"YYYYMMDD\")}-${moment(endDate).format(\"YYYYMMDD\")}-TOTAL-${filename}.csv`))\n}\n\nconst exportPdf = (grafic, initDate, finDate, title, text, year) => {\n\n    const url_base64jp = document.querySelector(`#${grafic} canvas`).toDataURL(\"image/jpg\");\n    const doc = new jsPDF('l', 'pt');\n    const img = new Image()\n    img.src = './assets/pdf/logoleft.png'\n    const img2 = new Image()\n    img2.src = './assets/pdf/logorigth.png'\n    doc.addImage(img, 'png', 30, 10, 100, 20)\n    doc.addImage(img2, 'png', 750, 13, 65, 15)\n\n    doc.text(250, 90, title)\n\n    doc.setFontSize(9);\n    doc.text(650, 140, `Rango: ${moment(initDate).format(\"YYYY/MM/DD\")} - ${moment(finDate).format(\"YYYY/MM/DD\")}`)\n\n    doc.setFontSize(9);\n    doc.text(50, 140, text)\n\n\n    if (year === true) {\n        doc.setFontSize(13);\n        doc.text(330, 180, `${moment(initDate).format(\"MMMM\").toUpperCase()} ${moment(initDate).format(\"YYYY\")} - ${moment(finDate).format(\"MMMM\").toUpperCase()} ${moment(initDate).format(\"YYYY\")}`)\n    }\n\n\n\n    doc.addImage(url_base64jp, 'jpg', 120, 150, 600, 400);\n\n\n    doc.setFontSize(9);\n    doc.text(50, 570, `Reporte generado ${moment().format(\"YYYY-MM-DD HH:mm:ss\")} CO.PMXCO.BOG.A01`)\n\n\n    doc.save(`DSP-SODA-CO-PMXCO-BOG-A01-${moment(initDate).format(\"YYYYMMDD\")}-${moment(finDate).format(\"YYYYMMDD\")}-${title.replace(/\\s/g, '-')}.pdf`)\n}\n\nconst downloadImageDesktop = (grafic, text, initDate, finDate, bgColor, numberX, interval, type, textMax, year = false) => {\n    const canvas = document.querySelector(`#${grafic} canvas:last-of-type`);\n    let ctx = canvas.getContext(\"2d\");\n\n    ctx.font = \"25px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`${text}`, numberX, 60);\n\n\n    ctx.font = \"18px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`${textMax}`, 20, 150);\n\n    if (year === true) {\n        ctx.font = \"18px Barlow\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(`${moment(initDate).format(\"MMMM\").toUpperCase()} ${moment(initDate).format(\"YYYY\")} - ${moment(finDate).format(\"MMMM\").toUpperCase()} ${moment(initDate).format(\"YYYY\")}`, 480, 200);\n    }\n\n    ctx.font = \"18px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`Rango: ${moment(initDate).format(\"YYYY/MM/DD\")} - ${moment(finDate).format(\"YYYY/MM/DD\")}`, 800, 150);\n\n    ctx.font = \"15px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`Reporte generado ${moment().format(\"YYYY-MM-DD HH:mm:ss\")} CO.PMXCO.BOG.A01`, 30, 750, canvas.width);\n    const img = document.getElementById(\"logoDataPerformance\");\n    ctx.drawImage(img, 40, 40, 200, 40);\n    const img2 = document.getElementById(\"logoSoda\");\n    ctx.drawImage(img2, 970, 50, 100, 25);\n\n    ctx.globalCompositeOperation = 'destination-over';\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n\n    const url_base64jp = canvas.toDataURL(\"image/jpg\")\n    ctx.clearRect(250, 33, 1000, 30);\n    ctx.clearRect(380, 80, 600, 30);\n    ctx.clearRect(900, 740, 600, 50);\n    const linkHref = document.createElement('a');\n\n\n\n    fetchConToken('/upload-image', {\n        data: {\n            user_id: \"704\",\n            type,\n            interval,\n            date_from: moment(initDate).format('YYYY/MM/DD\"'),\n            date_to: moment(finDate).format('YYYY/MM/DD\"'),\n            image: url_base64jp\n        }\n    }, 'POST').then(resp => resp.json()).then((resp) => {\n        linkHref.setAttribute('target', '__blank');\n        linkHref.href = resp.url;\n        linkHref.click();\n    })\n}\n\n\n\nconst downloadHeatMapImage = () => {\n    const svgElement = document.querySelector('#heatmap svg');\n    const xml = new XMLSerializer()\n    const svgAsXML = xml.serializeToString(svgElement);\n    const url = \"data:image/svg+xml,\" + encodeURIComponent(svgAsXML);\n\n    const can = document.createElement('canvas'); // Not shown on page\n    can.width = 1100;\n    can.height = 800\n    const ctx = can.getContext('2d');\n    ctx.font = \"25px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText('TOTAL SEMANA-ACUMULADO PERSONAS POR HORA DEL DÍA', 270, 60);\n    ctx.font = \"16px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText('(Ultimos 7 Días)', 530, 90);\n\n    ctx.font = \"15px Barlow\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(`Reporte generado ${moment().format(\"YYYY-MM-DD HH:mm:ss\")} CO.PMXCO.BOG.A01`, 30, 780, can.width);\n    const img = document.getElementById(\"logoDataPerformance\");\n    ctx.drawImage(img, 40, 40, 200, 40);\n    const img2 = document.getElementById(\"logoSoda\");\n    ctx.drawImage(img2, 970, 50, 100, 25);\n\n    const image = document.createElement('img');\n    image.src = url;\n    const linkHref = document.createElement('a');\n    setTimeout(() => {\n        ctx.drawImage(image, 280, 125, 500, 600);\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.fillStyle = '#fff';\n        ctx.fillRect(0, 0, can.width, can.height);\n        ctx.restore();\n        const base_64 = can.toDataURL('image/png')\n\n        fetchConToken('/upload-image', {\n            data: {\n                user_id: \"704\",\n                type: 'p',\n                interval: 'hour',\n                date_from: moment().subtract(7, 'd').format('YYYY/MM/DD\"'),\n                date_to: moment().format('YYYY/MM/DD\"'),\n                image: base_64\n            }\n        }, 'POST').then(resp => resp.json()).then((resp) => {\n            linkHref.setAttribute('target', '__blank');\n            linkHref.href = resp.url;\n            linkHref.click();\n        })\n\n\n    }, 500);\n\n}\n\n\nconst downloadPdfHeatMap = () => {\n    const doc = new jsPDF('l', 'pt');\n    const img = new Image()\n    img.src = './assets/pdf/logoleft.png'\n    const img2 = new Image()\n    img2.src = './assets/pdf/logorigth.png'\n    doc.addImage(img, 'png', 30, 10, 100, 20)\n    doc.addImage(img2, 'png', 750, 13, 65, 15)\n\n    doc.text(190, 70, \"TOTAL SEMANA-ACUMULADO PERSONAS POR HORA DEL DÍA\")\n\n\n    doc.setFontSize(15);\n    doc.text(380, 100, \"(Ultimos 7 Días)\")\n\n\n    doc.setFontSize(9);\n    doc.text(50, 570, `Reporte generado ${moment().format(\"YYYY-MM-DD HH:mm:ss\")} CO.PMXCO.BOG.A01`)\n\n\n\n    const svgElement = document.querySelector('#heatmap svg');\n    const xml = new XMLSerializer();\n    const svgAsXML = xml.serializeToString(svgElement);\n    const url = \"data:image/svg+xml,\" + encodeURIComponent(svgAsXML);\n\n    const can = document.createElement('canvas'); // Not shown on page\n    can.width = 800;\n    can.height = 800\n    const ctx = can.getContext('2d');\n\n    const image = document.createElement('img');\n    image.src = url;\n\n    setTimeout(() => {\n        ctx.drawImage(image, 150, 125, 500, 600);\n        const base_64 = can.toDataURL('image/png')\n        doc.addImage(base_64, 'jpg', 170, 40, 500, 550);\n\n        doc.save(`DSP-SODA-CO-PMXCO-BOG-A01-MAPA-DE-CALOR-ULTIMOS-7-DIAS.pdf`)\n    }, 500);\n\n\n}\n\n\n\nexport {\n    downloadImage,\n    exportExcel,\n    exportPdf,\n    downloadImageDesktop,\n    downloadHeatMapImage,\n    downloadPdfHeatMap\n}","import React, { useEffect } from 'react'\nimport moment from 'moment'\nimport 'moment/locale/es';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPersondata, setHoursPersons, setHoursPersonsFemale, setHoursPersonsMale, setWeekPersons, setWeekPersonsFemale, setWeekPersonsMale,setMonthPerson,setMonthPersonMale,setMonthPersonFemale, setGraficRangeAges } from '../../actions/person';\nimport { BoxPrimary } from '../boxes/BoxPrimary';\nimport { BoxSecondary } from '../boxes/BoxSecondary';\nimport { BoxSex } from '../boxes/BoxSex';\nimport { formatNumber } from '../../helpers/calculo';\nimport { GraficHours } from '../grafics/GraficHours';\nimport { GraficWeekLine } from '../grafics/GraficWeekLine';\nimport { GraficMonth } from '../grafics/GraficMonth';\nimport { GraficGrillaDesktop } from '../grafics/GrillaDesktop';\nimport { setEndDateAgePerson, setEndDateHourFemalePerson, setEndDateHourMalePerson, setEndDateHourPerson, setEndDateMonthFemalePerson, setEndDateMonthMalePerson, setEndDateMonthPerson, setEndDateWeekFemalePerson, setEndDateWeekMalePerson, setEndDateWeekPerson, setStartDateAgePerson, setStartDateHourFemalePerson, setStartDateHourMalePerson, setStartDateHourPerson, setStartDateMonthFemalePerson, setStartDateMonthMalePerson, setStartDateMonthPerson, setStartDateWeekFemalePerson, setStartDateWeekMalePerson, setStartDateWeekPerson } from '../../actions/date';\nimport { DateChange } from '../date/DateChange';\nimport { DateChangeMonth } from '../date/DateChangeMonth';\nimport { HorizontalGrafic } from '../grafics/HorizontalGrafic';\nimport { downloadHeatMapImage, downloadImage, downloadImageDesktop, downloadPdfHeatMap, exportExcel, exportPdf } from '../../helpers/exports';\nimport { types } from '../../types/types';\n\nconst currentDate = moment().format(\"YYYY-MM-DD\");\nconst initDate = moment('2020-07-01').format(\"YYYY-MM-DD\");\n\nexport const PersonDesktop = () => {\n    const dispatch = useDispatch();\n    const { isMenu } = useSelector(state => state.ui);\n    const {\n        hoursPerson,\n        hoursPersonFemale,\n        hoursPersonMale,\n        weekPerson,\n        weekPersonMale,\n        weekPersonFemale,\n        monthPerson,\n        monthPersonFemale,\n        monthPersonMale,\n        heatmapPerson,\n        heatmapRangePerson,\n        ageRangePerson,\n        totalTodayPerson,\n        totalTodayPersonFemale,\n        totalTodayPersonMale,\n        todayPercentPerson,\n        totalYesterdayPerson,\n        totalYesterdayFemalePerson,\n        totalYesterdayMalePerson,\n        maxHourPerson,\n        maxHourFemalePerson,\n        maxHourMalePerson,\n        maxWeekPerson,\n        maxWeekFemalePerson,\n        maxWeekMalePerson,\n        maxMonthPerson,\n        maxMonthMalePerson,\n        maxMonthFemalePerson,\n        totalWeekPerson,\n        totalWeekFemale,\n        totalWeekMale,\n        weekPercentPerson,\n        totalMonthPerson,\n        totalMonthFemalePerson,\n        totalMonthMalePerson\n    } = useSelector(state => state.person);\n\n    const {\n        dateStartHourPerson, dateEndHourPerson,\n        dateStartHourMalePerson, dateEndHourMalePerson,\n        dateStartHourFemalePerson, dateEndHourFemalePerson,\n        dateStartWeekPerson, dateEndWeekPerson,\n        dateStartWeekMalePerson, dateEndWeekMalePerson,\n        dateStartWeekFemalePerson, dateEndWeekFemalePerson,\n        dateStartMonthPerson,dateEndMonthPerson,\n        dateStartMonthMalePerson,dateEndMonthMalePerson,\n        dateStartMonthFemalePerson,dateEndMonthFemalePerson,\n        dateStartAgePerson, dateEndAgePerson\n    } = useSelector(state => state.date);\n\n    \n\n\n    useEffect(() => {\n        dispatch(getPersondata());\n    }, [dispatch])\n\n    \n    return (\n        <div className={`_d__grid ${!isMenu ? \"active\" : \"\"}`}>\n            <div>\n            </div>\n            <div className=\"contenedor contet_index \">\n                <div className=\"title __desktop mb mt\">\n                    <span className=\"text-primary\">{types.groupName}</span>\n                </div>\n                <h2 className=\"mt __title_\">Personas</h2>\n\n                <div className=\"__grilla_4 __padding_especial\">\n                   {/*  <BoxPrimary date={currentDate} cantidad={totalTodayPerson} text1=\"Personas en total\" text2=\"hoy\" /> */}\n                    <BoxSecondary ispercent={true} percent={todayPercentPerson} count={totalYesterdayPerson} text1=\"ayer\" text2=\"Personas en total\" />\n                    <BoxSecondary ispercent={true} percent={weekPercentPerson} count={totalWeekPerson} text1=\"Esta semana\" text2=\"Personas en total\" />\n                    <BoxSecondary count={totalMonthPerson} text1=\"Total\" text2=\"Personas en total\" initDate={initDate} endDate={currentDate} />\n                </div>\n\n                <div className=\"__grilla_4 mt\">\n                  {/*   <BoxSex total={totalTodayPerson} count={totalTodayPersonMale}\n                        color=\"white\" textsex=\"hombres\"\n                        txttop=\"HOY\"\n                    /> */}\n                    <BoxSex total={totalYesterdayPerson}\n                        count={totalYesterdayMalePerson} bg=\"white\"\n                        textsex=\"hombres\" txttop=\"AYER\" />\n                    <BoxSex total={totalWeekPerson}\n                        count={totalWeekMale}\n                        bg=\"white\" textsex=\"hombres\"\n                        txttop=\"ESTA SEMANA\"\n                    />\n                    <BoxSex txttop=\"TOTAL\" total={totalMonthPerson} count={totalMonthMalePerson} bg=\"white\" textsex=\"hombres\" />\n                </div>\n\n\n                <div className=\"__grilla_4 mt\">\n                 {/*    <BoxSex txttop=\"HOY\" total={totalTodayPerson} count={totalTodayPersonFemale} bg=\"secondario\" color=\"white\" textsex=\"Mujeres\" sex=\"woman\" /> */}\n                    <BoxSex txttop=\"AYER\" total={totalYesterdayPerson} count={totalYesterdayFemalePerson} bg=\"white\" textsex=\"Mujeres\" sex=\"woman\" />\n                    <BoxSex txttop=\"ESTA SEMANA\" total={totalWeekPerson} count={totalWeekFemale} bg=\"white\" textsex=\"Mujeres\" sex=\"woman\" />\n                    <BoxSex txttop=\"TOTAL\" total={totalMonthPerson} count={totalMonthFemalePerson} bg=\"white\" textsex=\"Mujeres\" sex=\"woman\" />\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de personas por hora del día</h2>\n\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Hora más transitada: {maxHourPerson.hour} con {formatNumber(maxHourPerson.total)} personas</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setHoursPersons}\n                        methodStart={setStartDateHourPerson}\n                        methodEnd={setEndDateHourPerson}\n                        flexColumn={false}\n                    />\n                \n                </div>\n\n                <div id=\"graficHours\" className=\"exportImgCanvas chart-containerv2 mt bg-yellow w-100\">\n\n                    <GraficHours data={hoursPerson} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Personas:\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        scalebg=\"#0502D3\" />\n                    <GraficHours data={hoursPerson} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Personas:\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        scalebg=\"#0502D3\"\n                        pl={50}\n                        pr={50}\n                        pt={200}\n                        pb={30}\n                    />\n                    <div className=\"title_todayhoras __export_data\">\n                          <img onClick={() => exportExcel('hour', dateStartHourPerson, dateEndHourPerson, 'DE-PERSONAS-POR-HORA-DEL-DIA')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                        <img onClick={() => exportPdf('graficHours', dateStartHourPerson, dateEndHourPerson,\n                            'TOTAL DE PERSONAS POR HORA DEL DÍA',\n                            `HORA MÁS TRANSITADA: ${maxHourPerson.hour} CON ${formatNumber(maxHourPerson.total)} PERSONAS`)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                        <img onClick={() => downloadImageDesktop('graficHours', 'TOTAL DE PERSONAS POR HORA DEL DÍA', dateStartHourPerson, dateEndHourPerson, '#fee700', 380,\n                            'hour', 'P', `HORA MÁS TRANSITADA: ${maxHourPerson.hour} CON ${formatNumber(maxHourPerson.total)} PERSONAS`)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de hombres por hora del día</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Hora más transitada: {maxHourMalePerson.hour} con {formatNumber(maxHourMalePerson.total)} hombres</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setHoursPersonsMale}\n                        methodStart={setStartDateHourMalePerson}\n                        methodEnd={setEndDateHourMalePerson}\n                        flexColumn={false}\n                    />\n                </div>\n\n\n                <div id=\"graficHoursMale\" className=\"exportImgCanvas chart-containerv2 mt  w-100\">\n\n                    <GraficHours data={hoursPersonMale} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        labelop=\" Total de Hombres:\"\n                        scalebg=\"#0502D3\"\n                        sexo=\"male\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                    />\n                    <GraficHours data={hoursPersonMale} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        labelop=\" Total de Hombres:\"\n                        scalebg=\"#0502D3\"\n                        sexo=\"male\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        pl={50}\n                        pr={50}\n                        pt={200}\n                        pb={30}\n                    />\n\n                    <div className=\"title_todayhoras __export_data\">\n                           <img onClick={() => exportExcel('hour', dateStartHourMalePerson, dateEndHourMalePerson, 'DE-HOMBRES-POR-HORA-DEL-DIA')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                        <img onClick={() => exportPdf('graficHoursMale', dateStartHourMalePerson, dateEndHourMalePerson,\n                            'TOTAL DE HOMBRES POR HORA DEL DÍA',\n                            `HORA MÁS TRANSITADA: ${maxHourMalePerson.hour} CON ${formatNumber(maxHourMalePerson.total)} PERSONAS`)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                        <img onClick={() => downloadImageDesktop('graficHoursMale', 'TOTAL DE HOMBRES POR HORA DEL DÍA', dateStartHourMalePerson, dateEndHourMalePerson, '#fff', 380,\n                            'hour', 'P', `HORA MÁS TRANSITADA: ${maxHourMalePerson.hour} CON ${formatNumber(maxHourMalePerson.total)} PERSONAS`)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de mujeres por hora del día</h2>\n\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Hora más transitada: {maxHourFemalePerson.hour} con {formatNumber(maxHourFemalePerson.total)} mujeres</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setHoursPersonsFemale}\n                        methodStart={setStartDateHourFemalePerson}\n                        methodEnd={setEndDateHourFemalePerson}\n                        flexColumn={false}\n                    />\n                </div>\n\n\n\n                <div id=\"graficHoursFemale\" className=\"exportImgCanvas chart-containerv2 mt  w-100\">\n                    <GraficHours data={hoursPersonFemale} label=\"Total de Mujeres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        labelop=\" Total de Mujeres:\"\n                        scalebg=\"#0502D3\"\n                        sexo=\"female\"\n                        scltxtlbl=\"Cantidad de Mujeres\"\n                    />\n                    <GraficHours data={hoursPersonFemale} label=\"Total de Mujeres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        labelop=\" Total de Mujeres:\"\n                        scalebg=\"#0502D3\"\n                        sexo=\"female\"\n                        scltxtlbl=\"Cantidad de Mujeres\"\n                        pl={50}\n                        pr={50}\n                        pt={200}\n                        pb={30}\n                    />\n\n                    <div className=\"title_todayhoras __export_data\">\n                         <img onClick={() => exportExcel('hour', dateStartHourFemalePerson, dateEndHourFemalePerson,'DE-MUJERES-POR-HORA-DEL-DIA')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                        <img onClick={() => exportPdf('graficHoursFemale', dateStartHourFemalePerson, dateEndHourFemalePerson,\n                            'TOTAL DE MUJERES POR HORA DEL DÍA',\n                            `HORA MÁS TRANSITADA: ${maxHourFemalePerson.hour} CON ${formatNumber(maxHourFemalePerson.total)} PERSONAS`)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                       <img onClick={() => downloadImageDesktop('graficHoursFemale',\n                        'TOTAL DE MUJERES POR HORA DEL DÍA',\n                        dateStartHourFemalePerson, dateEndHourFemalePerson, '#fff', 380, 'hour', 'P',`HORA MÁS TRANSITADA: ${maxHourFemalePerson.hour} CON ${formatNumber(maxHourFemalePerson.total)} PERSONAS`)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de personas por días de la semana</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Día de la semana más transitado: {maxWeekPerson.day} con {formatNumber(maxWeekPerson.total)} personas</div>\n                    <DateChange startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setWeekPersons}\n                        methodStart={setStartDateWeekPerson}\n                        methodEnd={setEndDateWeekPerson}\n                        flexColumn={false}\n                    />\n                    \n                </div>\n                <div className=\"mt\">\n                    <div id=\"graficWeek\" className=\"exportImgCanvas chart-container w-100\">\n                        <GraficWeekLine\n                            data={weekPerson}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            labelop=\"tránsito de personas\"\n                            scltxtlbl=\"Cantidad de Personas\"\n                        />\n                        <GraficWeekLine\n                            data={weekPerson}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            labelop=\"tránsito de personas\"\n                            scltxtlbl=\"Cantidad de Personas\"\n                            pl={50}\n                            pr={50}\n                            pt={200}\n                            pb={30}\n                        />\n\n                        <div className=\"title_todayhoras __export_data\">\n                               <img onClick={() => exportExcel('week', dateStartWeekPerson, dateEndWeekPerson,'DE-PERSONAS-POR-DIA-DE-LA-SEMANA')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                            <img onClick={() => exportPdf('graficWeek', dateStartWeekPerson, dateEndWeekPerson,\n                                'TOTAL DE PERSONAS POR DÍA DE LA SEMANA',\n                                `DÍA MÁS TRANSITADA: ${maxWeekPerson.day} CON ${formatNumber(maxWeekPerson.total)} PERSONAS`)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                               <img onClick={() => downloadImageDesktop('graficWeek', 'TOTAL DE PERSONAS POR DÍAS DE LA SEMANA', dateStartWeekPerson, dateEndWeekPerson, '#fff', 330, 'week', 'P',`DÍA MÁS TRANSITADA: ${maxWeekPerson.day} CON ${formatNumber(maxWeekPerson.total)} PERSONAS`)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de hombres por días de la semana</h2>\n\n\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Día de la semana más transitado: {maxWeekMalePerson.day} con {formatNumber(maxWeekMalePerson.total)} hombres</div>\n                    <DateChange startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setWeekPersonsMale}\n                        methodStart={setStartDateWeekMalePerson}\n                        methodEnd={setEndDateWeekMalePerson}\n                        flexColumn={false}\n                    />\n                </div>\n\n                <div className=\"mt\">\n                    <div id=\"graficWeekMale\" className=\"exportImgCanvas exportImgCanvas chart-container w-100\">\n                        <GraficWeekLine\n                            data={weekPersonMale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            sexo=\"male\"\n                            labelop=\"tránsito de Hombres\"\n                            scltxtlbl=\"Cantidad de Hombres\"\n                        />\n                        <GraficWeekLine\n                            data={weekPersonMale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            sexo=\"male\"\n                            labelop=\"tránsito de Hombres\"\n                            scltxtlbl=\"Cantidad de Hombres\"\n                            pl={50}\n                            pr={50}\n                            pt={200}\n                            pb={30}\n                        />\n\n                        <div className=\"title_todayhoras __export_data\">\n                               <img onClick={() => exportExcel('week', dateStartWeekMalePerson, dateEndWeekMalePerson,'DE-HOMBRES-POR-DIA-DE-LA-SEMANA')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                            <img onClick={() => exportPdf('graficWeekMale', dateStartWeekMalePerson, dateEndWeekMalePerson,\n                                'TOTAL DE HOMBRES POR DÍA DE LA SEMANA',\n                                `DÍA MÁS TRANSITADA: ${maxWeekMalePerson.day} CON ${formatNumber(maxWeekMalePerson.total)} PERSONAS`)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                            <img onClick={() => downloadImageDesktop('graficWeekMale', 'TOTAL DE HOMBRES POR DÍAS DE LA SEMANA', dateStartWeekMalePerson, dateEndWeekMalePerson, '#fff', 340,'week', 'P',`DÍA MÁS TRANSITADA: ${maxWeekMalePerson.day} CON ${formatNumber(maxWeekMalePerson.total)} PERSONAS`)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de Mujeres por días de la semana</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Día de la semana más transitado: {maxWeekFemalePerson.day} con {formatNumber(maxWeekFemalePerson.total)} mujeres</div>\n                    <DateChange startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setWeekPersonsFemale}\n                        methodStart={setStartDateWeekFemalePerson}\n                        methodEnd={setEndDateWeekFemalePerson}\n                        flexColumn={false}\n                    />    \n                </div>\n\n                <div className=\"mt\">\n                    <div id=\"graficWeekFemale\" className=\"exportImgCanvas chart-container w-100\">\n                        <GraficWeekLine\n                            data={weekPersonFemale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            sexo=\"female\"\n                            labelop=\"tránsito de Mujeres\"\n                            scltxtlbl=\"Cantidad de Mujeres\"\n                        />\n                        <GraficWeekLine\n                            data={weekPersonFemale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            sexo=\"female\"\n                            labelop=\"tránsito de Mujeres\"\n                            scltxtlbl=\"Cantidad de Mujeres\"\n                            pl={50}\n                            pr={50}\n                            pt={200}\n                            pb={30}\n                        />\n\n                        <div className=\"title_todayhoras __export_data\">\n                               <img onClick={() => exportExcel('week', dateStartWeekFemalePerson, dateEndWeekFemalePerson,'DE-MUJERES-POR-DIA-DE-LA-SEMANA')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                            <img onClick={() => exportPdf('graficWeekFemale', dateStartWeekFemalePerson, dateEndWeekFemalePerson,\n                                'TOTAL DE MUJERES POR DÍA DE LA SEMANA',\n                                `DÍA MÁS TRANSITADA: ${maxWeekFemalePerson.day} CON ${formatNumber(maxWeekFemalePerson.total)} PERSONAS`)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                                <img onClick={() => downloadImage('graficWeekFemale','TOTAL DE MUJERES POR DÍAS DE LA SEMANA',dateStartWeekFemalePerson,dateEndWeekFemalePerson,\"#fff\",350,'week','p',`DÍA MÁS TRANSITADA: ${maxWeekFemalePerson.day} CON ${formatNumber(maxWeekFemalePerson.total)} PERSONAS`)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de personas por cada día del mes</h2>\n\n                <div className=\"__detail_top_date month\">\n                    <div className=\"__text_top\">Día del mes más transitado: {maxMonthPerson.day} con {maxMonthPerson.total} personas</div>\n                    <DateChangeMonth\n                        startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().endOf('month').format(\"YYYY-MM-DD\")}\n                        method={setMonthPerson}\n                        methodStart={setStartDateMonthPerson}\n                        methodEnd={setEndDateMonthPerson}\n                        flexColumn={false}\n                    />   \n                </div>\n\n                <div className=\"mt\">\n                    <div id=\"graficMonth\" className=\"exportImgCanvas chart-container w-100 bg-yellow\">\n                        <GraficMonth\n                            data={monthPerson}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            labelop=\"tránsito de Personas\"\n                            scltxtlbl=\"Cantidad de Personas\"\n                        />\n                        <GraficMonth\n                            data={monthPerson}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            labelop=\"tránsito de Personas\"\n                            scltxtlbl=\"Cantidad de Personas\"\n                            pl={50}\n                            pr={50}\n                            pt={200}\n                            pb={30}\n                        />\n                        <div className=\"title_todayhoras\">\n                                {moment(dateStartMonthPerson).format(\"MMMM\")} {moment(dateStartMonthPerson).format(\"YYYY\")} - {moment(dateEndMonthPerson).format(\"MMMM\")} {moment(dateEndMonthPerson).format(\"YYYY\")}\n                        </div>\n                        <div className=\"title_todayhoras __export_data\">\n                             <img onClick={() => exportExcel('month', dateStartMonthPerson, dateEndMonthPerson, 'DE-PERSONAS-POR-DIA-DEL-MES')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n\n                            <img onClick={() => exportPdf('graficMonth', dateStartMonthPerson, dateEndMonthPerson,\n                                'TOTAL DE PERSONAS POR DÍA DEL MES',\n                                `DÍA MÁS TRANSITADA: ${maxMonthPerson.day} CON ${formatNumber(maxMonthPerson.total)} PERSONAS`, true)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                            <img onClick={() => downloadImageDesktop('graficMonth', 'TOTAL DE PERSONAS POR DÍAS DEL MES', dateStartMonthPerson, dateEndMonthPerson, '#fee700', 380, 'week', 'P', `DÍA MÁS TRANSITADA: ${maxMonthPerson.day} CON ${formatNumber(maxMonthPerson.total)} PERSONAS`, true)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de Hombres por cada día del mes</h2>\n                <div className=\"__detail_top_date month\">\n                    <div className=\"__text_top\">Día del mes más transitado: {maxMonthMalePerson.day} con {formatNumber(maxMonthMalePerson.total)} hombres</div>\n                    <DateChangeMonth\n                        startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().endOf('month').format(\"YYYY-MM-DD\")}\n                        method={setMonthPersonMale}\n                        methodStart={setStartDateMonthMalePerson}\n                        methodEnd={setEndDateMonthMalePerson}\n                        flexColumn={false}\n                    />  \n                \n                </div>\n\n                <div className=\"mt\">\n                    <div id=\"graficMonthMale\" className=\"exportImgCanvas chart-container w-100\">\n                        <GraficMonth\n                            data={monthPersonMale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            sexo=\"male\"\n                            labelop=\"tránsito de Hombres\"\n                            scltxtlbl=\"Cantidad de Hombres\"\n                        />\n                        <GraficMonth\n                            data={monthPersonMale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            sexo=\"male\"\n                            labelop=\"tránsito de Hombres\"\n                            scltxtlbl=\"Cantidad de Hombres\"\n                            pl={50}\n                            pr={50}\n                            pt={200}\n                            pb={30}\n                        />\n                        <div className=\"title_todayhoras\">\n                                {moment(dateStartMonthMalePerson).format(\"MMMM\")} {moment(dateStartMonthMalePerson).format(\"YYYY\")} - {moment(dateEndMonthMalePerson).format(\"MMMM\")} {moment(dateEndMonthMalePerson).format(\"YYYY\")}\n                        </div>\n                        <div className=\"title_todayhoras __export_data\">\n                                <img onClick={() => exportExcel('month', dateStartMonthMalePerson, dateEndMonthMalePerson,'DE-HOMBRES-POR-DIA-DEL-MES')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                            <img onClick={() => exportPdf('graficMonthMale', dateStartMonthMalePerson, dateEndMonthMalePerson,\n                                'TOTAL DE HOMBRES POR DÍA DEL MES',\n                                `DÍA MÁS TRANSITADA: ${maxMonthMalePerson.day} CON ${formatNumber(maxMonthMalePerson.total)} PERSONAS`,true)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                            <img onClick={() => downloadImageDesktop('graficMonthMale', 'TOTAL DE HOMBRES POR DÍAS DEL MES', dateStartMonthMalePerson, dateEndMonthMalePerson, '#fff', 380,'month', 'P',`DÍA MÁS TRANSITADA: ${maxMonthMalePerson.day} CON ${formatNumber(maxMonthMalePerson.total)} PERSONAS`,true)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de Mujeres por cada día del mes</h2>\n                <div className=\"__detail_top_date month\">\n                    <div className=\"__text_top\">Día del mes más transitado: {maxMonthFemalePerson.day} con {formatNumber(maxMonthFemalePerson.total)} mujeres</div>\n                    <DateChangeMonth\n                        startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().endOf('month').format(\"YYYY-MM-DD\")}\n                        method={setMonthPersonFemale}\n                        methodStart={setStartDateMonthFemalePerson}\n                        methodEnd={setEndDateMonthFemalePerson}\n                        flexColumn={false}\n                    /> \n                </div>\n\n\n                <div className=\"mt\">\n                    <div id=\"graficMonthFemale\" className=\"exportImgCanvas chart-container w-100\">\n                        <GraficMonth\n                            data={monthPersonFemale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            sexo=\"female\"\n                            labelop=\"tránsito de Mujeres\"\n                            scltxtlbl=\"Cantidad de Mujeres\"\n                        />\n                        <GraficMonth\n                            data={monthPersonFemale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            sexo=\"female\"\n                            labelop=\"tránsito de Mujeres\"\n                            scltxtlbl=\"Cantidad de Mujeres\"\n                            pl={50}\n                            pr={50}\n                            pt={200}\n                            pb={30}\n                        />\n                        <div className=\"title_todayhoras\">\n                                {moment(dateStartMonthFemalePerson).format(\"MMMM\")} {moment(dateStartMonthFemalePerson).format(\"YYYY\")} - {moment(dateEndMonthFemalePerson).format(\"MMMM\")} {moment(dateEndMonthFemalePerson).format(\"YYYY\")}\n                        </div>\n                        <div className=\"title_todayhoras __export_data\">\n                             <img onClick={() => exportExcel('month', dateStartMonthFemalePerson, dateEndMonthFemalePerson,'DE-MUJERES-POR-DIA-DEL-MES')} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                            <img onClick={() => exportPdf('graficMonthFemale', dateStartMonthFemalePerson, dateEndMonthFemalePerson,\n                                'TOTAL DE MUJERES POR DÍA DEL MES',\n                                `DÍA MÁS TRANSITADA: ${maxMonthFemalePerson.day} CON ${formatNumber(maxMonthFemalePerson.total)} PERSONAS`,true)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                     <img onClick={() => downloadImageDesktop('graficMonthFemale', 'TOTAL DE MUJERES POR DÍAS DEL MES', dateStartMonthFemalePerson, dateEndMonthFemalePerson, '#fff', 380,'month', 'P',`DÍA MÁS TRANSITADA: ${maxMonthFemalePerson.day} CON ${formatNumber(maxMonthFemalePerson.total)} PERSONAS`,true)} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total semana-acumulado de personas por hora del día</h2>\n                <span className=\"text-center __subtitle\">(Ultimos 7 Días)</span>\n                <div className=\"__range_heatmap\">\n                    {heatmapRangePerson.map(({ range, color }) => (\n                        <div className=\"__range\" key={color}>\n                            <span  >{range}</span>\n                            <div className=\"__bg-color-heatmap\"></div>\n                        </div>\n\n                    ))}\n                </div>\n\n\n                <div id=\"heatmap\" className=\" mt __hide_desktop\">\n                    <GraficGrillaDesktop data={heatmapPerson} />\n                    <div className=\"title_todayhoras __export_data\">\n                          <img onClick={downloadPdfHeatMap} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                    \n                    <img onClick={downloadHeatMapImage} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total acumulado - Género</h2>\n                <div className=\"__detail_top_date month\">\n                    <div className=\"__text_top\"></div>\n                    <DateChange startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setGraficRangeAges}\n                        methodStart={setStartDateAgePerson}\n                        methodEnd={setEndDateAgePerson}\n                        flexColumn={false}\n                    />\n               \n                </div>\n                <div id=\"graficRangeAge\" className=\"exportImgCanvas chart-containerv2 w-100 mb-i\">\n                <HorizontalGrafic dataAge={ageRangePerson} scltxtlbl={true} />\n                  <HorizontalGrafic dataAge={ageRangePerson} scltxtlbl={true} />\n                 <div className=\"title_todayhoras __export_data\">\n                            {/* <img onClick={() => exportGrafic('range', initdaterange, findaterange)} src=\"./assets/iconos/downloadcsv.svg\" alt=\"export-svg\" />\n                             */}\n                             <img onClick={() => exportPdf('graficRangeAge', dateStartAgePerson, dateEndAgePerson,\n                                'TOTAL ACUMULADO GENERO',\n                                ``)} src=\"./assets/iconos/Impresion.svg\" alt=\"export-pdf\" />\n                     <img onClick={() => downloadImageDesktop('graficRangeAge', 'TOTAL ACUMULADO GENERO', dateStartAgePerson, dateEndAgePerson, '#fff', 380,'age', 'P','')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n\n                        </div>\n                </div>\n                {/* End */}\n            </div>\n        </div>\n    )\n}","//Custom rewrite for radius border on bar draw\n//Code from https://github.com/jedtrow/Chart.js-Rounded-Bar-Charts with a few adjustments\n\nimport { Chart as ChartJS } from 'react-chartjs-2'\n\nChartJS.elements.Rectangle.prototype.draw = function() {\n    \n  const ctx = this._chart.ctx;\n  let vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped;\n  let borderWidth = vm.borderWidth;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let cornerRadius = this._chart.config.options.cornerRadius;\n  if(cornerRadius < 0){ cornerRadius = 0; }\n  if(typeof cornerRadius === 'undefined'){ cornerRadius = 0; }\n\n  if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top? 1: -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left? 1: -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize? barSize: borderWidth;\n      const halfStroke = borderWidth / 2;\n      // Adjust borderWidth when bar top position is near vm.base(zero).\n      const borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\n      const borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\n      const borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\n      const borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\n      // not become a vertical line?\n      if (borderLeft !== borderRight) {\n          top = borderTop;\n          bottom = borderBottom;\n      }\n      // not become a horizontal line?\n      if (borderTop !== borderBottom) {\n          left = borderLeft;\n          right = borderRight;\n      }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [\n      [left, bottom],\n      [left, top],\n      [right, top],\n      [right, bottom]\n  ];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n      startCorner = 0;\n  }\n\n  function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      let nextCornerId = i+1;\n      if(nextCornerId === 4){\n          nextCornerId = 0\n      }\n\n      cornerAt(nextCornerId);\n\n      const width = corners[2][0] - corners[1][0];\n      const height = corners[0][1] - corners[1][1];\n      const x = corners[1][0];\n      const y = corners[1][1];\n\n      let radius = cornerRadius;\n      // Fix radius being too large\n      if(radius > Math.abs(height)/2){\n          radius = Math.floor(Math.abs(height)/2);\n      }\n      if(radius > Math.abs(width)/2){\n          radius = Math.floor(Math.abs(width)/2);\n      }\n\n      if(height < 0){\n          // Negative values in a standard bar chart\n          const x_tl = x;          const x_tr = x+width;\n          const y_tl = y+height;   const y_tr = y+height;\n\n          const x_bl = x;         const  x_br = x+width;\n          const y_bl = y;        const   y_br = y;\n\n          // Draw\n          ctx.moveTo(x_bl+radius, y_bl);\n          ctx.lineTo(x_br-radius, y_br);\n          ctx.quadraticCurveTo(x_br, y_br, x_br, y_br-radius);\n          ctx.lineTo(x_tr, y_tr+radius);\n          ctx.quadraticCurveTo(x_tr, y_tr, x_tr-radius, y_tr);\n          ctx.lineTo(x_tl+radius, y_tl);\n          ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl+radius);\n          ctx.lineTo(x_bl, y_bl-radius);\n          ctx.quadraticCurveTo(x_bl, y_bl, x_bl+radius, y_bl);\n\n      }else if(width < 0){\n          // Negative values in a horizontal bar chart\n          const x_tl = x+width;   const  x_tr = x;\n          const y_tl= y;          const  y_tr = y;\n\n          const x_bl = x+width;   const  x_br = x;\n          const y_bl = y+height; const   y_br = y+height;\n\n          // Draw\n          ctx.moveTo(x_bl+radius, y_bl);\n          ctx.lineTo(x_br-radius, y_br);\n          ctx.quadraticCurveTo(x_br, y_br, x_br, y_br-radius);\n          ctx.lineTo(x_tr, y_tr+radius);\n          ctx.quadraticCurveTo(x_tr, y_tr, x_tr-radius, y_tr);\n          ctx.lineTo(x_tl+radius, y_tl);\n          ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl+radius);\n          ctx.lineTo(x_bl, y_bl-radius);\n          ctx.quadraticCurveTo(x_bl, y_bl, x_bl+radius, y_bl);\n\n      }else{\n          //Positive Value\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n      }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n      ctx.stroke();\n  }\n  }","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const getStartVehicles = () => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        try {\n            const resp = await fetchConToken(`/get-vehicle-graphics?group_id=${groupId}`),\n                body = await resp.json();\n            const { today_total, yesterday_total, week_total, month_total, hours,\n                week, month, today_percent, week_percent, max_hour, max_week_day,\n                max_month_day } = body;\n               \n            dispatch(getVehicles({\n                vehicleHours: hours,\n                vehicleDaysOfWeek: week,\n                vehicleDaysOfMonth: month,\n                totalToday: today_total,\n                todayPercent: today_percent,\n                yesterdayTotal: yesterday_total,\n                weekTotal: week_total,\n                weekPercent: week_percent,\n                monthTotal: month_total,\n                maxHour: max_hour,\n                maxWeek: max_week_day,\n                maxMonth: max_month_day\n            }))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const setHoursVehicles = (date_from,date_to) => {\n    console.log(date_from,date_to)\n    \n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/?date_from=${date_from}&group_id=${groupId}&date_to=${date_to}&resource=&group_id=${groupId}`);\n        const body = await resp.json();\n        const {hours,max_hour}=body;\n        dispatch(setHoursGrafic({\n            vehicleHours:hours,\n            maxHour:max_hour\n        }))\n    }\n}\n\nexport const setWeekVehicles = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n         const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-vehicle-graphics?date_from=${date_from}&group_id=${groupId}&date_to=${date_to}`);\n        const body = await resp.json();\n        const {week,max_week_day}=body\n        dispatch(setWeekGrafic({\n            vehicleDaysOfWeek:week,\n            maxWeek:max_week_day\n        }))\n    }\n}\n\n\nexport const setMonthVehicles = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n         const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-vehicle-graphics?date_from=${date_from}&group_id=${groupId}&date_to=${date_to}`);\n        const body = await resp.json();\n        const {month,max_month_day}=body;\n        dispatch(setMonthGrafic({\n            vehicleDaysOfMonth:month,\n            maxMonth:max_month_day\n        }))\n    }\n}\n\nexport const pruevaSaludarVehicle=(date1,date2)=>{\n    console.log(date1,date2)\n}\n\nexport const setStartHoursVehicle = (date_from, date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        try {\n            const resp = await fetchConToken(`/get-vehicle-graphics?date_from=${date_from}&group_id=${groupId}&date_to=${date_to}`);\n            const body = await resp.json();\n            const { hours, max_hour } = body;\n            dispatch(setHoursVehicle({\n                vehicleHours: hours,\n                maxHour: max_hour\n            }))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const setStartWeekVehicle = (date_from, date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        try {\n            const resp = await fetchConToken(`/get-vehicle-graphics?date_from=${date_from}&group_id=${groupId}&date_to=${date_to}`);\n            const body = await resp.json();\n            const { week, max_week_day } = body\n            dispatch(setWeekVehicle({\n                vehicleDaysOfWeek: week,\n                maxWeek: max_week_day\n            }))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const setStartMonthVehicles = (date_from, date_to) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        try {\n            const resp = await fetchConToken(`/get-vehicle-graphics?date_from=${date_from}&group_id=${groupId}&date_to=${date_to}`);\n            const body = await resp.json();\n            const { month, max_month_day } = body;\n            dispatch(setMonthVehicle({\n                vehicleDaysOfMonth: month,\n                maxMonth: max_month_day\n            }))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\nconst getVehicles = (data) => ({\n    type: types.dataVehicles,\n    payload: data\n})\nconst setHoursVehicle = (data) => ({\n    type: types.setHoursVehicles,\n    payload: data\n})\nconst setWeekVehicle = (data) => ({\n    type: types.setWeeksVehicles,\n    payload: data\n})\nconst setMonthVehicle = (data) => ({\n    type: types.setMonthsVehicles,\n    payload: data\n})\nconst setHoursGrafic = (data) => ({\n    type: types.setHoursVehicles,\n    payload: data\n})\n\nconst setWeekGrafic = (data) => ({\n    type: types.setWeeksVehicles,\n    payload: data\n})\n\nconst setMonthGrafic = (data) => ({\n    type: types.setMonthsVehicles,\n    payload: data\n})\n","import React, { useCallback, useState } from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport { useEffect } from 'react';\nexport const GraficWeek = ({data,label,dtsetbg,optionbg,scalebg,title,labelop,legendbg='black',sexo=null,pl=0,pr=0,pb=0,pt=0}) => {\n    const [graficData, setGraficData] = useState([]);\n \n  \n    const getData =useCallback(\n        ()=>{\n            if (!!sexo ) {\n                if (sexo === 'male') {\n                   return setGraficData(data.map(a => a.male))\n                }\n                if(sexo==='female'){\n                    return setGraficData(data.map(a => a.female))\n\n                }\n\n                  return setGraficData(data.map(a => a.total)) \n            }\n            \n            setGraficData(data.map(a => a.total))\n        },[data,sexo]\n    )\n\n   \n\n\n\n    useEffect(() => {\n        getData()\n     \n    }, [getData])\n\n\n    \n    \n    \n    \n\n    return (\n        <>\n        {data.length === 0 ?\n            <div className=\"__loader_grafic\">\n                <img src=\"./assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n            </div> :\n            (\n                <Bar data={\n                    {\n                        labels: data.map(a => a.dow),\n                        datasets: [\n                            { \n                                label: `${label}`,\n                                \n                                backgroundColor: `${dtsetbg}`,\n                                data:graficData,\n                                borderWidth: 0\n                            },\n        \n                        ],\n                        borderWidth: 0\n                    }\n        \n                }\n                    options={{\n                        cornerRadius: 20,\n                        title: {\n                            display: true,\n                          /*   text: ['TOTAL VEHÍCULOS POR HORA DEL DÍA', '', ''], */\n                            fontSize: 30,\n                            padding: 50,\n                            fontColor: `${optionbg}`,\n                            fontFamily: 'Barlow',\n                            fontStyle: 400,\n                        },\n                        legend: {\n                            position: 'bottom',\n                            labels: {\n                                padding: 20,\n                                boxWidth: 15,\n                                fontSize: 18,\n                                fontFamily: 'Barlow',\n                                fontColor: `${legendbg}`\n                            }\n                        },\n                        layout:{\n                            padding:{\n                                left: pl,\n                                right: pr,\n                                top: pt,\n                                bottom: pb\n                            },\n                        },\n        \n                        tooltips: {\n                            enabled: true,\n                            mode: 'single',\n                            callbacks: {\n                                 title: function (tooltipItem, datax) {\n        \n                                    return `${title} ` + data[tooltipItem[0].index].dow;\n                                }, \n                                label: function (tooltipItems, data) {\n                                    return `${labelop} ` + tooltipItems.yLabel;\n                                },\n                            }\n                        },\n                        maintainAspectRatio: false,\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    fontColor: `${scalebg}`,\n                                    fontSize: 18,\n                                    fontFamily: 'Barlow',\n                                    fontStyle: 600,\n                                    beginAtZero: true,\n        \n                                },\n                                gridLines: {\n                                    display: false\n                                }\n        \n                            }],\n                            xAxes: [{\n                                ticks: {\n                                    fontColor: `${scalebg}`,\n                                    fontSize: 18,\n                                    fontFamily: 'Barlow',\n                                    fontStyle: 600,\n        \n                                    beginAtZero: true\n                                },\n                                gridLines: {\n                                    display: false\n                                }\n                            }]\n                        },\n        \n                    }}\n                />\n            )\n        }\n    </>\n    )\n}\n","import React, { useCallback, useState } from 'react'\n\nexport const TimeRealButton = React.memo(({ dispath, method }) => {\n\n    const [isTimeReal, setTimeReal] = useState(true)\n    const [isInterval, setIsInterval] = useState(null)\n    const callbackTimeReal = useCallback(() => {\n        if (isTimeReal) {\n            const idInterval = setInterval(() => {\n                dispath(method())\n            }, 2000);\n            setIsInterval(idInterval);\n        }\n        return clearInterval(isInterval)\n    }, [dispath, setIsInterval, isInterval, isTimeReal, method])\n\n    const activeRefresh = () => {\n        window.location.reload()\n    }\n\n    return (\n        <div className=\"__botones_nav __timereal_refresh\" name=\"vehicles\" >\n            <div onClick={() => {\n                setTimeReal(!isTimeReal)\n                callbackTimeReal()\n            }} className=\"__btn_navegation_ __icon_caledare\"><img src=\"./assets/iconos/Calendario.png\" alt=\"Time Real\" /> Tíempo real</div>\n            <div onClick={activeRefresh} className=\"__btn_navegation_ __icon_caledare\"><img src=\"./assets/iconos/Calendario.png\" alt=\"icon calendario\" /> Actualizar</div>\n        </div>\n    )\n})","import React from 'react'\n\nexport const ScrollButton = React.memo(({ refVehicle, refPerson,active }) => {\n    const handleScrollVehicles = () => {\n        window.scrollTo(0, document.getElementById(refVehicle).offsetTop)\n    }\n    const handleScrollPerson = () => {\n        window.scrollTo(0, document.getElementById(refPerson).offsetTop)\n    }\n\n    return (\n        <div className=\"__botones_nav\">\n            <div onClick={handleScrollVehicles} className={`__btn_navegation_ ${active==='vehicle' ? 'active' : ''} `}><img src={`./assets/iconos/icon-car${active==='vehicle' ? '-active' : ''}.svg`} alt=\"icon car\" /> Vehículos</div>\n            <div onClick={handleScrollPerson} className={`__btn_navegation_ ${active==='person' ? 'active' : ''} `}><img src={`./assets/iconos/icon-group${active==='person' ? '-active' : ''}.svg`} alt=\"icon scroll\" /> Personas</div>\n        </div>\n    )\n})","import React, { useRef, useEffect, memo } from 'react'\nimport * as d3 from 'd3'\nimport moment from 'moment'\nexport const GraficGrilla = memo(({ data }) => {\n\n    const ref = useRef()\n    useEffect(() => {\n\n        tablehours(data)\n\n        return () => {\n            validarref()\n        }\n    }, [data])\n\n    const validarref = () => {\n        ref.current.querySelector('svg') !== null && ref.current.querySelector('svg').remove()\n    }\n\n    const tablehours = (data) => {\n\n\n\n        const dias_semana = [];\n        for (let i = 6; i >= 0; i--) {\n            dias_semana.push(moment().subtract(i, 'days').format(\"DD/MM\"))\n        }\n\n\n\n        if (data.length > 0) {\n            var margin = { top: 30, right: 80, bottom: 50, left: 40 },\n                width = 380 - margin.left - margin.right,\n                height = 380 - margin.top - margin.bottom;\n\n\n            var svg = d3.select(ref.current)\n                .attr(\"align\", \"left\")\n\n                .append(\"svg\")\n                .attr(\"width\", 300)\n                .attr(\"height\", 350)\n                .append(\"g\")\n\n                .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n            const myVars = [\"23:00\", \"22:00\", \"21:00\", \"20:00\", \"19:00\", \"18:00\", \"17:00\", \"16:00\", \"15:00\", \"14:00\", \"13:00\", \"12:00\", \"11:00\", \"10:00\", \"09:00\", \"08:00\", \"07:00\", \"06:00\", \"05:00\", \"04:00\", \"03:00\", \"02:00\", \"01:00\", \"00:00\"];\n\n            const x = d3.scaleBand()\n                .range([0, width])\n                .domain(dias_semana)\n                .padding(0.01);\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0, 0)\")\n                .call(d3.axisTop(x))\n\n\n            // Build X scales and axis:\n            const y = d3.scaleBand()\n                .range([height, 0])\n                .domain(myVars)\n                .padding(0.01);\n            svg.append(\"g\")\n                .call(d3.axisLeft(y));\n            const range = data.map(r => r.total)\n            // Build color scale\n            const myColor = d3.scaleQuantile()\n                .range(['#5BCDFA', '#5EAFFE', '#4782F5', '#3450EF', '#0502D3'])\n                //\t\t\t\t\t\t\t\t\t\t  .range([\"#63be7b\", \"#f8696b\"])\n                .domain(range)\n            const rectContainer = svg.selectAll()\n                .data(data, function (d) { return d.date + ':' + d.time; })\n                .enter().append(\"g\")\n                .attr(\"transform\", function (d) {\n                    let hora = d.time.replace('h', ':00');\n\n                    return \"translate(\" + (x(d.date)) + \",\" + (y(hora)) + \")\"\n                });\n\n            /*  svg.append(\"text\")\n                 .attr(\"x\", 225)\n                 .attr(\"y\", 330)\n                 .attr(\"text-anchor\", \"left\")\n                 .style(\"font-size\", \"18px\")\n                 .text(\"Total\"); */\n\n            rectContainer.append(\"rect\")\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", y.bandwidth())\n                .style(\"fill\", function (d) { return myColor(d.total) })\n\n            rectContainer.append(\"text\")\n                .attr(\"x\", (x.bandwidth()) / 2)\n                .attr(\"y\", ((y.bandwidth()) / 2) + 4)\n                .text(function (d) { return d.total })\n                .style(\"font-family\", \"Barlow\")\n                .style(\"font-size\", \"6pt\")\n                .style('fill', 'white')\n                .style(\"text-anchor\", \"middle\")\n\n        }\n\n\n    }\n\n\n\n\n\n\n\n\n    return (\n        <div className=\"mt text-center\"\n            ref={ref}\n        ></div>\n    )\n}\n)","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const getTypesVehicle=()=>{\n    return async (dispatch,getState)=>{\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-vehicle-types?group_id=${groupId}`),\n        body = await resp.json();\n        const [bus,car,bike,suv,truck,other,van]=body.types;\n        const {today_total,today_percent,yesterday_total,week_total,week_percent,total,creation_date,current_date}=body;\n\n\n        dispatch(typeVehicle({\n            bus:bus.bus,car:car.car,bike:bike.bike,suv:suv.suv,truck:truck.truck,other:other.other,van:van.van,\n            countTodayTypes:today_total,\n            todayPercentTypes:today_percent,\n            countYesterdayTypes:yesterday_total,\n            countWeekTypes:week_total,\n            weekPercentTypes:week_percent,\n            countTypes:total,\n            creationDate:creation_date,\n            currentDate:current_date\n        }))\n    }  \n}\n\nconst typeVehicle=(data)=>({type:types.dataTypeVehicle,payload:data})","import { types } from \"../types/types\";\nimport { fetchConToken } from \"../helpers/fetch\";\n\n\nexport const PlateData = (offset=0,q,rangeDate) => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code==='CO.PMXCO.BOG.A01')[0].id;\n        dispatch(initLoading())\n        const resp = await fetchConToken(`/search?offset=${offset}${!!q ? '&q='+q : ''}${!!rangeDate ? rangeDate : ''}&group_id=${groupId}`);\n        const body = await resp.json();\n        const totalPlates= body.plates;\n        const topPLateMonth = body.top_plate_month;\n        const countPlate=body.total;\n        const topPlate = body?.top_plate;\n        dispatch(inicialdataplate({\n            topPlate,\n            topPLateMonth,\n            totalPlates,\n            countPlate\n        }))\n\n    }\n\n\n}\n\nexport const PlateSearch = (q = '') => {\n    return async (dispatch,getState) => {\n        dispatch(initLoading())\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code==='CO.PMXCO.BOG.A01')[0].id;\n        const resp = await fetchConToken(`/search?q=${q}&group_id=${groupId}`);\n        const body = await resp.json();\n        const totalPlates = body.plates;\n        const countPlate=body.total;\n        dispatch(inicialplatesearch({\n            totalPlates,\n            countPlate\n        }))\n\n    }\n}\n\nexport const setDatePlates = (date_from,date_to) => {\n    return async (dispatch,getState) => {\n        dispatch(initLoading())\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code==='CO.PMXCO.BOG.A01')[0].id;\n        const resp = await fetchConToken(`/search?date_from=${date_from}&date_to=${date_to}&group_id=${groupId}`);\n        const body = await resp.json();\n        const totalPlates = body.plates;\n        const countPlate=body.total;\n        const topPLateMonth=body.top_plate_month;\n        dispatch(initChangeDate({\n            totalPlates,\n            countPlate,\n            topPLateMonth\n        }))\n    }\n}\n\n\nexport const initLoading=()=>({type:types.startLoadingPlate})\n\nconst inicialdataplate = (data) => ({\n    type: types.getPlate,\n    payload: data\n})\n\nconst inicialplatesearch = (data) => ({\n    type: types.searchPlate,\n    payload: data\n})\n\n\n\n\nexport const initSortByPlate=()=>({type:types.sortByPlate})\n\nexport const initSortByDate=()=>({type:types.sortByDate})\n\nexport const initSortByHour=()=>({type:types.sortByHour})\nexport const initSortByLocation=()=>({type:types.sortByLocation})\n\nexport const initSortByTimes=()=>({type:types.sortByTimes})\nexport const initSortByClient=()=>({type:types.sortByClient})\n\nexport const initSortByMembership=()=>({type:types.sortByMembership})\n\nexport const initChangeDate=(data)=>({type:types.setPlatesCurrenDate,payload:data})","import React, { useEffect } from 'react'\nimport moment from 'moment'\nimport 'moment/locale/es';\nimport \"../../helpers/roundbarchart\";\nimport {\n    setEndDateHourVehicle, setStartDateHourVehicle,\n    setStartDateWeekVehicle, setEndDateWeekVehicle,\n    setStartDateMonthVehicle, setEndDateMonthVehicle,\n    setEndDateHourPerson, setStartDateHourPerson,\n    setStartDateHourMalePerson, setEndDateHourMalePerson,\n    setStartDateHourFemalePerson, setEndDateHourFemalePerson,\n    setStartDateWeekPerson, setEndDateWeekPerson,\n    setStartDateWeekMalePerson, setEndDateWeekMalePerson,\n    setEndDateWeekFemalePerson, setStartDateWeekFemalePerson, setStartDateAgePerson, setEndDateAgePerson\n} from '../../actions/date';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getStartVehicles, setHoursVehicles, setWeekVehicles, setMonthVehicles } from '../../actions/vehicle';\nimport {\n    getPersondata, setGraficRangeAges, setHoursPersons,\n    setHoursPersonsFemale, setHoursPersonsMale,\n    setWeekPersons, setWeekPersonsFemale,\n    setWeekPersonsMale\n} from '../../actions/person';\nimport { GraficHours } from '../grafics/GraficHours';\nimport { GraficWeek } from '../grafics/GraficWeek';\nimport { GraficMonth } from '../grafics/GraficMonth';\nimport { BoxPrimary } from '../boxes/BoxPrimary';\n\nimport { formatNumber } from '../../helpers/calculo';\nimport { BoxSecondary } from '../boxes/BoxSecondary';\nimport { TimeRealButton } from './TimeRealButton';\nimport { ScrollButton } from './ScrollButton';\nimport { DateChange } from '../date/DateChange';\nimport { DateChangeMonth } from '../date/DateChangeMonth';\nimport { BoxSex } from '../boxes/BoxSex';\nimport { GraficGrilla } from '../grafics/GraficGrilla';\nimport { downloadImage } from '../../helpers/exports';\nimport { HorizontalGrafic } from '../grafics/HorizontalGrafic';\nimport { getTypesVehicle } from '../../actions/typeVehicle';\nimport { PlateData } from '../../actions/plate';\n\n\nconst currentDate = moment().format(\"YYYY-MM-DD\");\n\nexport const QonteoMobile = () => {\n\n    const dispatch = useDispatch();\n    const {\n        vehicleHours,\n        vehicleDaysOfWeek,\n        vehicleDaysOfMonth,\n        maxHour,\n        maxWeek,\n        maxMonth\n    } = useSelector(state => state.vehicle);\n\n    const { bus, car, bike, suv, truck, other,\n        countTodayTypes, todayPercentTypes,\n        countYesterdayTypes, countWeekTypes,\n        weekPercentTypes, countTypes } = useSelector(state => state.typeVehicle);\n        const {\n            topPlate\n        } = useSelector(state => state.plate);\n\n\n\n    const {\n        hoursPerson,\n        hoursPersonFemale,\n        hoursPersonMale,\n        weekPerson,\n        weekPersonMale,\n        weekPersonFemale,\n        heatmapPerson,\n        heatmapRangePerson,\n        ageRangePerson,\n        totalTodayPerson,\n        totalTodayPersonFemale,\n        totalTodayPersonMale,\n        todayPercentPerson,\n        totalYesterdayPerson,\n        totalYesterdayFemalePerson,\n        totalYesterdayMalePerson,\n        maxHourPerson,\n        maxHourFemalePerson,\n        maxHourMalePerson,\n        maxWeekPerson,\n        maxWeekFemalePerson,\n        maxWeekMalePerson,\n        totalWeekPerson,\n        totalWeekFemale,\n        totalWeekMale,\n        weekPercentPerson,\n        totalMonthPerson,\n        totalMonthFemalePerson,\n        totalMonthMalePerson\n    } = useSelector(state => state.person);\n\n\n\n\n    const {\n        dateStartHourVehicle, dateEndHourVehicle,\n        dateStartWeekVehicle, dateEndWeekVehicle,\n        dateStartMonthVehicle, dateEndMonthVehicle,\n        dateStartHourPerson, dateEndHourPerson,\n        dateStartHourMalePerson, dateEndHourMalePerson,\n        dateStartHourFemalePerson, dateEndHourFemalePerson,\n        dateStartWeekPerson, dateEndWeekPerson,\n        dateStartWeekMalePerson, dateEndWeekMalePerson,\n        dateStartWeekFemalePerson, dateEndWeekFemalePerson,\n        dateStartAgePerson, dateEndAgePerson\n    } = useSelector(state => state.date);\n\n    useEffect(() => {\n        dispatch(getStartVehicles());\n        dispatch(getTypesVehicle())\n        dispatch(PlateData())\n        dispatch(getPersondata())\n    }, [dispatch])\n\n \n\n    return (\n        <div>\n            <div className=\"title mb mt\">\n                <span className=\"text-primary\">CO.PMXCO.BOG.A01</span>\n            </div>\n\n            <div id=\"positionVehicle\">\n                <ScrollButton refVehicle={'positionVehicle'} active={'vehicle'} refPerson={'positionPerson'} />\n            </div>\n            <TimeRealButton dispath={dispatch} method={getStartVehicles} />\n\n            <div className=\"contenedor contet_index\">\n             {/*    <BoxPrimary date={currentDate} cantidad={formatNumber(countTodayTypes)} text1=\"Vehículos en tránsito\" text2=\"hoy\" /> */}\n                <div className=\"__line_separator\"></div>\n\n                <h2 className=\" __title_grafic\">Total de vehículos por horas del día</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Hora más transitada: {maxHour.hour} con {maxHour.total} vehículos</div>\n                    <DateChange startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setHoursVehicles} methodStart={setStartDateHourVehicle}\n                        methodEnd={setEndDateHourVehicle}\n                    />\n                </div>\n                <div className=\"mt\">\n                    <div id=\"graficHours\" className=\"exportImgCanvas chart-container\">\n                        <GraficHours data={vehicleHours}\n                            label=\"Tiempo (horas)\" dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            title=\"Hora: \"\n                            scltxtlbl={null}\n                            labelop=\"tránsito de vehículos :\"\n                            scalebg=\"#0502D3\"\n                        />\n                        <GraficHours data={vehicleHours}\n                            label=\"Tiempo (horas)\" dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            title=\"Hora: \"\n                            scltxtlbl={null}\n                            labelop=\"tránsito de vehículos :\"\n                            scalebg=\"#0502D3\"\n                            pl={20}\n                            pr={20}\n                            pt={150}\n                            pb={30}\n                        />\n                        <div className=\"title_todayhoras __export_data\">\n                            <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficHours',\n                                'TOTAL DE VEHÍCULOS POR HORA DEL DÍA',\n                                '#fff', 75, dateStartHourVehicle, dateEndHourVehicle, 'hour', 'v'\n                            )} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total vehículos por días de la semana</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Día de la semana más transitado: {maxWeek.day} con {maxWeek.total} vehículos</div>\n                    <DateChange\n                        startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setWeekVehicles} methodStart={setStartDateWeekVehicle}\n                        methodEnd={setEndDateWeekVehicle}\n                    />\n                </div>\n\n                <div className=\"mt\">\n                    <div id=\"graficWeek\" className=\"exportImgCanvas chart-container\">\n                        <GraficWeek\n                            data={vehicleDaysOfWeek}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            labelop=\"tránsito de vehículos\"\n                        />\n                        <GraficWeek\n                            data={vehicleDaysOfWeek}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            labelop=\"tránsito de vehículos\"\n                            pl={20}\n                            pr={20}\n                            pt={30}\n                            pb={30}\n\n                        />\n\n                        <div className=\"title_todayhoras __export_data\">\n                            <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficWeek', 'TOTAL DE VEHÍCULOS POR DÍA DE LA SEMANA', '#fff', 60, dateStartWeekVehicle, dateEndWeekVehicle, 'week', 'v')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"__line_separator\"></div>\n             {/*    <BoxSecondary count={countYesterdayTypes} percent={todayPercentTypes} text1=\"ayer\" text2=\"Vehículos en tránsito\" />\n                <BoxSecondary count={countWeekTypes} percent={weekPercentTypes} text1=\"esta semana\" text2=\"Vehículos en tránsito\" /> */}\n                <div className=\"__range_date\">\n                    <BoxSecondary initDate={moment('2020-07-24').format(\"YYYY-MM-DD\")} endDate={currentDate} count={countTypes} text1=\"Total\" text2=\"Vehículos en tránsito\" />\n                </div>\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de vehículos por días del mes</h2>\n                <div className=\"__detail_top_date month\">\n                    <div className=\"__text_top\">Día del mes más transitado: {maxMonth.day} con {maxMonth.total} vehículos</div>\n                    <DateChangeMonth\n                        startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().endOf('month').format(\"YYYY-MM-DD\")}\n                        method={setMonthVehicles}\n                        methodStart={setStartDateMonthVehicle}\n                        methodEnd={setEndDateMonthVehicle}\n                    />\n                </div>\n                <div className=\"mt\">\n                    <div id=\"graficMonth\" className=\"exportImgCanvas chart-container\">\n                        <GraficMonth\n                            data={vehicleDaysOfMonth}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            scltxtlbl={null}\n                            title=\"Día: \"\n                            labelop=\"tránsito de vehículos\"\n                        />\n                        <GraficMonth\n                            data={vehicleDaysOfMonth}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            scltxtlbl={null}\n                            title=\"Día: \"\n                            labelop=\"tránsito de vehículos\"\n                            pl={20}\n                            pr={20}\n                            pt={70}\n                            pb={30}\n                        />\n                        <div className=\"title_todayhoras\">\n                            {moment(dateStartMonthVehicle).format(\"MMMM\")} - {moment(dateEndMonthVehicle).format(\"MMMM\")}\n                        </div>\n                        <div className=\"title_todayhoras __export_data\">\n                            <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficMonth', `TOTAL DE VEHÍCULOS POR DÍA DEL MES - ${moment(dateStartMonthVehicle).format(\"MMMM\").toUpperCase()}/${moment(dateEndMonthVehicle).format(\"MMMM\").toUpperCase()}`, '#fff', 10, dateStartMonthVehicle, dateEndMonthVehicle, 'month', 'v')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"__line_separator\"></div>\n\n            <div className=\"contenedor contet_index\">\n                <h2 className=\" __title_grafic\">Total de vehículos por categoría</h2>\n                <BoxPrimary bg=\"bg-gray\" date={currentDate} cantidad={topPlate.plate} text1={`ha pasado ${topPlate.occurency} veces `} text2=\"Top vehiculo\" />\n                <div className=\"box_share mt __text-capitalize\">\n                    <BoxSex textBottom=\"TOTAL\" count={car.total} color=\"white\" textsex=\"Carros\" sex=\"carro\" />\n                    <BoxSex textBottom=\"TOTAL\" count={truck.total} color=\"white\" textsex=\"Camiones\" sex=\"camion\" />\n                </div>\n                <div className=\"box_share mt __text-capitalize\">\n                    <BoxSex textBottom=\"TOTAL\" count={bike.total} color=\"white\" textsex=\"Motos\" sex=\"moto\" />\n                    <BoxSex textBottom=\"TOTAL\" count={suv.total} color=\"white\" textsex=\"SUVs\" sex=\"suvs\" />\n                </div>\n                <div className=\"box_share mt __text-capitalize\">\n                    <BoxSex textBottom=\"TOTAL\" count={bus.total} color=\"white\" textsex=\"Buses\" sex=\"bus\" />\n                    <BoxSex textBottom=\"TOTAL\" count={other.total} color=\"white\" textsex=\"otros\" sex=\"carro\" />\n                </div>\n\n            </div>\n\n\n            <div className=\"__line_separator\"></div>\n            <div className=\"title mt mb\" >\n                <h2>Personas</h2>\n            </div>\n            <div id=\"positionPerson\">\n                <ScrollButton refVehicle={'positionVehicle'} active={'person'} refPerson={'positionPerson'} />\n            </div>\n\n            <div className=\"contenedor contet_index\">\n\n              {/*   <BoxPrimary date={currentDate} cantidad={totalTodayPerson} text1=\"Personas en total\" text2=\"hoy\" /> */}\n\n\n             {/*    <div className=\"box_share mt \">\n                    <BoxSex total={totalTodayPerson} count={totalTodayPersonMale} color=\"white\" textsex=\"hombres\" />\n                    <BoxSex total={totalTodayPerson} count={totalTodayPersonFemale} color=\"white\" textsex=\"Mujeres\" sex=\"woman\" />\n                </div> */}\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de personas por hora del día</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Hora más transitada: {maxHourPerson.hour} con {maxHourPerson.total} personas</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setHoursPersons}\n                        methodStart={setStartDateHourPerson}\n                        methodEnd={setEndDateHourPerson}\n                    />\n                </div>\n\n                <div id=\"graficHourP\" className=\"chart-containerv2 exportImgCanvas mt bg-yellow\">\n\n                    <GraficHours data={hoursPerson} label=\"Total de Personas\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Personas:\"\n                        scltxtlbl={null}\n                        scalebg=\"#0502D3\" />\n                    <GraficHours data={hoursPerson} label=\"Total de Personas\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Personas:\"\n                        scltxtlbl={null}\n                        scalebg=\"#0502D3\"\n                        pl={20}\n                        pr={20}\n                        pt={150}\n                        pb={30}\n                    />\n\n                    <div className=\"title_todayhoras __export_data\">\n                        <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficHourP', 'TOTAL DE PERSONAS POR HORA DEL DÍA', '#fee700', 75, dateStartHourPerson, dateEndHourPerson, 'hour', 'p')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de hombres por hora del día</h2>\n\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Hora más transitada: {maxHourMalePerson.hour} con {maxHourMalePerson.total} hombres</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setHoursPersonsMale}\n                        methodStart={setStartDateHourMalePerson}\n                        methodEnd={setEndDateHourMalePerson}\n                    />\n                </div>\n\n\n                <div id=\"graficHourPMale\" className=\"exportImgCanvas chart-containerv2 mt \">\n\n                    <GraficHours\n                        data={hoursPersonMale} label=\"Total de Hombres\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        labelop=\" Total de Hombres::\"\n                        scalebg=\"#0502D3\"\n                        scltxtlbl={null}\n                        sexo=\"male\"\n\n                    />\n\n                    <GraficHours\n                        data={hoursPersonMale} label=\"Total de Hombres\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        labelop=\" Total de Hombres::\"\n                        scalebg=\"#0502D3\"\n                        scltxtlbl={null}\n                        sexo=\"male\"\n                        pl={20}\n                        pr={20}\n                        pt={150}\n                        pb={30}\n                    />\n\n                    <div className=\"title_todayhoras __export_data\">\n                        <img className=\"__cursor_pointer\"\n                            onClick={() => downloadImage('graficHourPMale', 'TOTAL DE HOMBRES POR HORA DEL DÍA',\n                                '#fff', 75, dateStartHourMalePerson, dateEndHourMalePerson, 'hour', 'p')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total de mujeres por hora del día</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Hora más transitada: {maxHourFemalePerson.hour} con {maxHourFemalePerson.total} mujeres</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setHoursPersonsFemale}\n                        methodStart={setStartDateHourFemalePerson}\n                        methodEnd={setEndDateHourFemalePerson}\n                    />\n                </div>\n\n                <div id=\"graficHourPFemale\" className=\"exportImgCanvas chart-containerv2 mt\">\n                    <GraficHours data={hoursPersonFemale} label=\"Total de Mujeres\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        scltxtlbl={null}\n                        labelop=\" Total de Mujeres:\"\n                        scalebg=\"#0502D3\"\n                        sexo=\"female\"\n                    />\n                    <GraficHours data={hoursPersonFemale} label=\"Total de Mujeres\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora: \"\n                        scltxtlbl={null}\n                        labelop=\" Total de Mujeres:\"\n                        scalebg=\"#0502D3\"\n                        sexo=\"female\"\n                        pl={20}\n                        pr={20}\n                        pt={150}\n                        pb={30}\n                    />\n\n                    <div className=\"title_todayhoras __export_data\">\n                        <img className=\"__cursor_pointer\"\n                            onClick={() => downloadImage('graficHourPFemale', 'TOTAL DE MUJERES POR HORA DEL DÍA', '#fff',\n                                75, dateStartHourFemalePerson, dateEndHourFemalePerson, 'hour', 'p')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n\n                <div className=\"__line_separator\"></div>\n                <BoxSecondary percent={todayPercentPerson} count={totalYesterdayPerson} text1=\"ayer\" text2=\"Personas en total\" />\n                <div className=\"box_share mt \">\n                    <BoxSex total={totalYesterdayPerson} count={totalYesterdayMalePerson} bg=\"white\" textsex=\"hombres\" />\n                    <BoxSex total={totalYesterdayPerson} count={totalYesterdayFemalePerson} bg=\"white\" textsex=\"Mujeres\" sex=\"woman\" />\n                </div>\n                <BoxSecondary percent={weekPercentPerson} count={totalWeekPerson} text1=\"Esta semana\" text2=\"Personas en total\" />\n                <div className=\"box_share mt \">\n                    <BoxSex total={totalWeekPerson} count={totalWeekMale} bg=\"white\" textsex=\"hombres\" />\n                    <BoxSex total={totalWeekPerson} count={totalWeekFemale} bg=\"white\" textsex=\"Mujeres\" sex=\"woman\" />\n                </div>\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total personas por días de la semana</h2>\n\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Día de la semana más transitado: {maxWeekPerson.day} con {maxWeekPerson.total} personas</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setWeekPersons}\n                        methodStart={setStartDateWeekPerson}\n                        methodEnd={setEndDateWeekPerson}\n                    />\n                </div>\n\n                <div id=\"graficWeekP\" className=\"exportImgCanvas chart-containerv2 mt bg-yellow\">\n                    <GraficWeek\n                        data={weekPerson}\n                        label=\"Total de Personas\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        scalebg=\"blue\"\n                        title=\"Día: \"\n                        labelop=\" tránsito de personas: \"\n                    />\n                    <GraficWeek\n                        data={weekPerson}\n                        label=\"Total de Personas\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        scalebg=\"blue\"\n                        title=\"Día: \"\n                        labelop=\" tránsito de personas: \"\n                        pl={20}\n                        pr={20}\n                        pt={30}\n                        pb={30}\n                    />\n                    <div className=\"title_todayhoras __export_data\">\n                        <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficWeekP', 'TOTAL DE PERSONAS DE DÍA DE SEMANA', '#fee700',\n                            60, dateStartWeekPerson, dateEndWeekPerson, 'week', 'p')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total hombres por días de la semana</h2>\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Día de la semana más transitado: {maxWeekMalePerson.day} con {maxWeekMalePerson.total} hombres</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setWeekPersonsMale}\n                        methodStart={setStartDateWeekMalePerson}\n                        methodEnd={setEndDateWeekMalePerson}\n                    />\n                </div>\n\n                <div id=\"graficWeekPMale\" className=\"exportImgCanvas chart-containerv2 mt \">\n                    <GraficWeek\n                        data={weekPersonMale}\n                        label=\"Total de Hombres\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        scalebg=\"blue\"\n                        title=\"Día: \"\n                        legendbg=\"#454545\"\n                        labelop=\" tránsito de Hombres: \"\n                        sexo=\"male\"\n                    />\n                    <GraficWeek\n                        data={weekPersonMale}\n                        label=\"Total de Hombres\"\n                        dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        scalebg=\"blue\"\n                        title=\"Día: \"\n                        legendbg=\"#454545\"\n                        labelop=\" tránsito de Hombres: \"\n                        sexo=\"male\"\n                        pl={20}\n                        pr={20}\n                        pt={30}\n                        pb={30}\n                    />\n                    <div className=\"title_todayhoras __export_data\">\n                        <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficWeekPMale', 'TOTAL DE HOMBRES DE DÍA DE SEMANA', '#fff',\n                            60, dateStartWeekMalePerson, dateEndWeekMalePerson, 'week', 'p')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total mujeres por días de la semana</h2>\n\n                <div className=\"__detail_top_date\">\n                    <div className=\"__text_top\">Día de la semana más transitado: {maxWeekFemalePerson.day} con {maxWeekFemalePerson.total} mujeres</div>\n                    <DateChange startDate={moment('2020-07-01').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setWeekPersonsFemale}\n                        methodStart={setStartDateWeekFemalePerson}\n                        methodEnd={setEndDateWeekFemalePerson}\n\n                    />\n                </div>\n\n\n                <div id=\"graficWeekPFemale\" className=\"exportImgCanvas chart-containerv2 mt \">\n                    <GraficWeek\n                        data={weekPersonFemale}\n                        label=\"Total de Mujeres\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#0a18f1\"\n                        scalebg=\"#0a18f1\"\n                        title=\"Día: \"\n                        labelop=\" tránsito de Mujeres: \"\n                        sexo=\"female\"\n                    />\n                    <GraficWeek\n                        data={weekPersonFemale}\n                        label=\"Total de Mujeres\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#0a18f1\"\n                        scalebg=\"#0a18f1\"\n                        title=\"Día: \"\n                        labelop=\" tránsito de Mujeres: \"\n                        sexo=\"female\"\n                        pl={20}\n                        pr={20}\n                        pt={30}\n                        pb={30}\n                    />\n                    <div className=\"title_todayhoras __export_data\">\n                        <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficWeekPFemale', 'TOTAL DE MUJERES DE DÍA DE SEMANA', '#fff', 60, dateStartWeekFemalePerson, dateEndWeekFemalePerson, 'week', 'p')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total semana-acumulado personas por hora del día</h2>\n\n                <div className=\"__range_heatmap\">\n                    {heatmapRangePerson.map(({ range, color }) => (\n                        <div className=\"__range\" key={color}>\n                            <span  >{range}</span>\n                            <div className=\"__bg-color-heatmap\"></div>\n                        </div>\n\n                    ))}\n                </div>\n\n                <GraficGrilla data={heatmapPerson} />\n\n                <div className=\"__range_date\">\n                    <BoxSecondary count={totalMonthPerson} text1=\"Total\" text2=\"Personas en total\" initDate={moment('2020-07-24').format(\"YYYY-MM-DD\")} endDate={moment().format(\"YYYY-MM-DD\")} />\n                </div>\n                <div className=\"box_share mt \">\n                    <BoxSex total={totalMonthPerson} count={totalMonthMalePerson} bg=\"white\" textsex=\"hombres\" />\n                    <BoxSex total={totalMonthPerson} count={totalMonthFemalePerson} bg=\"white\" textsex=\"Mujeres\" sex=\"woman\" />\n                </div>\n                <div className=\"__line_separator\"></div>\n                <h2 className=\" __title_grafic\">Total acumulado - Género</h2>\n                <div className=\"__detail_top_date month\">\n                    <div className=\"__text_top\"></div>\n                    <DateChange startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                        endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                        method={setGraficRangeAges}\n                        methodStart={setStartDateAgePerson}\n                        methodEnd={setEndDateAgePerson}\n                    />\n                </div>\n\n                <div id=\"graficRangeAge\" className=\"exportImgCanvas chart-containerv2\">\n                    <HorizontalGrafic dataAge={ageRangePerson} />\n                    <HorizontalGrafic dataAge={ageRangePerson} />\n                    <div className=\"content_title_mes_person\">\n                    </div>\n                    <div className=\"title_todayhoras __export_data\">\n                        <img className=\"__cursor_pointer\" onClick={() => downloadImage('graficRangeAge', 'TOTAL ACUMULADO GENERO', '#fff', 100, dateStartAgePerson, dateEndAgePerson, 'age', 'p')} src=\"./assets/iconos/share.svg\" alt=\"share\" />\n                    </div>\n                </div>\n                <div className=\"__line_separator\"></div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { PersonDesktop } from '../desktop/Persons'\nimport { QonteoMobile } from '../mobile/QonteoMobile'\nimport {isMobile,isBrowser,isSmartTV } from \"react-device-detect\"\nexport const QonteoScreen = () => {\n    return (\n        <>\n            {isMobile && <QonteoMobile />}\n            {(isBrowser || isSmartTV) && <PersonDesktop />}\n        </>\n    )\n}\n","import React from 'react'\n\nexport const BoxPLate = React.memo(({date,textTop,plate='GGV97F',nveces=0}) => {\n    return (\n        <div className={`box_v1 box`}>\n            <div className=\"header_box text-primary uifecha_t\">{date}</div>\n            <div className=\"body_box\">\n                <span className=\"text-primary text-uppercase\">{textTop}</span>\n                <div className=\"number text-primary\" id=\"uihoy1\">{plate}</div>\n                <span className=\"text-primary text-normal\">Ha pasado {nveces} veces</span>\n            </div>\n        </div>\n    )\n})\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setEndDatePlate, setStartDatePlate } from '../../actions/date';\nimport { initSortByClient, initSortByDate, initSortByHour, initSortByLocation, initSortByMembership, initSortByPlate, initSortByTimes, PlateData, PlateSearch, setDatePlates } from '../../actions/plate';\nimport { useForm } from '../../hooks/useForm';\nimport Swal from 'sweetalert2'\nimport { BoxPLate } from '../boxes/BoxPLate';\nimport { DateChange } from '../date/DateChange';\nimport Pagination from 'react-paginating';\n\n\n\nexport const SearchScreen = () => {\n    const dispatch = useDispatch();\n    const { isMenu } = useSelector(state => state.ui);\n    const {dateStartPlate,dateEndPlate} = useSelector( state => state.date );\n    const [currentPage, setCurrentPage] = useState(1)\n    const {\n        topPlate,\n        topPLateMonth,\n        countPlate,\n        totalPlates,\n        isLoading\n    } = useSelector(state => state.plate);\n\n    const [valueInput, handleInputChange,resetForm] = useForm({\n        lINputPlate: ''\n    })\n    const { lINputPlate } = valueInput\n\n\n    useEffect(() => {\n        dispatch(PlateData())\n    }, [dispatch])\n\n    console.log(\"TOTAL PLATES\", totalPlates);\n\n    const searchPlate = (e) => {\n        e.preventDefault();\n        if(lINputPlate.length>1 && lINputPlate.length<6){\n            return Swal.fire('Error','Debe de contener al menos 6 caracteres','error')\n        }\n        dispatch(PlateSearch(lINputPlate))\n        resetForm()\n        setCurrentPage(1)\n       \n    }\n\n    const handlePageChange = (page, e) => {\n        setCurrentPage(page)\n        let searchValue=false;\n        let rangeDate=false;\n        if(dateStartPlate!=='2020-07-01' || dateEndPlate!==moment().format('YYYY-MM-DD')){\n            rangeDate=`&date_from=${dateStartPlate}&date_to=${dateEndPlate}`\n        }\n        searchValue= lINputPlate.length>5 ? lINputPlate : false;\n        const offset=(page-1)*10\n        dispatch(PlateData(offset,searchValue,rangeDate)) \n    }\n    const sortPlate = () => {\n        dispatch(initSortByPlate())\n    }\n    const sortDate = () => {\n        dispatch(initSortByDate())\n    }\n    const sortHour = () => {\n        dispatch(initSortByHour())\n    }\n    const sortLocation = () => {\n        dispatch(initSortByLocation())\n    }\n    const sortTimes = () => {\n        dispatch(initSortByTimes())\n    }\n    const sortClient = () => {\n        dispatch(initSortByClient())\n    }\n    const sortMembership = () => {\n        dispatch(initSortByMembership())\n    }\n\n\n    return (\n        <div className={`_d__grid ${!isMenu ? \"active\" : \"\"}`}>\n            <div>\n            </div>\n            <div className=\"contenedor contet_index \">\n                <h2 className=\"mt __title_\">VEHÍCULOS - PLACAS </h2>\n\n                <div className=\"__grid_plate mt\">\n                    <div className=\"box__share\">\n                        <BoxPLate plate={topPlate.plate} nveces={topPlate.occurency} textTop=\"Top Vehículo \" date=\"2020-08-15\" />\n                        <BoxPLate plate={topPLateMonth.plate} nveces={topPLateMonth.occurency} textTop=\"Top Vehículo este mes\" date=\"2020-08-15\" />\n                    </div>\n                    <div className=\" __p_plage\">\n                        <p>Buscador de Placa</p>\n\n                        <form onSubmit={searchPlate} className=\"buscador\">\n                            <div className=\"cont_s\">\n                                <input name=\"lINputPlate\" onChange={handleInputChange} type=\"text\" className=\"input_search\" placeholder=\"Busca aqui tu placa\" value={lINputPlate} />\n                                <div className=\"icon_search\">\n                                    <img onClick={searchPlate} src=\"assets/iconos/icon-search.svg\" alt=\"\" />\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <div className=\"content_plates_filtered mt\">\n                    <div className=\"__group_filtered_export __d_flex\">\n                        <div className=\"__title_plates_list\">PLACAS</div>\n                        <div className=\" __filtered_ranges_date __d_flex\">\n                            <img src=\"./assets/iconos/filter.svg\" alt=\"filter\" />\n                            <DateChange startDate={moment('2020-07-02').format(\"YYYY-MM-DD\")}\n                                endDate={moment().add(1, 'days').format(\"YYYY-MM-DD\")}\n                                method={setDatePlates} methodStart={setStartDatePlate}\n                                methodEnd={setEndDatePlate}\n                                flexColumn={false}\n                                isPlate={true}\n                                methodPlate={setCurrentPage}\n                                inputReset={'.input_search'}\n                            />\n                        </div>\n                    </div>\n                    <table className=\"__table_plates\">\n\n                        <thead>\n                            <tr>\n                                <th className=\"text-left\"   onClick={sortPlate}>Placa</th>\n                                <th className=\"text-left\"   onClick={sortDate}>Fecha</th>\n                                <th className=\"text-left\"   onClick={sortHour}>Hora</th>\n                                <th className=\"text-left\"   onClick={sortLocation}>Ubicación</th>\n                                <th className=\"text-center\" onClick={sortTimes}># Veces</th>\n                                <th className=\"text-center\" onClick={sortClient}>Cliente</th>\n                                <th className=\"text-center\" onClick={sortMembership}>Membresía</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {isLoading && (\n\n                                <tr aria-colspan=\"7\" className=\"__loading_data text-center\"><td colSpan=\"7\"><img src=\"./assets/load/qonteo.gif\" alt=\"spinner_loaded\" /></td></tr>\n\n                            )}\n                            {\n                                totalPlates.map(({ plate, date, time, location, occurency, client_p, membership_p }, index) =>\n                                    <tr key={index}>\n                                        <td className=\"text-bold text-gris\">{plate}</td>\n                                        <td className=\"text-gris font-500\">{date}</td>\n                                        <td className=\"text-gris font-500\">{time}</td>\n                                        <td className=\"text-gris font-500\">{location}</td>\n                                        <td className=\"text-center text-gris font-500\" >{occurency}</td>\n                                        <td className=\"text-center text-gris font-500\">{client_p ? 'SI' : 'NO'}</td>\n                                        <td className=\"text-center text-gris font-500\">{membership_p ? 'SI' : 'NO'}</td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n\n                    <Pagination\n                        className=\"pagination\"\n                        total={countPlate}\n                        limit={10}\n                        pageCount={10}\n                        currentPage={currentPage}\n                    >\n                        {({\n                            pages,\n                            currentPage,\n                            hasNextPage,\n                            hasPreviousPage,\n                            previousPage,\n                            nextPage,\n                            totalPages,\n                            getPageItemProps\n                        }) => (\n                                <ul role=\"button\">\n\n\n                                    {hasPreviousPage && (\n                                        <li role=\"button\"\n                                            {...getPageItemProps({\n                                                pageValue: previousPage,\n                                                onPageChange: handlePageChange\n                                            })}\n                                        >\n                                            {'<'}\n                                        </li>\n                                    )}\n\n                                    {pages.map(page => {\n\n                                        let active = null;\n                                        if (currentPage === page) {\n                                            active = 'active';\n                                        }\n                                        return (\n                                            <li role=\"button\"\n                                                {...getPageItemProps({\n                                                    pageValue: page,\n                                                    key: page,\n                                                    className: active,\n                                                    \"aria-label\":\"pagina\",\n                                                    onPageChange: handlePageChange\n                                                })}\n                                            >\n                                                {page}\n                                            </li>\n                                        );\n                                    })}\n\n                                    {hasNextPage && (\n                                        <li role=\"button\"\n                                            {...getPageItemProps({\n                                                pageValue: nextPage,\n                                                onPageChange: handlePageChange\n                                            })}\n                                        >\n                                            {'>'}\n                                        </li>\n                                    )}\n                                </ul>\n                            )}\n                    </Pagination>\n\n\n\n\n                </div>\n\n\n\n            </div>\n        </div>\n    )\n}\n","import React, { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom'\nimport { logout } from '../../actions/auth';\nimport { initSetMenu, initSetMenuHide } from '../../actions/ui';\n\n\nexport const NavbarDesktop = React.memo(() => {\n    const dispatch = useDispatch();\n    const { isMenu } = useSelector(state => state.ui);\n    const { pathname } = useLocation()\n    const setIsMenu = useCallback(\n        () => {\n            dispatch(initSetMenu())\n        },\n        [dispatch]\n    )\n    const HideMenuBar = () => {\n        dispatch(initSetMenuHide())\n    }\n\n    const closeSession = () => {\n        localStorage.clear();\n        dispatch(logout());\n    }\n\n    return (\n        <header className={`_d__grid ${isMenu ? '' : 'active'}`}>\n            <div className={`__menu_desple  ${isMenu ? '' : 'active'}`}>\n                <div className=\"__toogle_menu\">\n                    <img onClick={setIsMenu} src={`./assets/iconos/toogle${isMenu ? '-active' : ''}.svg`} className=\"__icon_close\" alt=\"close\" />\n                </div>\n\n                <div className=\"icons\">\n                    <div className=\"__content_menu\">\n                        <NavLink exact activeClassName=\"active_menu\" className=\"__position_relative\" to=\"/\"\n\n                        >\n                            <div className=\"__icon_menu\">\n                                <div onClick={HideMenuBar} className=\"linkClick\"></div>\n\n                                <img id=\"iconMenu\" src={`./assets/iconos/home${pathname === '/' ? '-active' : ''}.svg`} alt=\"home\" />\n                                <span>Dashboard</span>\n                            </div>\n                        </NavLink>\n\n                        <NavLink exact activeClassName=\"active_menu\" className=\"__position_relative\" to=\"/vehiculos\">\n                            <div className=\"__icon_menu\">\n                                <div onClick={HideMenuBar} className=\"linkClick\"></div>\n                                <img src={`./assets/iconos/icon-vehicle${pathname === '/vehiculos' ? '-active' : ''}.svg`} alt=\"home\" />\n                                <span>Vehículos</span>\n\n                            </div>\n                        </NavLink>\n\n\n                        <NavLink exact activeClassName=\"active_menu\" className=\"__position_relative\" to=\"/personas\">\n                            <div className=\"__icon_menu\">\n                            <div onClick={HideMenuBar} className=\"linkClick\"></div>\n                                <img src=\"./assets/iconos/icon_person.svg\" alt=\"personas\" />\n                                <span>Personas</span>\n                            </div>\n\n                        </NavLink>\n\n                        <NavLink exact activeClassName=\"active_menu \" className=\"__position_relative\" to=\"/buscador\">\n                            <div className=\"__icon_menu\">\n                            <div onClick={HideMenuBar} className=\"linkClick\"></div>\n\n                                <img src=\"./assets/iconos/icon_grafic.svg\" alt=\"home\" />\n                                <span>Reportes</span>\n                            </div>\n                        </NavLink>\n\n                    </div>\n\n                    <div className=\"pweroff\">\n                        <img onClick={closeSession}  src=\"/assets/iconos/closesession.svg\" alt=\"iconPerson\" />\n                    </div>\n                </div>\n                \n            </div>\n            <div></div>\n            <div className=\"__site_header_desktop contenedor\">\n                <div className=\"left_logo\">\n                    <img id=\"logoDataPerformance\" src=\"../assets/imagenes/logo_large.png\" alt=\"logo_qonteo\" />\n                </div>\n\n                <div className=\"__center_text\">\n                    <div className=\"logo_soda\">\n                        <img id=\"logoSoda\" src=\"../assets/imagenes/soda_logo.png\" alt=\"soda_logo\" />\n                    </div>\n                </div>\n                <div className=\"__rigth_imgs\">\n                    <img src=\"./assets/iconos/noti.svg\" alt=\"notification\" />\n                </div>\n            </div>\n\n\n        </header>\n    )\n})\n","import { types } from \"../types/types\";\n\nexport const initSetMenu=()=>({type:types.uiMenu})\nexport const initSetMenuHide=()=>({type:types.uiMenuHide})","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { QonteoScreen } from '../components/qonteo/QonteoScreen'\nimport {  SearchScreen } from '../components/desktop/SearchScreen'\nimport { NavbarDesktop } from '../components/ui/NavbarDesktop'\nimport { isMobile,isBrowser,isSmartTV } from 'react-device-detect'\nimport { Navbar } from '../components/ui/Navbar'\nimport { DestacadosScreen } from '../components/desktop/DestacadosScreen'\n\nexport const DashboardRouter = () => {\n    \n    return (\n        <>\n            <div>\n            {(isBrowser || isSmartTV)  && <NavbarDesktop  />}\n            {isMobile && <Navbar />}                \n            <Switch>\n                <Route exact path=\"/\" component={QonteoScreen} />\n                <Route exact path=\"/buscador\" component={SearchScreen} />\n                <Redirect  to=\"/\" />\n            </Switch>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nimport { Route, Redirect } from 'react-router-dom'\n\n\nexport const PublicRoute =({component: Component,isAuthenticated, ...rest}) => {\n\n    \n    return(\n        <>\n        {isAuthenticated ? <Redirect to=\"/\" />   :  <Route  {...rest} render={props => (\n            <Component {...props} />  \n    )}  />}\n    </>\n    )\n    }\n    ","import React, { useState, useEffect } from 'react';\n\n// React-router-dom\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRouter = ({ component: Component, isAuthenticated, ...rest }) => {\n\n\n\n    return (\n        <>\n            {isAuthenticated ? <Route {...rest} render={props => (\n                <Component {...props} />\n            )} /> : <Redirect to=\"/auth/login\" />}\n        </>\n        /*   loggedIn  \n          ? \n          <Route {...rest} render={props => (\n                  <Component {...props} />  \n          )} />   \n          :\n          <Redirect to=\"/auth/login\" /> */\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\n\nimport { AuthRouter } from './AuthRoute';\nimport { DashboardRouter } from './DasboardRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRouter } from './PrivateRoute';\n\n\nexport const AppRoute = () => {\n\n    const dispatch = useDispatch();\n    const { isCheking ,uid} = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    if (!isCheking) {\n        return <h4>Cargando...</h4>;\n    }\n    return (\n        <Router>\n\n            <div>\n                <Switch>\n                    <PublicRoute isAuthenticated={!!uid} path=\"/auth\"\n                        component={AuthRouter} />\n                    <PrivateRouter isAuthenticated={!!uid} path=\"/\"\n                        component={DashboardRouter} />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n\n            </div>\n\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    isCheking: false,\n}\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                isCheking: false,\n                ...action.payload\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                isCheking: true,\n            }\n        case types.authChecking:\n            return {\n                isCheking: true,\n            }\n        default:\n            return state;\n    }\n}","import moment from 'moment'\nconst { types } = require(\"../types/types\");\n\nconst initialize = {\n    dateStartHourVehicle: '2020-07-01',\n    dateEndHourVehicle: moment().format('YYYY-MM-DD'),\n    dateStartWeekVehicle: '2020-07-01',\n    dateEndWeekVehicle: moment().format('YYYY-MM-DD'),\n    dateStartMonthVehicle: '2020-07-01',\n    dateEndMonthVehicle: moment().endOf('month').format(\"YYYY-MM-DD\"),\n\n    dateStartHourPerson: '2020-07-01',\n    dateEndHourPerson: moment().format('YYYY-MM-DD'),\n    dateStartHourMalePerson: '2020-07-01',\n    dateEndHourMalePerson: moment().format('YYYY-MM-DD'),\n    dateStartHourFemalePerson: '2020-07-01',\n    dateEndHourFemalePerson: moment().format('YYYY-MM-DD'),\n    dateStartWeekPerson: '2020-07-01',\n    dateEndWeekPerson: moment().format('YYYY-MM-DD'),\n    dateStartWeekMalePerson: '2020-07-01',\n    dateEndWeekMalePerson: moment().format('YYYY-MM-DD'),\n    dateStartWeekFemalePerson: '2020-07-01',\n    dateEndWeekFemalePerson: moment().format('YYYY-MM-DD'),\n    dateStartMonthPerson: '2020-07-01',\n    dateEndMonthPerson: moment().endOf('month').format(\"YYYY-MM-DD\"),\n    dateStartMonthMalePerson: '2020-07-01',\n    dateEndMonthMalePerson: moment().endOf('month').format(\"YYYY-MM-DD\"),\n    dateStartMonthFemalePerson: '2020-07-01',\n    dateEndMonthFemalePerson: moment().endOf('month').format(\"YYYY-MM-DD\"),\n    dateStartAgePerson: '2020-07-01',\n    dateEndAgePerson: moment().format('YYYY-MM-DD'),\n\n    dateStartTypesVehicle: '2020-07-01',\n    dateEndTypesVehicle: moment().format('YYYY-MM-DD'),\n\n    dateStartPlate: '2020-07-01',\n    dateEndPlate: moment().format('YYYY-MM-DD')\n}\n\nexport const dateReducer = (state = initialize, action) => {\n    switch (action.type) {\n        case types.setDateStartHourVehicle:\n            return {\n                ...state,\n                dateStartHourVehicle: action.payload\n            }\n\n        case types.setDateEndHourVehicle:\n            return {\n                ...state,\n                dateEndHourVehicle: action.payload\n            }\n\n        case types.setDateStartWeekVehicle:\n            return {\n                ...state,\n                dateStartWeekVehicle: action.payload\n            }\n\n        case types.setDateEndWeekVehicle:\n            return {\n                ...state,\n                dateEndWeekVehicle: action.payload\n            }\n        case types.setDateStartMonthVehicle:\n            return {\n                ...state,\n                dateStartMonthVehicle: action.payload\n            }\n\n        case types.setDateEndMonthVehicle:\n            return {\n                ...state,\n                dateEndMonthVehicle: action.payload\n            }\n\n        case types.setDateStartHourPerson:\n            return {\n                ...state,\n                dateStartHourPerson: action.payload\n            }\n\n        case types.setDateEndHourPerson:\n            return {\n                ...state,\n                dateEndHourPerson: action.payload\n            }\n        case types.setDateStartHourMalePerson:\n            return {\n                ...state,\n                dateStartHourMalePerson: action.payload\n            }\n\n        case types.setDateEndHourMalePerson:\n            return {\n                ...state,\n                dateEndHourMalePerson: action.payload\n            }\n        case types.setDateStartHourFemalePerson:\n            return {\n                ...state,\n                dateStartHourFemalePerson: action.payload\n            }\n\n        case types.setDateEndHourFemalePerson:\n            return {\n                ...state,\n                dateEndHourFemalePerson: action.payload\n            }\n\n        case types.setDateStartWeekPerson:\n            return {\n                ...state,\n                dateStartWeekPerson: action.payload\n            }\n\n        case types.setDateEndWeekPerson:\n            return {\n                ...state,\n                dateEndWeekPerson: action.payload\n            }\n\n        case types.setDateStartWeekMalePerson:\n            return {\n                ...state,\n                dateStartWeekMalePerson: action.payload\n            }\n\n        case types.setDateEndWeekMalePerson:\n            return {\n                ...state,\n                dateEndWeekMalePerson: action.payload\n            }\n\n        case types.setDateStartWeekFemalePerson:\n            return {\n                ...state,\n                dateStartWeekFemalePerson: action.payload\n            }\n\n        case types.setDateEndWeekFemalePerson:\n            return {\n                ...state,\n                dateEndWeekFemalePerson: action.payload\n            }\n\n        case types.setDateStartMonthPerson:\n            return {\n                ...state,\n                dateStartMonthPerson: action.payload\n            }\n\n        case types.setDateEndMonthPerson:\n            return {\n                ...state,\n                dateEndMonthPerson: action.payload\n            }\n\n        case types.setDateStartMonthMalePerson:\n            return {\n                ...state,\n                dateStartMonthMalePerson: action.payload\n            }\n\n        case types.setDateEndMonthMalePerson:\n            return {\n                ...state,\n                dateEndMonthMalePerson: action.payload\n            }\n\n        case types.setDateStartMonthFemalePerson:\n            return {\n                ...state,\n                dateStartMonthFemalePerson: action.payload\n            }\n\n        case types.setDateEndMonthFemalePerson:\n            return {\n                ...state,\n                dateEndMonthFemalePerson: action.payload\n            }\n\n\n        case types.setDateStartAgePerson:\n            return {\n                ...state,\n                dateStartAgePerson: action.payload\n            }\n\n        case types.setDateEndAgePerson:\n            return {\n                ...state,\n                dateEndAgePerson: action.payload\n            }\n\n\n        case types.setDateStartPlate:\n            return {\n                ...state,\n                dateStartPlate: action.payload\n            }\n\n        case types.setDateEndPlate:\n            return {\n                ...state,\n                dateEndPlate: action.payload\n            }\n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\"\n\nconst initialize={\n    hoursPerson:[],\n    hoursPersonFemale:[],\n    hoursPersonMale:[],\n    weekPerson:[],\n    weekPersonMale:[],\n    weekPersonFemale:[],\n    monthPerson:[],\n    monthPersonFemale:[],\n    monthPersonMale:[],\n    heatmapPerson:[],\n    heatmapRangePerson:[],\n    ageRangePerson:[],\n    totalTodayPerson:0,\n    totalTodayPersonFemale:0,\n    totalTodayPersonMale:0,\n    todayPercentPerson:0,\n    todayPercentFemalePerson:0,\n    todayPercentMalePerson:0,\n    totalYesterdayPerson:0,\n    totalYesterdayFemalePerson:0,\n    totalYesterdayMalePerson:0,\n    maxHourPerson:[],\n    maxHourFemalePerson:[],\n    maxHourMalePerson:[],\n    maxWeekPerson:[],\n    maxWeekFemalePerson:[],\n    maxWeekMalePerson:[],\n    maxMonthPerson:[],\n    maxMonthFemalePerson:[],\n    maxMonthMalePerson:[],\n    totalWeekPerson:0,\n    totalWeekFemale:0,\n    totalWeekMale:0,\n    weekPercentPerson:0,\n    totalMonthPerson:0,\n    totalMonthFemalePerson:0,\n    totalMonthMalePerson:0\n}\n\n\n\nexport const personReducer = (state = initialize, action) => {\n    switch (action.type) {\n      case types.dataPersons:\n        return {\n          ...state,\n          ...action.payload\n        }\n      case types.setHoursPersons:\n        return {\n          ...state,\n          ...action.payload\n  \n        }\n  \n      case types.setHoursPersonsMale:\n        return {\n          ...state,\n          ...action.payload\n        }\n      case types.setHoursPersonsFemale:\n        return {\n          ...state,\n          ...action.payload\n        }\n  \n      case types.setWeekPersons:\n        return {\n          ...state,\n          ...action.payload\n  \n        }\n  \n      case types.setWeekPersonsMale:\n        return {\n          ...state,\n          ...action.payload\n        }\n      case types.setWeekPersonsFemale:\n        return {\n          ...state,\n          ...action.payload\n        }\n  \n      case types.setMonthGraficPersons:\n        return {\n          ...state,\n          ...action.payload\n  \n        }\n  \n      case types.setMonthGraficPersonsMale:\n        return {\n          ...state,\n          ...action.payload\n        }\n      case types.setMonthGraficPersonsFemale:\n        return {\n          ...state,\n          ...action.payload\n        }\n  \n      case types.setGraficRangesAges:\n        return {\n          ...state,\n          ...action.payload\n        }\n      default:\n        return state;\n    }\n  }\n  \n  ","import { types } from \"../types/types\"\n\nconst initial = {\n    topPlate: {},\n    topPLateMonth: {},\n    isLoading: true,\n    countPlate: 0,\n    totalPlates: [],\n    isTimes: 1,\n    isSortPlate: 1,\n    isSortDate: 1,\n    isSortByHour: 1,\n    isSortByLocation: 1,\n    isSortByClient: 1,\n    isSortByMembership: 1\n}\n\nexport const plateReducer = (state = initial, action) => {\n    switch (action.type) {\n        case types.getPlate:\n            return {\n                ...state,\n                ...action.payload,\n                isLoading: false\n            }\n        case types.startLoadingPlate:\n            return {\n                ...state,\n                totalPlates: [],\n                isLoading: true\n            }\n        case types.searchPlate:\n            return {\n                ...state,\n                ...action.payload,\n                isLoading: false\n            }\n        case types.sortByPlate:\n            return {\n                ...state,\n                totalPlates: state.totalPlates.sort((a, b) => a.plate > b.plate ? state.isSortPlate * -1 : state.isSortPlate),\n                isSortPlate: state.isSortPlate * -1,\n            }\n        case types.sortByDate:\n            return {\n                ...state,\n                totalPlates: state.totalPlates.sort((a, b) => a.date > b.date ? state.isSortDate * -1 : state.isSortDate),\n                isSortDate: state.isSortDate * -1,\n            }\n        case types.sortByHour:\n            return {\n                ...state,\n                totalPlates: state.totalPlates.sort((a, b) => a.time > b.time ? state.isSortByHour * -1 : state.isSortByHour),\n                isSortByHour: state.isSortByHour * -1,\n\n            }\n\n        case types.sortByLocation:\n            return {\n                ...state,\n                totalPlates: state.totalPlates.sort((a, b) => a.location > b.location ? state.isSortByLocation * -1 : state.isSortByLocation),\n                isSortByLocation: state.isSortByLocation * -1,\n\n            }\n\n        case types.sortByTimes:\n            return {\n                ...state,\n                totalPlates: state.totalPlates.sort((a, b) => {\n                    const num1=parseInt(a.occurency);\n                    const num2=parseInt(b.occurency);\n\n                    return num1 < num2 ? state.isTimes * -1 : state.isTimes\n                }),\n                isTimes: state.isTimes * -1\n            }\n        case types.sortByClient:\n            return {\n                ...state,\n                totalPlates: state.totalPlates.sort((a, b) => a.client_p > b.client_p ? state.isSortByClient * -1 : state.isSortByClient),\n                isSortByClient: state.isSortByClient * -1,\n\n            }\n        case types.sortByMembership:\n            return {\n                ...state,\n                totalPlates: state.totalPlates.sort((a, b) => a.membership_p > b.membership_p ? state.isSortByMembership * -1 : state.isSortByMembership),\n                isSortByMembership: state.isSortByMembership * -1\n            }\n\n        case types.setPlatesCurrenDate:\n            return {\n                ...state,\n                ...action.payload,\n                isLoading: false\n            }\n        default:\n            return state\n    }\n}","import moment from 'moment'\nconst { types } = require(\"../types/types\");\n\nconst init={\nbus:{},\ncar:{},\nbike:{},\nsuv:{},\ntruck:{},\nother:{},\nvan:{},\ncountTodayTypes:0,\ntodayPercentTypes:0,\ncountYesterdayTypes:0,\ncountWeekTypes:0,\nweekPercentTypes:0,\ncountTypes:0,\ncreationDate:'2020-07-11',\ncurrentDate:moment().format('YYYY-MM-DD')\n}\n\nexport const typeVehicleReducer=(state=init,action)=>{\n    switch (action.type) {\n        case types.dataTypeVehicle:\n               return {\n                   ...state,\n                   ...action.payload\n               }\n    \n        default:\n            return state;\n    }\n}","const { types } = require(\"../types/types\");\n\nconst initialize={\n    isMenu:false,\n}\n\nexport const uiReducer=(state=initialize,action)=>{\n    switch (action.type) {\n        case types.uiMenu:\n        return {\n            isMenu:!state.isMenu\n        }\n        case types.uiMenuHide:\n            return {\n                isMenu:false\n            }\n        \n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\"\n\nconst initialize={\n    vehicleHours:[],\n    vehicleDaysOfWeek:[],\n    vehicleDaysOfMonth:[],\n    totalToday:0,\n    todayPercent:0,\n    yesterdayTotal:0,\n    weekTotal:0,\n    weekPercent:0,\n    monthTotal:0,\n    maxHour:{},\n    maxWeek:{},\n    maxMonth:{}\n}\n\n\nexport const vehicleReducer = (state =initialize, action) => {\n    switch (action.type) {\n        case types.dataVehicles:\n            return {\n                ...state,\n                ...action.payload\n            }\n        case types.setHoursVehicles:\n            return {\n                ...state,\n                ...action.payload\n            }\n        case types.setWeeksVehicles:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        case types.setMonthsVehicles:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { dateReducer } from \"./DateReducer\";\nimport { personReducer } from \"./personReducer\";\nimport { plateReducer } from \"./plateReducer\";\nimport { typeVehicleReducer } from \"./typesVehicleReducer\";\nimport { uiReducer } from \"./uiReducer\";\nimport { vehicleReducer } from \"./vehicleReducer\";\n\nexport const rootReducer=combineReducers({\n    auth:authReducer,\n    vehicle:vehicleReducer,\n    person:personReducer,\n    date:dateReducer,\n    ui:uiReducer,\n    plate:plateReducer,\n    typeVehicle:typeVehicleReducer\n})","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nexport const store=createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRoute } from './routes/AppRoute'\nimport { store } from './store/store'\n\nexport const QonteoApp = (props) => {\n    return (\n        <Provider store={store} >\n           \n        <AppRoute />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QonteoApp } from './QonteoApp';\nimport './styles/styles.scss'\nReactDOM.render(\n    <QonteoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}