{"version":3,"sources":["helpers/fetch.js","types/types.js","action/auth.js","interfaz/ui/utils/auth/Header.js","interfaz/ui/auth/ChooseGroup.js","interfaz/pages/auth/LoginScreen.js","hooks/useForm.js","interfaz/pages/auth/RegisterScreen.js","action/person.js","interfaz/ui/grafics/GraficBar.js","interfaz/ui/layout/Footer.js","interfaz/ui/layout/Header.js","interfaz/ui/layout/SideBar.js","interfaz/ui/layout/Main.js","helpers/calculo.js","interfaz/ui/utils/boxes/BoxDate.js","interfaz/ui/utils/boxes/BoxDateRange.js","interfaz/ui/utils/boxes/BoxGender.js","interfaz/ui/utils/boxes/BoxWithOutPercent.js","interfaz/ui/utils/boxes/BoxWithPercent.js","helpers/roundbarchart.js","action/date.js","hooks/useDate.js","interfaz/ui/grafics/GraficLine.js","interfaz/ui/grafics/HeatMapDesktop.js","interfaz/ui/grafics/GraficCompare.js","hooks/useButtons.js","action/toten.js","interfaz/pages/desktop/person/PersonScreen.js","routes/PublicRouter.js","routes/PrivateRouter.js","hooks/useButtonsReport.js","action/trazabilidad.js","interfaz/pages/desktop/person/TrazibilidadScreen.js","helpers/exportPDF.js","interfaz/pages/mobile/MobileScreen.js","interfaz/pages/desktop/person/EspecificoScreen.js","hooks/useDateReport.js","interfaz/pages/desktop/person/OperacionalScreen.js","interfaz/pages/desktop/reports/ComercialScreenRerpot.js","interfaz/pages/desktop/reports/EjecutivoScreenReport.js","interfaz/ui/exports/ButtonsExport.js","interfaz/pages/desktop/trazabilidad/SensorScreen.js","interfaz/pages/reports/ExportReport.js","routes/AppRouter.js","reducers/authReducer.js","reducers/dateReducer.js","reducers/personReducer.js","reducers/totenReducer.js","reducers/trazabilidadReducer.js","reducers/rootReducer.js","store/store.js","App.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","token","localStorage","getItem","url","fetch","headers","Authorization","body","JSON","stringify","fetchConToken","types","authChecking","authCheckingFinish","authStartLogin","authLogin","logout","authStartRegister","authLogout","initializePerson","changeDate","getToten","initialDataTrazabilidad","changeTrazabilidadByHour","resetDates","groupUrl","groupName","groupId","startLogin","user","dispatch","setItem","_id","String","Date","getTime","login","uid","firstNames","lastName","email","phonenumber","portraitUrl","portrait_url","country","groups","city","isCheking","checkingStart","type","payload","Header","React","memo","children","className","src","alt","ChooseGroup","select","useRef","useDispatch","selectGroup","codeAndName","current","value","split","resp","json","window","location","href","ref","name","hidden","map","g","i","id","code","onClick","LoginScreen","useState","error","setError","isLoading","setIsLoading","isSelect","setIsSelect","countGroup","setcountGroup","campos","fields","setFields","target","useForm","password","inputChange","handleLogin","e","preventDefault","errors","Swal","fire","length","Error","onSubmit","onChange","placeholder","to","RegisterScreen","autoComplete","currentDate","format","currentSevenDay","subDays","lastMonth","subMonths","startPersonData","toten","getState","auth","respMonth","hours","week","heatmap","heatmap_range","ageRanges","max_hour","max_hour_female","max_hour_male","max_week_day","max_week_day_female","max_week_day_male","month","max_month_day","max_month_day_female","max_month_day_male","monthPersonTotal","h","label","day","x","y","total","monthPersonMale","male","monthPersonFemale","female","hoursPersonTotal","time","hour","hoursPersonMale","hoursPersonFemale","weekPersonTotal","dow","weekPersonMale","weekPersonFemale","heatmapPersonTotal","heatmapPersonRange","color","range","rangePersonAges","getData","maxHourPersonTotal","maxHourPersonMale","maxHourPersonFemale","maxWeekPersonTotal","maxWeekPersonMale","maxWeekPersonFemale","maxMonthPersonTotal","maxMonthPersonMale","maxMonthPersonFemale","callAPIPersonForCurrentDate","dateFrom","dateTo","totem","setGraphicsInHourForCurrentDate","gender","filter","capatalizeGender","charAt","toLocaleUpperCase","substr","setGraphicInJson","maxValue","setGraphicsInWeekForCurrentDate","setGraphicsInMonthForCurrentDate","setGraphicsInHeatmapForCurrentDate","rangeHeatmap","console","log","setGraphicsInRangeForCurrentDate","GraficBar","dtsetbg","optionbg","scalebg","title","labelop","legendbg","scltxtlbl","pl","pr","pb","pt","theme","labels","a","datasets","backgroundColor","borderWidth","options","cornerRadius","display","fontSize","fontColor","fontFamily","fontStyle","layout","padding","left","right","top","bottom","legend","position","boxWidth","tooltips","enabled","mode","callbacks","tooltipItem","datax","index","tooltipItems","yLabel","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","gridLines","scaleLabel","labelString","xAxes","Footer","SideBar","isOpen","setIsOpen","useLocation","openContent","parentNode","classList","toggle","document","querySelector","exact","activeClassName","pathname","includes","clear","Main","isSidebar","formatNumber","num","toString","replace","porcentajepersona","resultado","Math","round","isNaN","Number","POSITIVE_INFINITY","BoxDate","count","percent","txtdetail","start_date","toLocaleDateString","BoxDateRange","today","end_date","getDate","getMonth","getFullYear","BoxGender","BoxWithOutPercent","BoxWithPercent","ChartJS","elements","Rectangle","prototype","draw","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","config","horizontal","base","height","width","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","nextCornerId","radius","floor","x_tl","x_tr","y_tl","y_tr","x_bl","x_br","y_bl","y_br","lineTo","quadraticCurveTo","fill","stroke","setDate","start","startvalue","end","endvalue","useDate","startDatekey","endDatekey","date","useSelector","state","addDays","startDateValue","setStartDateValue","endDateValue","setEndDateValue","setStarDate","formatStartDate","formatEndDate","year","Intl","DateTimeFormat","yearEnd","monthEnd","dayEnd","isAfter","isEqual","setEndDate","yearStart","monthStart","dayStart","isBefore","DateHtml","selected","maxDate","showMonthYearPicker","GraficLine","sexo","lineColor","lineTension","borderDashOffset","borderJoinStyle","borderCapStyle","pointBorderWidth","pointHoverRadius","line","tension","point","drawBorder","zeroLineColor","zeroLineWidth","HeatMapDesktop","useEffect","tablehours","validarref","timeOut","setTimeout","parentElement","removeChild","remove","margin","svg","d3","attr","append","domain","call","r","myColor","rectContainer","selectAll","d","enter","bandwidth","style","text","_i","GraficCompare","reverse","titleFontSize","xPadding","yPadding","bodyFontSize","bodySpacing","sign","datasetIndex","stacked","useButtons","buttons","idReset","indexInicial","setdate","setenddate","Object","keys","isActive","setIsActive","setRangeDate","element","date_to","contains","filterDate","formatDateFilter","reset","ButtonsHtml","v","startToten","totemTotal","resources","tabs","resourcesFinal","PersonScreen","person","dateStartHourPerson","dateEndHourPerson","dateStartHourMalePerson","dateEndHourMalePerson","dateStartHourFemalePerson","dateEndHourFemalePerson","dateStartWeekPerson","dateEndWeekPerson","dateStartWeekMalePerson","dateEndWeekMalePerson","dateStartWeekFemalePerson","dateEndWeekFemalePerson","dateStartMonthPerson","dateEndMonthPerson","dateStartMonthMalePerson","dateEndMonthMalePerson","dateStartMonthFemalePerson","dateEndMonthFemalePerson","dateStartAgePerson","dateEndAgePerson","dateStartHeatMap","dateEndHeatMap","setToten","DateHour","setStartDateHrTotal","setEndDateHrTotal","DateHourMale","setStartDateHrMale","setEndDateHrMale","DateHourFemale","setStartDateHrFemale","setEndDateHrFemale","DateWeek","setStartDateWkTotal","setEndDateWkTotal","DateWeekMale","setStartDateWkMale","setEndDateWkMale","DateWeekFemale","setStartDateWkFemale","setEndDateWkFemale","DateMonth","setStartDateMntTotal","setEndDateMntTotal","DateMonthMale","setStartDateMntMale","setEndDateMntMale","DateMonthFemale","setStartDateMntFemale","setEndDateMntFemale","DateAgeRanges","setStartDateAgeRg","setEndDateAgeRg","ButtonHourTotal","ButtonHourMale","ButtonHourFemale","ButtonWeekTotal","ButtonWeekMale","ButtonWeekFemale","ButtonMonthTotal","ButtonMonthMale","ButtonMonthFemale","ButtonHeatMap","ButtonRangeAges","changeTab","tagName","numToten","getAttribute","GroupName","selectedTabClassName","t","yesterday","txtDay","PublicRoute","Component","component","isAuthenticated","rest","render","props","PrivateRouter","useButtonsReport","sectionValue","setSectionValue","getTrazabilidad","initTrazabilidad","setTrazabilidadByHour","TrazibilidadScreen","trazabilidad","todos","CCPN001","CCPN002","CCPN003","EquipoHtmlBtn","valueEquipo","cliente","visitantes","d7","d15","d30","GeneroHtmlBtn","valueGenero","setGenero","isPlay","setIsPlay","setTimeOut","agestart","ageend","all","timestart","timeend","countHours","setCountHours","counter","setCounter","numberHour","setNumberHour","countHrs","Array","_","twodBtn","threetBtn","add","dataf","canvas","getElementById","getContext","setTransform","clearRect","forEach","c","arc","ratio","PI","font","fillText","labelX","labelY","startCounter","number","clearTimeout","interval","n","dataHourFilter","newHour","setHour","backgroundImage","exportPDFPerson","grafic","startdate","enddate","elementPng","doc","jsPDF","img","Image","addImage","img2","setFontSize","toPng","then","urlG","totemText","save","processExcel","peticion","blob","exportExcel","filename","saveAs","downloadImageDesktop","datestart","urlg","linkHref","createElement","user_id","date_from","image","setAttribute","click","MobileScreen","maxHourPerson","maxWeekPerson","startDateHour","endDateHour","startDateHourMale","endDateHourMale","startDateHourFemale","endDateHourFemale","reload","obj","predicate","key","reduce","res","assign","EspecificoScreen","history","TipoHtmlBtn","valueTipo","equipoJson","PeriodoHtmlBtn","valuePeriodo","valueContacto","setContacto","useDateReport","age","setAge","setTime","isEspecific","setIsEspecific","generar","contact_type","report_type","resource","toLowerCase","age_from","age_to","time_from","time_to","newDate","dataFilter","reporte","push","btn","OperacionalScreen","toten1","toten2","imgExport","dataUrl","setTextColor","ComercialScreenReport","progress","setDataFilter","textGender","setTextGender","differenceInDay","setDifferenceInDay","differenceInDays","substring","p","generarPdf","elementGrilla","graficHour","graficWeek","graficMonth","urlGrilla","urlGHour","urlGWeek","urlGMonth","addPage","salida","output","formData","FormData","replaceAll","boxes","disabled","EjecutivoScreenReport","canvas2","canvas3","ButtonsExport","methodpdf","methodcsv","methodshare","validsSensors","SensorScreen","useParams","ExportReport","AppRouter","path","isBrowser","initialState","initialize","init","totenReducer","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM"],"mappings":"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","file":"static/js/main.84aed386.chunk.js","sourcesContent":["/**\n * @module Helpers\n */\n\nconst baseUrl=process.env.REACT_APP_API_URL;\n\n/**\n * Fecth sin token\n * @param {String} endpoint endpoint a consultar\n * @param {Object} data Data a recibir\n * @param {String} method metodo del fecth\n * @returns {Object} Data\n */\nconst fetchSinToken=(endpoint,data,method='GET')=>{\n    const token = localStorage.getItem('token-qonteo') || '';\n    const url=`${baseUrl}/${endpoint}`;\n    if(method==='GET'){\n        return fetch(url,{\n            headers:{\n                Authorization:token\n            }\n        })\n    }else{\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify(data)\n        })\n    }\n}\n\n/**\n * Fecth con token\n * @param {String} endpoint endpoint a consultar\n * @param {Object} data Data a recibir\n * @param {String} method metodo del fecth\n * @returns {Object} Data \n */\nconst fetchConToken=(endpoint,data,method='GET')=>{\n    \n    const url=`${baseUrl}${endpoint}`;\n    const token=localStorage.getItem('token-qonteo') || '';\n    if(method==='GET'){\n        return fetch(url,{\n            method,\n            headers:{\n                'Authorization':token\n            }\n        })\n    }else if(method==='POST'){\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'Authorization':token\n            },\n            body: JSON.stringify(data)\n        })\n    }else{\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Authorization':token\n            },\n            body:data \n        })\n    }\n}\n\n\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","export const types={\n    authChecking:'[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish Checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    logout:'[Auth] Logout',\n    authStartRegister: '[auth] Start Register',\n    authLogout: '[auth] Logout',\n    initializePerson:'[Person] Initialize Data',\n    changeDate:'[Date] set New Date',\n    getToten:'[Toten] get Data Toten',\n    initialDataTrazabilidad:'[Trazabilidad] get data init Trazabilidad',\n    changeTrazabilidadByHour:'[Trazabilidad] set Data by hour',\n    resetDates:'[Date] reset Dates',\n    groupUrl: 'realplaza',\n    groupName: 'Real Plaza',\n    groupId: '7576'\n}","import { fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\n/**\n * @module Actions\n */\n\n/**\n * Action para empezar el login\n * @param {Object} param0 token de usuario y el usuario\n * @param {Number} groupId id del grupo\n * @returns callBack con el dispatch del login\n */\nconst startLogin = ({ token, user }, groupId) => {\n    return async (dispatch) => {\n\n        localStorage.setItem('token-qonteo', `bear ${token}`);\n        localStorage.setItem('id-user-qonteo', user._id);\n        localStorage.setItem('group-id-qonteo', String(groupId));\n        localStorage.setItem('token-init-date-qonteo', new Date().getTime());\n        dispatch(login({\n            uid: user._id,\n            firstNames: user.firstNames,\n            lastName: user.lastName,\n            email: user.email,\n            phonenumber: user.phonenumber,\n            portraitUrl: user.portrait_url,\n            country: user.country,\n            groups: user.groups,\n            city: user.city,\n            isCheking: true\n        }))\n    }\n}\n\n/**\n * Action para empezar el cheking del login\n * @returns callback para logear o retornar al login\n */\nconst startChecking = (dispatch) => {\n    return async (dispatch) => {\n        const token = localStorage.getItem('token-qonteo') || '';\n\n        if (token.length > 0) {\n            try {\n                const resp = await (await fetchSinToken('token-renew')).json();\n                if (Object.keys(resp).length > 0) {\n                    const { user } = resp;\n                    dispatch(login({\n                        uid: user._id,\n                        firstNames: user.firstNames,\n                        lastName: user.lastName,\n                        email: user.email,\n                        phonenumber: user.phonenumber,\n                        portraitUrl: user.portrait_url,\n                        country: user.country,\n                        city: user.city,\n                        groups: user.groups,\n                        isCheking: true\n                    }))\n                }\n            } catch (error) {\n                dispatch(checkingStart())\n                console.log('error')\n            }\n        } else {\n            dispatch(checkingStart())\n        }\n    }\n}\nconst checkingStart = () => ({ type: types.authChecking })\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\n\n/**\n * Action para desloguear\n * @returns {Object} deslogueo\n */\nconst logout = () => ({ type: types.authChecking });\n\n/**\n * Aciton para loguear usuario\n * @param {Object} user Datos del usuario\n * @returns {Object} loguear\n */\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n\n\nexport {\n    startLogin,\n    startChecking,\n    checkingStart,\n    checkingFinish,\n    logout\n}","import React from 'react'\n\nexport const Header = React.memo(({ children }) => {\n  \n    return (\n        <>\n            <div className=\"headerTop d-flex auth\">\n                <img className=\"imgSmall\" src=\"/assets/images/header/onlysoda.png\" alt=\"logosoda\" />\n                <h1 className=\"titleHeadAuth\">\n                    data <br/>\n                    street <br/>\n                    performance\n                </h1>\n            </div>\n            <div className=\"w-100 text-center logoMiddle\">\n            <img  src=\"/assets/images/header/soda.png\" />\n            <div className=\"groupIcons mtMedium\">\n                <img src=\"/assets/icons/camara.svg\"/>\n                <img src=\"/assets/icons/auto.svg\"/>\n                <img src=\"/assets/icons/person-inspect.svg\"/>\n            </div>\n            </div>\n            {children}\n        </>\n    )\n})\n","import React, { useRef } from 'react'\nimport {useDispatch } from 'react-redux'\nimport { startLogin } from '../../../action/auth';\nimport { fetchSinToken } from '../../../helpers/fetch';\nimport { types } from '../../../types/types';\n\nexport const ChooseGroup = ({groups,data}) => {\n    const select = useRef(null)\n    const dispatch = useDispatch();\n    const selectGroup=async ()=>{\n        const codeAndName=select.current.value.split(',');\n        if(codeAndName[0]===types.groupId){\n            const resp = await fetchSinToken('login', data, 'POST');\n            const body = await resp.json();\n            \n            return dispatch(startLogin(body,codeAndName[0]));\n        }\n        window.location.href=`https://${codeAndName[1]}.qonteo.com/`;\n    }\n    return (\n        <div className=\"chooseGroup\">\n            <select ref={select} name=\"groupNumber\">\n                <option hidden >Seleccione un grupo</option>\n                {groups.map((g, i) => (\n                    <option key={i} value={[g.id,g.name]}>{g.code}</option>\n                ))}\n            </select>\n            <button className=\"btn choose\" onClick={selectGroup} >Ir</button>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { startLogin } from '../../../action/auth';\nimport { fetchSinToken } from '../../../helpers/fetch';\nimport { useForm } from '../../../hooks/useForm';\nimport { Header } from '../../ui/utils/auth/Header';\nimport { useDispatch } from 'react-redux';\nimport { ChooseGroup } from '../../ui/auth/ChooseGroup';\nimport Swal from 'sweetalert2';\nimport { types } from '../../../types/types';\nexport const LoginScreen = () => {\n    const [error, setError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSelect, setIsSelect] = useState(false);\n    const [countGroup, setcountGroup] = useState([])\n\n    const dispatch = useDispatch();\n\n    const [fields, inputChange] = useForm({\n        email: '',\n        password: ''\n    })\n    const { email, password } = fields;\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            if (email !== '' && password !== '') {\n                setIsLoading(true);\n                const resp = await (await fetchSinToken('login', fields, 'POST')).json();\n                if (!!resp.errors) {\n                    setIsLoading(false);\n                    return Swal.fire('Error', 'Las credenciales son invalidas', 'error');\n                };\n\n               \n                const { user: { groups } } = resp;\n                setIsLoading(false);\n                if (groups.length === 0 || !groups) return setError('No tiene acceso a este sitio')\n                if (groups.length === 1 && groups[0].code !== types.groupName) return setError('No pertenece a este grupo')\n                if (groups.length === 1 && groups[0].code === types.groupName) return dispatch(startLogin(resp));\n\n                setIsSelect(true);\n                setcountGroup(groups);\n                return;\n            }\n            Swal.fire('Error', 'Los campos no pueden estar vacios', 'error')\n\n        } catch (error) {\n            throw new Error('ocurrio un error al realizar la peticion')\n        }\n\n\n    }\n\n\n    return (\n        <Header>\n            <div className=\"contenedor\">\n                {!isSelect\n                    ? (\n                        <>\n                            <span className=\"error spaceTopSmall d-block text-center\">{error && error}</span>\n                            <form onSubmit={handleLogin} className=\"formLogin spaceBottomSmall\" >\n                                <input type=\"text\" name=\"email\"\n                                    onChange={inputChange}\n                                    placeholder=\"Correo electrónico\"\n                                    value={email}\n                                />\n                                <input type=\"password\"\n                                    name=\"password\"\n                                    onChange={inputChange}\n                                    placeholder=\"Contraseña\"\n                                    value={password}\n                                />\n                                <div className=\"forgotPass text-rigth\">\n                                    <span className=\"link \" >¿Olvidaste tu contraseña?</span>\n                                </div>\n\n                                <input type=\"submit\" value={isLoading ? 'Cargando...' : 'Iniciar Sesíon'} className=\"btn btn-login\" />\n                                <NavLink className=\"link mtSmall text-center w-100 d-block\" to=\"/auth/registrarse\">Registrarse</NavLink>\n                            </form>\n                        </>\n                    )\n                    :\n                    (\n                        <ChooseGroup groups={countGroup} data={fields} />\n                    )\n                }\n            </div>\n        </Header>\n    )\n}\n","import React, { useState } from 'react'\n\nexport const useForm = (campos) => {\n    const [fields, setFields] = useState(campos);\n    const changeValueInput=({target})=>{\n        setFields({\n            ...fields,\n            [target.name]:target.value\n        })\n    }\n\n\n\n    return [fields,changeValueInput]\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Header } from '../../ui/utils/auth/Header'\n\nexport const RegisterScreen = () => {\n    return (\n        <Header>\n             <div className=\"contenedor\">\n          \n\n          <form /* onSubmit={handleLogin} */ className=\"formLogin spaceBottomSmall\" >\n          <input type=\"text\"   name=\"rFirstname\" id=\"firstname\" autoComplete=\"off\" placeholder=\"Nombre\" />\n            <input type=\"text\"   name=\"rLastname\" id=\"lastname\" autoComplete=\"off\" placeholder=\"Apellidos\" />\n              <input type=\"text\" name=\"lEmail\"\n                 /*  onChange={inputChange } */\n                  id=\"correolog\"\n                  placeholder=\"Correo electrónico\"\n                /*   value={lEmail} */\n              />\n              <input type=\"password\"\n                  name=\"lPassword\"\n                 /*  onChange={inputChange} */\n                  id=\"contralog\"\n                  placeholder=\"Contraseña\"\n                 /*  value={lPassword} */\n\n              />\n            \n              <input type=\"submit\" value=\"Registrarse\" className=\"btn btn-login\" />\n              <NavLink className=\"link mtSmall text-center w-100 d-block\" to=\"/auth/login\">Ingresar</NavLink>\n          </form>\n      </div>\n        </Header>\n    )\n}\n","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport {subDays,format,subMonths,startOfMonth} from 'date-fns'\nimport Swal from 'sweetalert2'\n\n/**\n * @module Actions\n */\nconst currentDate = format(new Date(), 'yyyy-MM-dd');\nconst currentSevenDay = format(subDays(new Date(),7), 'yyyy-MM-dd');\nconst lastMonth = format(subMonths(new Date(),1), 'yyyy-MM-dd');\n\n\n/**\n * \n * @param {String} toten toten de los datos requeridos\n * @returns callback que guarda los datos en el state\n */\nconst startPersonData = (toten = '') => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            //const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const groupId=7576;\n            const resp =await (\n                await fetchConToken(\n                    `/get-person-graphics?heatmap_p=true&range_p=true&date_to=${currentDate}&date_from=${currentSevenDay}&resource=${toten}&group_id=${types.groupId}`\n                )\n            ).json();\n\n            const respMonth =await (await fetchConToken(`/get-person-graphics?heatmap_p=true&age_range_p=true&date_from=${lastMonth}&date_to=${currentDate}&resource=${toten}&group_id=${types.groupId}`)).json();\n            const { hours, week, heatmap, heatmap_range, ageRanges, max_hour, max_hour_female, max_hour_male, max_week_day, max_week_day_female, max_week_day_male } = resp;\n            \n            const {  month, max_month_day, max_month_day_female, max_month_day_male } = respMonth;\n            const monthPersonTotal = month.map(h => { return { label: h.day, x: h.day, y: h.total } });\n            const monthPersonMale = month.map(h => { return { label: h.day, x: h.day, y: h.male } });\n            const monthPersonFemale = month.map(h => { return { label: h.day, x: h.day, y: h.female } });\n\n\n            const hoursPersonTotal = hours.map(h => { return { label: h.time, x: h.hour, y: h.total } });\n            const hoursPersonMale = hours.map(h => { return { label: h.time, x: h.hour, y: h.male } });\n            const hoursPersonFemale = hours.map(h => { return { label: h.time, x: h.hour, y: h.female } });\n            const weekPersonTotal = week.map(h => { return { label: h.dow, x: h.dow, y: h.total } });\n            const weekPersonMale = week.map(h => { return { label: h.dow, x: h.dow, y: h.male } });\n            const weekPersonFemale = week.map(h => { return { label: h.dow, x: h.dow, y: h.female } });\n            const heatmapPersonTotal = heatmap.map(h => { return { label: h.time, x: h.day, y: h.total } });\n            const heatmapPersonRange = heatmap_range.map(h => { return { label: h.color, x: h.range, y: h.color } });\n            let rangePersonAges=[]\n            if(!!ageRanges){\n                rangePersonAges = ageRanges.map(h => { return { label: h.range, x: h.male, y: h.female } });\n            }\n\n\n\n\n\n\n            dispatch(getData({\n                hoursPersonTotal,\n                hoursPersonMale,\n                hoursPersonFemale,\n                weekPersonTotal,\n                weekPersonMale,\n                weekPersonFemale,\n                heatmapPersonTotal,\n                heatmapPersonRange,\n                rangePersonAges,\n                maxHourPersonTotal: max_hour,\n                maxHourPersonMale: max_hour_male,\n                maxHourPersonFemale: max_hour_female,\n                maxWeekPersonTotal: max_week_day,\n                maxWeekPersonMale: max_week_day_male,\n                maxWeekPersonFemale: max_week_day_female,\n                monthPersonTotal,\n                monthPersonMale,\n                monthPersonFemale,  \n                maxMonthPersonTotal: max_month_day,\n                maxMonthPersonMale: max_month_day_male,\n                maxMonthPersonFemale: max_month_day_female\n            }))\n   \n        } catch (error) {\n            //throw new Error(error)\n            //console.log(error)\n        \n        }\n    }\n}\n\n/**\n * \n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} groupId id del grupo de los datos\n * @returns data de la peticion\n */\nconst callAPIPersonForCurrentDate = async (dateFrom, dateTo, totem, groupId) => {\n    \n    return await (await fetchConToken(`/get-person-graphics?heatmap_p=true&age_range_p=true&date_from=${dateFrom}&date_to=${dateTo}&resource=${totem}&group_id=${types.groupId}`)).json();\n}\n\n/**\n * funcion para traer los datos de las horas\n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @returns callback con los datos\n */\nconst setGraphicsInHourForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupId)[0].id;\n            const resp = await callAPIPersonForCurrentDate(dateFrom, dateTo, totem,groupId)\n            const data = resp['hours'].map(h => { return { label: h.time, x: h.hour, y: h[gender] } });\n            const capatalizeGender = gender.charAt(0).toLocaleUpperCase() + gender.substr(1, gender.length);\n            const setGraphicInJson = 'hoursPerson' + capatalizeGender;\n            let maxValue = resp['max_hour'];\n            if (gender !== 'total') {\n                maxValue = resp[`max_hour_${gender}`];\n            }\n            dispatch(getData({\n                [setGraphicInJson]: data,\n                [`maxHourPerson${capatalizeGender}`]: maxValue\n            }))\n\n            \n\n        } catch (error) {\n/*             Swal.fire('Error', 'Hubo un problema al traer su requerimiento, vuelva a intentarlo. Si el problema persiste comuniquese con uno de nuestros asesores.', 'error')\n */        }\n\n    }\n\n\n\n}\n\n/**\n * funcion para traer los datos de los graficos de la semana\n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @returns callback con los datos\n */\nconst setGraphicsInWeekForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const resp = await callAPIPersonForCurrentDate(dateFrom, dateTo, totem,groupId)\n            const data = resp['week'].map(h => { return { label: h.dow, x: h.dow, y: h[gender] } });\n            const capatalizeGender = gender.charAt(0).toLocaleUpperCase() + gender.substr(1, gender.length);\n            const setGraphicInJson = 'weekPerson' + capatalizeGender;\n            let maxValue = resp['max_week_day'];\n            if (gender !== 'total') {\n                maxValue = resp[`max_week_day_${gender}`];\n            }\n            dispatch(getData({\n                [setGraphicInJson]: data,\n                [`maxWeekPerson${capatalizeGender}`]: maxValue\n            }))\n        } catch (error) {\n            //do some\n        }\n    }\n}\n\n/**\n * funcion para traer los datos de los graficos del mes\n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @returns callback con los datos\n */\nconst setGraphicsInMonthForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const resp = await callAPIPersonForCurrentDate(dateFrom, dateTo, totem,groupId)\n            const data = resp['month'].map(h => { return { label: h.day, x: h.day, y: h[gender] } });\n            const capatalizeGender = gender.charAt(0).toLocaleUpperCase() + gender.substr(1, gender.length);\n            const setGraphicInJson = 'monthPerson' + capatalizeGender;\n            let maxValue = resp['max_month_day'];\n            if (gender !== 'total') {\n                maxValue = resp[`max_month_day_${gender}`];\n            }\n            dispatch(getData({\n                [setGraphicInJson]: data,\n                [`maxMonthPerson${capatalizeGender}`]: maxValue\n            }))\n        } catch (error) {\n            // do some     \n        }\n    }\n}\nconst setGraphicsInHeatmapForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupId)[0].id;\n            const resp = await (await fetchConToken(`/get-person-graphics?date_from=${dateFrom}&date_to=${dateTo}&age_range_p=true&group_id=${types.groupId}&resource=${totem}&heatmap_p=true`)).json();\n            const data = resp['heatmap'].map(h => { return { label: h.time, x: h.day, y: h.total } });\n            const rangeHeatmap = resp['heatmap_range'].map(h => { return { label: h.color, x: h.range, y: h.color } });\n            console.log(data)\n            dispatch(getData({\n                heatmapPersonTotal: data,\n                heatmapPersonRange: rangeHeatmap\n            }));\n        } catch (error) {\n            // do some    \n        }\n    }\n}\nconst setGraphicsInRangeForCurrentDate =(dateFrom, dateTo, totem = '', gender = 'total') => {\n    return async (dispatch,getState)=>{\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.changeTrazabilidadByHour)[0].id;\n            const resp = await (await fetchConToken(`/get-person-graphics?date_from=${dateFrom}&date_to=${dateTo}&age_range_p=true&group_id=${types.groupId}&totem=${totem}&heatmap_p=true`)).json();\n            const data = resp['ageRanges'].map(h => { return { label: h.range, x: h.male, y: h.female } });\n            dispatch(getData({\n                rangePersonAges: data\n            }));\n        } catch (error) {\n        //do some     \n        }\n    }\n}\n\n\nconst getData = (data) => ({\n    type: types.initializePerson,\n    payload: data\n})\nconst resetDates=()=>({\n    type:types.resetDates\n})\n\nexport {\n    startPersonData,\n    setGraphicsInHourForCurrentDate,\n    setGraphicsInWeekForCurrentDate,\n    setGraphicsInMonthForCurrentDate,\n    setGraphicsInHeatmapForCurrentDate,\n    setGraphicsInRangeForCurrentDate\n}","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\nexport const GraficBar = React.memo(({ data = [], label, dtsetbg, optionbg, scalebg, title, labelop, legendbg = 'black', scltxtlbl = false, pl = 0, pr = 0, pb = 0, pt = 0, theme = 'ligth', id = '' }) => {\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\">\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <div className=\"flex-center\" >\n                        <div id={id} className={`contenedorChart  ${theme} classtest`}>\n                            <Bar data={\n\n                                {\n\n                                    labels: data.map(a => a.x),\n                                    datasets: [\n                                        {\n                                            label: `${label}`,\n\n                                            backgroundColor: `${dtsetbg}`,\n                                            data: data.map(a => a.y),\n                                            borderWidth: 0\n                                        },\n\n                                    ],\n                                    borderWidth: 0\n                                }\n\n                            }\n                                options={{\n\n                                    cornerRadius: 20,\n                                    title: {\n                                        display: true,\n\n                                        fontSize: 30,\n                                        fontColor: `${optionbg}`,\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 400,\n                                    },\n                                    layout: {\n                                        padding: {\n                                            left: pl,\n                                            right: pr,\n                                            top: pt,\n                                            bottom: pb\n                                        },\n                                    },\n                                    legend: {\n                                        position: 'bottom',\n                                        labels: {\n                                            padding: 20,\n                                            boxWidth: 15,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontColor: `${legendbg}`\n                                        }\n                                    },\n                                    tooltips: {\n                                        enabled: true,\n                                        mode: 'single',\n                                        callbacks: {\n                                            title: function (tooltipItem, datax) {\n\n                                                return `${title}` + data[tooltipItem[0].index].label;\n                                            },\n                                            label: function (tooltipItems, data) {\n                                                return `${labelop}` + tooltipItems.yLabel;\n                                            },\n                                        }\n                                    },\n                                    maintainAspectRatio: false,\n                                    scales: {\n                                        yAxes: [{\n                                            ticks: {\n                                                fontColor: `${scalebg}`,\n                                                fontSize: 18,\n                                                fontFamily: 'Barlow',\n                                                fontStyle: 600,\n                                                beginAtZero: true,\n\n                                            },\n                                            gridLines: {\n                                                display: false\n                                            }\n                                            ,\n                                            scaleLabel: {\n                                                display: false,\n                                                labelString: `${scltxtlbl}`,\n                                                fontSize: 18,\n\n                                            }\n\n                                        }],\n                                        xAxes: [{\n                                            ticks: {\n                                                fontColor: `${scalebg}`,\n                                                fontSize: 18,\n                                                fontFamily: 'Barlow',\n                                                fontStyle: 600,\n\n                                                beginAtZero: true\n                                            },\n                                            gridLines: {\n                                                display: false\n                                            }\n                                        }]\n                                    },\n                                }}\n                            />\n                        </div>\n                    </div>\n\n                )\n            }\n        </>\n    )\n})\n","import React from 'react'\n\nexport const Footer = () => {\n    return (\n        <div>\n           \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Header = React.memo(() => {\n    return (\n        <div className=\"headerTop grid3\">\n            <img src=\"/assets/images/header/logosoda.png\" alt=\"logosoda\"/>\n            <img src=\"/assets/images/header/soda.png\" alt=\"logo\"/>\n          <div className=\"iconNotify\">\n          <img src=\"/assets/icons/notify.svg\" alt=\"notify\"/>\n          </div>\n            \n        </div>\n    )\n})\n","import React, { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { checkingFinish, logout } from '../../../action/auth';\nexport const SideBar = React.memo(() => {\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const openContent = useRef(null);\n    const openClose = () => {\n\n        openContent.current.parentNode.classList.toggle('open');\n        document.querySelector('.contentScreens').classList.toggle('open')\n        setIsOpen(!isOpen);\n    }\n\n    const closeSession = () => {\n        localStorage.clear();\n        dispatch(logout());\n    }\n\n    return (\n        <>\n            <div ref={openContent} className=\"iconCloseOpen\" onClick={openClose}>\n                <img src={`${isOpen ? '/assets/icons/close.svg' : '/assets/icons/closeopen.svg'} `} alt=\"iconClose\" />\n            </div>\n            <div className=\"icons\">\n                <div>\n                    <NavLink exact to=\"/\" activeClassName=\"activeIcon\" className=\"icon\">\n                        <img src=\"/assets/icons/home.svg\" alt=\"iconHome\" />\n\n                        <span className=\"titleIcon\">Home</span>\n\n                    </NavLink>\n                    <NavLink exact to=\"/\" activeClassName=\"activeIcon\" className=\"icon\">\n                        <span className=\"nameIcon\">Oportunidades</span>\n\n                        <img src=\"/assets/icons/person.svg\" alt=\"iconPerson\" />\n                        <span className=\"titleIcon\">Personas</span>\n\n                    </NavLink>\n                    <div className=\"icon-two\">\n                        <span className=\"nameIcon\">Reportes</span>\n                        <div className={`icon ${location.pathname.includes('especifico') ? 'activeIcon' : ''}`}>\n                            <NavLink exact to=\"/reportes/especifico\" >\n                                <img src=\"/assets/icons/report.svg\" className=\"w-4 l-2\" alt=\"iconPerson\" />\n                                <span className=\"titleIcon\">Especifico</span>\n                            </NavLink>\n\n                        </div>                    \n\n                    </div>\n\n                   {/*  <div className=\"icon__submenu\">\n                        <ul>\n                            <li>Panisteria</li>\n                        </ul>\n                    </div> */}\n                </div>\n\n                <div className=\"pweroff\">\n                    <img onClick={closeSession} src=\"/assets/icons/closesession.svg\" alt=\"iconPerson\" />\n                </div>\n\n\n            </div>\n        </>\n    )\n})\n","import React from 'react'\nimport { Footer } from './Footer'\nimport { Header } from './Header'\nimport { SideBar } from './SideBar'\n\nexport const Main = React.memo(({children,isSidebar=true}) => {\n    return (\n        <div className=\"mainScreens\">\n            {isSidebar && \n            <div className=\"contentSidebar\">\n            <SideBar />\n            </div>\n            }\n            \n            <div className={`contentScreens ${!isSidebar && 'm-0'}`}  >\n                <Header />\n                {children}\n                <Footer />\n            </div>\n        </div>\n    )\n})\n","/**\n * @module Helpers\n */\n\n/**\n * funcion para obtener el formato de los números\n * @param {Number} num \n * @returns numero formateado\n */\n\nconst formatNumber=(num)=> {\n    if(num===null){\n        return 0\n    }\n    return num?.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\n\n\nconst porcentajepersona=(total=100, num=20)=> {\n    const resultado=Math.round((num * 100) / total);\n    if(isNaN(resultado) || resultado===Number.POSITIVE_INFINITY) return 0;\n    return resultado;\n}\n\n\n\nexport {\n    formatNumber,\n    porcentajepersona,\n}","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxDate = ({theme=\"dark\",count=0,percent=0,txtdetail=''}) => {  \n    var start_date = new Date().toLocaleDateString();\n    return (\n        <div className={`boxUI flexColumn ${theme}`}>\n            <span className=\"boxDate\">{start_date}</span>\n            <div className=\"main\">\n                <div className=\"boxBody date\">\n                    <span className=\"boxPercent\">{percent>0 ? '+' : percent===0 ? '' : '-'} {percent}%</span>\n                    <span className=\"boxCount\">{formatNumber(count)}</span>\n                    <span className=\"boxDay\">{txtdetail}</span>\n                </div>\n                <div className=\"boxFooter mtBox\">Personas en Total</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxDateRange = ({theme=\"dark\",count=0,txtdetail=''}) => {\n    var today = new Date();\n    const monthNames = [\"Ene\", \"Feb\", \"Marc\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Set\", \"Oct\", \"Nov\", \"Dec\"\n];\n    \n    var start_date = '16-Nov-2022'; \n    var end_date = today.getDate()+'-'+ monthNames[today.getMonth()] + '-' + today.getFullYear();\n \n    return (\n        <div className={`boxUI flexColumn ${theme}`}>\n\n            <div className=\"rangeDate\">\n                <span className=\"boxDate\">{start_date}</span>\n                <span className=\"boxDate\">{end_date}</span>\n            </div>\n            <div className=\"main\">\n                <div className=\"boxBody\">\n                    <span className=\"boxCount \">{formatNumber(count)}</span>\n                    <span className=\"BoxText mtBox\">{txtdetail}</span>\n                </div>\n                <div className=\"boxFooter mtBox\">Personas en Total</div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber, porcentajepersona } from '../../../../helpers/calculo'\n\nexport const BoxGender = ({gender,theme='dark',total=0,count=0}) => {\n    return (\n        <div className={`boxUI flex gender ${theme}`}>\n        <div >\n            <div className=\"boxBody\">\n                {gender==='male' \n                    ?\n                    <img className=\"icongender\" src={theme==='dark' ? '/assets/icons/male-white.svg' : '/assets/icons/male-dark.svg' } />\n                    :\n                    <img className=\"icongender\" src={theme==='dark' ? '/assets/icons/female-white.svg' : '/assets/icons/female-dark.svg' } />\n                }\n                <span className=\"count boxCountGender\">{formatNumber(count)}</span>\n                <span className=\" mtBox\">{gender==='male' ? 'HOMBRES' : 'MUJERES'}</span>\n            </div>\n            <div className=\"boxFooter mtBox\"><span className=\"boxPercent\">{porcentajepersona(total,count)} %</span></div>\n        </div>\n    </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxWithOutPercent = ({theme=\"dark\",count=0,txtdetail='AYER'}) => {\n    return (\n        <div className={`boxUI flex ${theme}`}>\n            <div className=\"content\">\n            <div className=\"boxBody\">\n                <span className=\"boxCount\">{formatNumber(count)}</span>\n                <span className=\"boxDay mtBox\">{txtdetail}</span>\n            </div>\n            <div className=\"boxFooter mtBox\">Personas en Total</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxWithPercent = ({theme=\"dark\",count=0,percent=0,txtdetail='Personas en Total'}) => {\n    return (\n        <div className={`boxUI flex ${theme}`}>\n            <div className=\"content\">\n                <div className=\"boxBody\">\n                    <span className=\"boxPercent\">{percent>0 ? '+' : percent===0 ? '' : '-'} {percent}%</span>\n                    <span className=\"boxCount mtBox\">{formatNumber(count)}</span>\n                    <span className=\"boxDay mtBox\">{txtdetail}</span>\n                </div>\n                <div className=\"boxFooter mtBox\">Personas en Total</div>\n            </div>\n        </div>\n    )\n}\n","//Custom rewrite for radius border on bar draw\n//Code from https://github.com/jedtrow/Chart.js-Rounded-Bar-Charts with a few adjustments\n\nimport { Chart as ChartJS } from 'react-chartjs-2'\n\nChartJS.elements.Rectangle.prototype.draw = function() {\n    \n  const ctx = this._chart.ctx;\n  let vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped;\n  let borderWidth = vm.borderWidth;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let cornerRadius = this._chart.config.options.cornerRadius;\n  if(cornerRadius < 0){ cornerRadius = 0; }\n  if(typeof cornerRadius === 'undefined'){ cornerRadius = 0; }\n\n  if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top? 1: -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left? 1: -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize? barSize: borderWidth;\n      const halfStroke = borderWidth / 2;\n      // Adjust borderWidth when bar top position is near vm.base(zero).\n      const borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\n      const borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\n      const borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\n      const borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\n      // not become a vertical line?\n      if (borderLeft !== borderRight) {\n          top = borderTop;\n          bottom = borderBottom;\n      }\n      // not become a horizontal line?\n      if (borderTop !== borderBottom) {\n          left = borderLeft;\n          right = borderRight;\n      }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [\n      [left, bottom],\n      [left, top],\n      [right, top],\n      [right, bottom]\n  ];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n      startCorner = 0;\n  }\n\n  function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      let nextCornerId = i+1;\n      if(nextCornerId === 4){\n          nextCornerId = 0\n      }\n\n      cornerAt(nextCornerId);\n\n      const width = corners[2][0] - corners[1][0];\n      const height = corners[0][1] - corners[1][1];\n      const x = corners[1][0];\n      const y = corners[1][1];\n\n      let radius = cornerRadius;\n      // Fix radius being too large\n      if(radius > Math.abs(height)/2){\n          radius = Math.floor(Math.abs(height)/2);\n      }\n      if(radius > Math.abs(width)/2){\n          radius = Math.floor(Math.abs(width)/2);\n      }\n\n      if(height < 0){\n          // Negative values in a standard bar chart\n          const x_tl = x;          const x_tr = x+width;\n          const y_tl = y+height;   const y_tr = y+height;\n\n          const x_bl = x;         const  x_br = x+width;\n          const y_bl = y;        const   y_br = y;\n\n          // Draw\n          ctx.moveTo(x_bl+radius, y_bl);\n          ctx.lineTo(x_br-radius, y_br);\n          ctx.quadraticCurveTo(x_br, y_br, x_br, y_br-radius);\n          ctx.lineTo(x_tr, y_tr+radius);\n          ctx.quadraticCurveTo(x_tr, y_tr, x_tr-radius, y_tr);\n          ctx.lineTo(x_tl+radius, y_tl);\n          ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl+radius);\n          ctx.lineTo(x_bl, y_bl-radius);\n          ctx.quadraticCurveTo(x_bl, y_bl, x_bl+radius, y_bl);\n\n      }else if(width < 0){\n          // Negative values in a horizontal bar chart\n          const x_tl = x+width;   const  x_tr = x;\n          const y_tl= y;          const  y_tr = y;\n\n          const x_bl = x+width;   const  x_br = x;\n          const y_bl = y+height; const   y_br = y+height;\n\n          // Draw\n          ctx.moveTo(x_bl+radius, y_bl);\n          ctx.lineTo(x_br-radius, y_br);\n          ctx.quadraticCurveTo(x_br, y_br, x_br, y_br-radius);\n          ctx.lineTo(x_tr, y_tr+radius);\n          ctx.quadraticCurveTo(x_tr, y_tr, x_tr-radius, y_tr);\n          ctx.lineTo(x_tl+radius, y_tl);\n          ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl+radius);\n          ctx.lineTo(x_bl, y_bl-radius);\n          ctx.quadraticCurveTo(x_bl, y_bl, x_bl+radius, y_bl);\n\n      }else{\n          //Positive Value\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n      }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n      ctx.stroke();\n  }\n  }","import { types } from \"../types/types\"\n\n/**\n * @module Actions\n */\n\n/**\n * Action para enviar una fecha\n * @param {String} start fecha de inicio para los datos\n * @param {String} startvalue fecha de inico con Formato\n * @param {String} end fecha de fin\n * @param {String} endvalue fecha de fin con Formato\n */\nexport const setDate=(start,startvalue,end,endvalue) => ({\n    type: types.changeDate,\n    start,\n    startvalue,\n    end,\n    endvalue\n})","import React, { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2'\nimport { format, isAfter, isEqual,isBefore,endOfMonth,subMonths,subDays,addDays } from 'date-fns'\nimport { setDate } from '../action/date';\n\n/**\n * @module Hooks\n */\n\n/**\n * \n * @param {Function} method Dispatch a realizar por el botón\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @param {String} startDatekey fecha de inicio para los datos\n * @param {String} endDatekey fecha de fin para los datos\n * @param {String} idReset id reset para el div\n * @param {Boolean} month variable para mostrar el showMonthYearPicker\n * @returns {Array} Dates Picker, valores de inicio y fin y sus setters\n */\n\nconst useDate = (method,totem=0,gender,startDatekey,endDatekey,idReset,month=false) => {\n    const dispatch = useDispatch();\n    const date = useSelector( state => state.date );\n    const [startDateValue, setStartDateValue] = useState( addDays(new Date(date[startDatekey]), 1))\n    const [endDateValue, setEndDateValue] = useState(addDays(new Date(date[endDatekey]),1))\n\n    const setStarDate = (date) => {\n     \n        const formatStartDate = format(date, 'yyyy-MM-dd');\n        const formatEndDate = format(endDateValue, 'yyyy-MM-dd');\n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(endDateValue);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(endDateValue);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(endDateValue);\n        if (isAfter(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd)) || isEqual(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha Inicio debe ser menor que la fecha de fin','error')\n        }\n        setStartDateValue(date);\n        dispatch(method(formatStartDate, formatEndDate,totem,gender));\n        dispatch(setDate(startDatekey,formatStartDate,endDatekey,formatEndDate))\n    }\n    const setEndDate = (date) => {\n        const formatStartDate = format(startDateValue, 'yyyy-MM-dd');\n        const formatEndDate = format(date, 'yyyy-MM-dd');\n        const yearStart = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(startDateValue);\n        const monthStart = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(startDateValue);\n        const dayStart = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(startDateValue);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n        if (isBefore( new Date(yearEnd, monthEnd,dayEnd),new Date(yearStart, monthStart, dayStart)) || isEqual(new Date(yearStart, monthStart, dayStart), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha fin debe ser mayor que la fecha de inicio','error')\n        }\n        setEndDateValue(date);\n\n        dispatch(method(formatStartDate, formatEndDate,totem,gender));\n        dispatch(setDate(startDatekey,formatStartDate,endDatekey,formatEndDate))\n    }\n\n    const DateHtml = () => (\n        <div className=\"filterDate\">\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={startDateValue}\n                    /*     locale=\"es\" */\n                    onChange={setStarDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n                    showMonthYearPicker={month}\n                />\n            </div>\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={endDateValue}\n                    /*  locale=\"es\" */\n                    onChange={setEndDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n                    showMonthYearPicker={month}\n\n                />\n            </div>\n        </div>\n    );\n    return [DateHtml,startDateValue,endDateValue,setStartDateValue,setEndDateValue];\n}\n\nexport {useDate}","import React from 'react'\nimport { Line } from 'react-chartjs-2';\nexport const GraficLine = ({ data, label, dtsetbg, optionbg, scalebg, title, labelop, legendbg = 'black', sexo = null, lineColor = \"#5BCDFA\", scltxtlbl = \"Cantidad de vehículos\", pl = 0, pr = 0, pb = 0, pt = 0,theme='ligth',id='' }) => {\n    \n\n\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\">\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <div className=\"flex-center\" >\n                    <div id={id} className={`contenedorChart  ${theme} classtest`}>\n                    <Line data={\n                        {\n                            labels: data.map(a => a.x),\n                            datasets: [\n                                {\n                                    label: `${label}`,\n            \n                                    backgroundColor: `${dtsetbg}`,\n                                    data: data.map(a => a.y),\n                                    lineTension: 0.1,\n                                    borderDashOffset: 0.0,\n                                    borderJoinStyle: 'miter',\n                                    borderCapStyle: 'butt',\n                                    pointBorderWidth: 1,\n                                    pointHoverRadius: 5,\n                                },\n            \n                            ],\n                            borderWidth: 1\n                        }\n            \n                    }\n                        options={\n            \n                            {\n            \n                                cornerRadius: 20,\n                                title: {\n                                    display: true,\n                                    /*   text: ['TOTAL VEHÍCULOS POR HORA DEL DÍA', '', ''], */\n                                    fontSize: 30,\n                                    padding: 50,\n                                    fontColor: `${optionbg}`,\n                                    fontFamily: 'Barlow',\n                                    fontStyle: 400,\n                                },\n            \n                                layout: {\n                                    padding: {\n                                        left: pl,\n                                        right: pr,\n                                        top: pt,\n                                        bottom: pb\n                                    },\n                                },\n            \n            \n                                legend: {\n                                    position: 'bottom',\n                                    labels: {\n                                        padding: 20,\n                                        boxWidth: 15,\n                                        fontSize: 18,\n                                        fontFamily: 'Barlow',\n                                        fontColor: `${legendbg}`\n                                    }\n                                },\n                                elements: {\n                                    line: {\n                                        borderWidth: 5,\n                                        fill: false,\n                                        borderColor: `${lineColor}`,\n                                        tension: .5,\n                                    },\n            \n                                    point: {\n                                        radius: 6,\n            \n            \n                                    }\n                                },\n                                tooltips: {\n                                    enabled: true,\n                                    mode: 'single',\n                                    callbacks: {\n                                        title: function (tooltipItem, datax) {\n            \n                                            return `${title} ` + data[tooltipItem[0].index].label;\n                                        },\n                                        label: function (tooltipItems, data) {\n                                            return `${labelop} ` + tooltipItems.yLabel;\n                                        },\n                                    }\n                                },\n                                maintainAspectRatio: false,\n                                scales: {\n                                    yAxes: [{\n                                        ticks: {\n                                            fontColor: `${scalebg}`,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontStyle: 600,\n                                            beginAtZero: true,\n            \n                                        },\n                                        gridLines: {\n            \n                                            display: true,\n                                            drawBorder: false,\n                                            zeroLineColor: '#FEE700',\n                                            zeroLineWidth: 3,\n            \n            \n                                        },\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: `${scltxtlbl}`,\n                                            fontSize: 18,\n            \n                                        }\n            \n                                    }],\n                                    xAxes: [{\n                                        ticks: {\n                                            fontColor: `${scalebg}`,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontStyle: 600,\n                                            beginAtZero: true\n                                        },\n                                        gridLines: {\n                                            display: false,\n            \n                                        }\n                                    }],\n            \n                                },\n            \n                            }}\n                    />\n                    </div>\n                    </div>\n\n                )\n            }\n        </>\n\n    )\n}\n","import React, { useRef, useEffect, memo } from 'react'\nimport * as d3 from 'd3'\nimport moment from 'moment'\nexport const HeatMapDesktop = memo(({ data, range }) => {\n\n    const ref = useRef()\n\n    useEffect(() => {\n        tablehours(data)\n\n        return () => {\n            validarref()\n        }\n    }, [data])\n\n    useEffect(() => {\n        (()=>{\n           let timeOut= setTimeout(() => {\n                if(data.length===0){\n                    if(!!document.querySelector('.heatmaploading')){\n                        document.querySelector('.heatmaploading').parentElement.parentElement.removeChild(document.querySelector('.heatmaploading').parentElement);\n                    }\n                }\n            }, 5000);\n            return ()=>{\n                clearTimeout(timeOut)\n            }\n        })()\n    }, [])\n\n    const validarref = () => {\n        if (!!ref.current) {\n            ref.current.querySelector('svg') !== null && ref.current.querySelector('svg').remove()\n        }\n    }\n\n    const tablehours = (data) => {\n\n        const dias_semana = ['DOM','LUN','MAR','MIE','JUE','VIE','SAB'];\n       \n    \n        \n        if (data.length > 0) {\n          \n    \n           \n            const margin = { top: 30, right: 200, bottom: 200, left: 50 },\n                width = 900 - margin.left - margin.right,\n                height = 950 - margin.top - margin.bottom;\n\n\n            const svg = d3.select(ref.current)\n                .attr(\"align\", \"center\")\n\n                .append(\"svg\")\n                .attr(\"width\", 700)\n                .attr(\"height\", 750)\n                .append(\"g\")\n\n                .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n            const myVars = [\"23:00h\", \"22:00h\", \"21:00h\", \"20:00h\", \"19:00h\", \"18:00h\", \"17:00h\", \"16:00h\", \"15:00h\", \"14:00h\", \"13:00h\", \"12:00h\", \"11:00h\", \"10:00h\", \"9:00h\", \"8:00h\", \"7:00h\", \"6:00h\", \"5:00h\", \"4:00h\", \"3:00h\", \"2:00h\", \"1:00h\", \"0:00h\"];\n\n            const x = d3.scaleBand()\n                .range([0, width])\n                .domain(dias_semana)\n                .padding(0.01);\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0, 0)\")\n                .call(d3.axisTop(x))\n\n\n            // Build X scales and axis:\n            const y = d3.scaleBand()\n                .range([height, 0])\n                .domain(myVars)\n                .padding(0.01);\n            svg.append(\"g\")\n                .call(d3.axisLeft(y));\n                \n            const range = data.map(r => r.y)\n            // Build color scale\n            const myColor = d3.scaleQuantile()\n                .range(['#5BCDFA', '#5EAFFE', '#4782F5', '#3450EF', '#0502D3'])\n                //\t\t\t\t\t\t\t\t\t\t  .range([\"#63be7b\", \"#f8696b\"])\n                .domain(range)\n            const rectContainer = svg.selectAll()\n                .data(data, function (d) {  return d.x + ':' + d.label; })\n                .enter().append(\"g\")\n                .attr(\"transform\", function (d) {\n                    \n                    return \"translate(\" + (x(d.x)) + \",\" + (y(d.label)) + \")\"\n                });\n\n            /* svg.append(\"text\")\n                .attr(\"x\", 525)\n                .attr(\"y\", 720)\n                .attr(\"text-anchor\", \"left\")\n                .style(\"font-size\", \"30px\")\n                .style(\"font-family\", \"Barlow\")\n                .text(\"Total\"); */\n\n            rectContainer.append(\"rect\")\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", y.bandwidth())\n                .style(\"fill\", function (d) { return myColor(d.y) })\n\n            rectContainer.append(\"text\")\n            .attr(\"x\", (x.bandwidth()) / 2)\n            .attr(\"y\", ((y.bandwidth()) / 2) + 4)\n            .text(function (d) { return d.y })\n            .style(\"font-family\", \"Barlow\")\n            .style(\"font-size\", \"8pt\")\n            .style('fill', 'white')\n            .style(\"text-anchor\", \"middle\")\n\n        }\n\n\n\n    }\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic heatmaploading\">\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <>\n                        <div className=\"rangeHeatMap\">\n                            {range.map(({ x},_i) => (\n                                <div className=\"range\" key={_i}>\n                                    <span  >{x}</span>\n                                    <div className=\"bgColorHeatMap\"></div>\n                                </div>\n\n                            ))}\n                        </div>\n                        <div className=\"mtxl text-center\"\n                            ref={ref}\n                        ></div>\n                    </>\n\n                )\n            }\n\n        </>\n    )\n}\n)","import React, { useEffect, useRef } from 'react'\nimport { HorizontalBar } from 'react-chartjs-2';\n\nexport const GraficCompare = React.memo(({ data = [], id = '' }) => {\n\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\" >\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <div className=\"flex-center\"   >\n                        <div id={id} className={`contenedorChart  classtest`}>\n                            <HorizontalBar data={\n                                {\n                                    labels: data.map(a => a.label),\n                                    datasets: [\n\n                                        {\n                                            label: 'Hombres',\n                                            backgroundColor: '#0502D3',\n\n                                            data: data.map(a => a.x)\n                                        },\n                                        {\n                                            label: 'Mujeres',\n                                            backgroundColor: '#1EAEF0',\n                                            data: data.map(a => -1 * a.y)\n                                        }\n                                    ]\n                                }\n\n                            }\n                                options={{\n                                    cornerRadius: 20,\n                                    title: {\n                                        display: true,\n                                        /*    text: ['TOTAL ACUMULADO PERSONAS POR GÉNERO', '', ''], */\n                                        fontSize: 30,\n                                        padding: 30,\n                                        fontColor: '#454545',\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 400\n                                    },\n                                    maintainAspectRatio: false,\n                                    legend: {\n                                        position: 'bottom',\n                                        labels: {\n                                            padding: 20,\n                                            boxWidth: 15,\n                                            fontFamily: 'system-ui',\n                                            fontColor: 'black'\n                                        },\n                                        reverse: true\n                                    },\n\n\n\n                                    tooltips: {\n                                        titleFontSize: 20,\n                                        xPadding: 20,\n                                        yPadding: 20,\n                                        bodyFontSize: 15,\n                                        bodySpacing: 10,\n                                        callbacks: {\n                                            title: function (tooltipItem, data) {\n                                                return \"Edad:  \" + data.labels[tooltipItem[0].index] + ' años';\n                                            },\n                                            label: function (tooltipItem, data) {\n                                                var value = Math.sign(data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]) === -1 ? data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] * -1 : data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]\n\n\n                                                return data.datasets[tooltipItem.datasetIndex].label + ': ' + value;\n\n\n                                            }\n                                        }\n                                    },\n                                    elements: {\n                                        line: {\n                                            borderWidth: 8,\n                                            fill: false\n                                        },\n\n                                    },\n\n                                    scales: {\n                                        xAxes: [\n                                            {\n                                                stacked: false,\n                                                ticks: {\n                                                    beginAtZero: true,\n                                                },\n                                                gridLines: {\n                                                    display: false\n                                                }\n                                            },\n\n                                        ],\n                                        yAxes: [\n                                            {\n                                                stacked: true,\n                                                ticks: {\n                                                    beginAtZero: true,\n                                                },\n                                                gridLines: {\n                                                    display: false\n                                                },\n                                                scaleLabel: {\n                                                    display: true,\n                                                    labelString: \"Edad\",\n                                                    fontSize: 18,\n\n                                                },\n                                                position: \"left\",\n                                            }\n                                        ],\n                                    }\n\n                                }}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n        </>\n\n    )\n})\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { subDays, format, addDays } from 'date-fns'\nimport { setDate } from '../action/date';\n\n/**\n * @module Hooks\n */\n\nconst currentDate = format(new Date(), 'yyyy-MM-dd');\n\n/**\n * \n * @param {object} buttons Contenido de los botones\n * @param {Function} method Dispatch a realizar por el botón\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @param {String} startDatekey fecha de inicio para los datos\n * @param {String} endDatekey fecha de fin para los datos\n * @param {String} idReset id reset para el div\n * @param {Number} indexInicial inddicador del boton en el arrreglo\n * @param {*} setdate funcion para enviar la fecha\n * @param {*} setenddate funcion para enviar la fecha de fin\n * @returns {Array} Botones y el reset\n */\n\nconst useButtons = (buttons = {}, method, totem = 0, gender, startDatekey, endDatekey, idReset, indexInicial = 0, setdate = false, setenddate = false) => {\n    const [isActive, setIsActive] = useState(Object.keys(buttons)[indexInicial])\n\n    const dispatch = useDispatch();\n    const setRangeDate = (element, date_to) => {\n        if (element.classList.contains('active')) return false;\n        const filterDate = subDays(new Date(), date_to);\n        const formatDateFilter = format(filterDate, 'yyyy-MM-dd');\n\n        dispatch(method(formatDateFilter, currentDate, totem, gender))\n        if (setdate) {\n            setdate(new Date(filterDate))\n            setenddate(addDays(new Date(currentDate), 1))\n        }\n        setIsActive(date_to);\n        dispatch(setDate(startDatekey, formatDateFilter, endDatekey, currentDate))\n    }\n\n    const reset = () => {\n        setIsActive(Object.keys(buttons)[1])\n    }\n    const ButtonsHtml = () => (\n        <div reset={idReset + 'rst'} className=\"groupButtons text-center spaceBottom\">\n            {Object.keys(buttons).map((v, _i) => (\n                <button key={_i} onClick={({ target }) => setRangeDate(target, v)} className={`filterBtn ${v === isActive ? 'active' : ''}`}>{buttons[v]}</button>\n            ))}\n        </div>\n\n    )\n\n    return [ButtonsHtml, reset]\n}\n\nexport {useButtons}","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\"\n\n/**\n * @module Actions\n */\n\n/**\n * funcion para traer los datos de los totems\n * @returns callback con los totems\n */\nconst startToten=()=>{\n    return async (dispatch,getState)=>{\n        const {groups}=getState().auth;\n        //const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const groupId=7576;\n        const resp = await fetchConToken(`/realplaza/get-person-totals?group_id=${groupId}`);\n        const body = await resp.json();\n        const {total:totemTotal,resources}=body;\n        const tabs=resources.map(r=>{return {name:r.name,code:r.code}})\n        const resourcesFinal=resources.map(r=>{return {...r.data}})\n        dispatch(getToten({\n            totemTotal,\n            resources:resourcesFinal,\n            tabs\n        }))\n    }\n}\n\n/**\n * funcion para inicializar los totems\n * @param {Object} data Los totems\n */\nconst getToten=(data)=>({\n    type:types.getToten,\n    payload:data\n})\n\nexport{\n    startToten\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setGraphicsInHeatmapForCurrentDate, setGraphicsInHourForCurrentDate, setGraphicsInMonthForCurrentDate, setGraphicsInRangeForCurrentDate, setGraphicsInWeekForCurrentDate, startPersonData } from '../../../../action/person'\nimport { GraficBar } from '../../../ui/grafics/GraficBar';\nimport { Main } from '../../../ui/layout/Main';\nimport { BoxDate } from '../../../ui/utils/boxes/BoxDate';\nimport { BoxDateRange } from '../../../ui/utils/boxes/BoxDateRange';\nimport { BoxGender } from '../../../ui/utils/boxes/BoxGender';\nimport { BoxWithOutPercent } from '../../../ui/utils/boxes/BoxWithOutPercent';\nimport { BoxWithPercent } from '../../../ui/utils/boxes/BoxWithPercent';\nimport '../../../../helpers/roundbarchart';\nimport { useDate } from '../../../../hooks/useDate';\nimport { GraficLine } from '../../../ui/grafics/GraficLine';\nimport { HeatMapDesktop } from '../../../ui/grafics/HeatMapDesktop';\nimport { GraficCompare } from '../../../ui/grafics/GraficCompare';\nimport { useButtons } from '../../../../hooks/useButtons';\nimport { Tabs, TabList, TabPanel, Tab } from 'react-tabs';\nimport { startToten } from '../../../../action/toten';\nimport { formatNumber } from '../../../../helpers/calculo';\nimport { types } from '../../../../types/types';\n\nexport const PersonScreen = ({ location }) => {\n    const dispatch = useDispatch();\n    /*   console.log('SE RENDERIZO') */\n    const { hoursPersonTotal, hoursPersonMale, hoursPersonFemale, weekPersonTotal, weekPersonMale,\n        weekPersonFemale, monthPersonTotal,\n        monthPersonMale, monthPersonFemale,\n        heatmapPersonTotal, heatmapPersonRange,\n        rangePersonAges,\n        maxHourPersonTotal,\n        maxHourPersonMale,\n        maxHourPersonFemale,\n        maxWeekPersonTotal,\n        maxWeekPersonMale,\n        maxWeekPersonFemale,\n        maxMonthPersonTotal,\n        maxMonthPersonMale,\n        maxMonthPersonFemale } = useSelector(state => state.person);\n    const { dateStartHourPerson, dateEndHourPerson,\n        dateStartHourMalePerson, dateEndHourMalePerson,\n        dateStartHourFemalePerson, dateEndHourFemalePerson,\n        dateStartWeekPerson, dateEndWeekPerson,\n        dateStartWeekMalePerson, dateEndWeekMalePerson,\n        dateStartWeekFemalePerson, dateEndWeekFemalePerson,\n        dateStartMonthPerson, dateEndMonthPerson,\n        dateStartMonthMalePerson, dateEndMonthMalePerson,\n        dateStartMonthFemalePerson, dateEndMonthFemalePerson,\n        dateStartAgePerson, dateEndAgePerson,\n        dateStartHeatMap, dateEndHeatMap } = useSelector(state => state.date);\n\n    const { totemTotal, resources, tabs } = useSelector(state => state.toten);\n    const [toten, setToten] = useState('');\n\n\n    const [DateHour, , , setStartDateHrTotal, setEndDateHrTotal] = useDate(setGraphicsInHourForCurrentDate, toten, 'total', 'dateStartHourPerson', 'dateEndHourPerson', '');\n    const [DateHourMale, , , setStartDateHrMale, setEndDateHrMale] = useDate(setGraphicsInHourForCurrentDate, toten, 'male', 'dateStartHourMalePerson', 'dateEndHourMalePerson', '');\n    const [DateHourFemale, , , setStartDateHrFemale, setEndDateHrFemale] = useDate(setGraphicsInHourForCurrentDate, toten, 'female', 'dateStartHourFemalePerson', 'dateEndHourFemalePerson', '');\n    const [DateWeek, , , setStartDateWkTotal, setEndDateWkTotal] = useDate(setGraphicsInWeekForCurrentDate, toten, 'total', 'dateStartWeekPerson', 'dateEndWeekPerson', '');\n    const [DateWeekMale, , , setStartDateWkMale, setEndDateWkMale] = useDate(setGraphicsInWeekForCurrentDate, toten, 'male', 'dateStartWeekMalePerson', 'dateEndWeekMalePerson', '');\n    const [DateWeekFemale, , , setStartDateWkFemale, setEndDateWkFemale] = useDate(setGraphicsInWeekForCurrentDate, toten, 'female', 'dateStartWeekFemalePerson', 'dateEndWeekFemalePerson', '');\n    const [DateMonth, , , setStartDateMntTotal, setEndDateMntTotal] = useDate(setGraphicsInMonthForCurrentDate, toten, 'total', 'dateStartMonthPerson', 'dateEndMonthPerson', '', true);\n    const [DateMonthMale, , , setStartDateMntMale, setEndDateMntMale] = useDate(setGraphicsInMonthForCurrentDate, toten, 'male', 'dateStartMonthMalePerson', 'dateEndMonthMalePerson', '', true);\n    const [DateMonthFemale, , , setStartDateMntFemale, setEndDateMntFemale] = useDate(setGraphicsInMonthForCurrentDate, toten, 'female', 'dateStartMonthFemalePerson', 'dateEndMonthFemalePerson', '', true);\n    const [DateAgeRanges, , , setStartDateAgeRg, setEndDateAgeRg] = useDate(setGraphicsInRangeForCurrentDate, toten, 'total', 'dateStartAgePerson', 'dateEndAgePerson', '');\n    const [ButtonHourTotal, hourstotalrst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, toten, 'total', 'dateStartHourPerson', 'dateEndHourPerson', 'hourstotalrst', 1, setStartDateHrTotal, setEndDateHrTotal);\n    const [ButtonHourMale, hoursmalerst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, toten, 'male', 'dateStartHourMalePerson', 'dateEndHourMalePerson', 'hoursmalerst', 1, setStartDateHrMale, setEndDateHrMale)\n    const [ButtonHourFemale, hoursfemalerst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, toten, 'female', 'dateStartHourFemalePerson', 'dateEndHourFemalePerson', 'hoursfemalerst', 1, setStartDateHrFemale, setEndDateHrFemale)\n    const [ButtonWeekTotal, weektotalrst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    }, setGraphicsInWeekForCurrentDate, toten, 'total', 'dateStartWeekPerson', 'dateEndWeekPerson', 'weektotalrst', 0, setStartDateWkTotal, setEndDateWkTotal)\n    const [ButtonWeekMale, weekmalerst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    }, setGraphicsInWeekForCurrentDate, toten, 'male', 'dateStartWeekMalePerson', 'dateEndWeekMalePerson', 'weekmalerst', 0, setStartDateWkMale, setEndDateWkMale)\n    const [ButtonWeekFemale, weekfemalerst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    }, setGraphicsInWeekForCurrentDate, toten, 'female', 'dateStartWeekFemalePerson', 'dateEndWeekFemalePerson', 'weekfemalerst', 0, setStartDateWkFemale, setEndDateWkFemale)\n    const [ButtonMonthTotal, monthtotalrst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    }, setGraphicsInMonthForCurrentDate, toten, 'total', 'dateStartMonthPerson', 'dateEndMonthPerson', 'monthtotalrst', 0, setStartDateMntTotal, setEndDateMntTotal)\n    const [ButtonMonthMale, monthmalerst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    }, setGraphicsInMonthForCurrentDate, toten, 'male', 'dateStartMonthMalePerson', 'dateEndMonthMalePerson', 'monthmalerst', 0, setStartDateMntMale, setEndDateMntMale)\n    const [ButtonMonthFemale, monthfemalerst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    }, setGraphicsInMonthForCurrentDate, toten, 'female', 'dateStartMonthFemalePerson', 'dateEndMonthFemalePerson', 'monthfemalerst', 0, setStartDateMntFemale, setEndDateMntFemale)\n    const [ButtonHeatMap, heatmaprst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHeatmapForCurrentDate, toten, 'total', 'dateStartHeatMap', 'dateEndHeatMap', 'heatmaprst', 1)\n    const [ButtonRangeAges, ageRangesrst] = useButtons({\n        0: 'HOY',\n        60: 'ACUMULADO',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInRangeForCurrentDate, toten, 'total', 'dateStartAgePerson', 'dateEndAgePerson', 'ageRangesrst', 1, setStartDateAgeRg, setEndDateAgeRg)\n\n\n\n    useEffect(() => {\n        (() => {\n            dispatch(startPersonData(toten))\n            dispatch(startToten());\n        })()\n    }, [])\n\n    const changeTab = async ({ target }) => {\n        if (target.classList.contains('totenactivetab')) {\n            return false;\n        }\n        if (target.tagName == 'LI') {\n            const numToten = target.getAttribute(\"tab-index\");\n            setToten(numToten)\n            dispatch(startPersonData(numToten))\n        }\n    }\n    console.log(\"RESOIURCES \",resources);\n    console.log(\"HOURSPERSONSTOTAL\", hoursPersonTotal);\n\n    return (\n        <Main >\n            <div className=\"contenedor\">\n                <span className=\"spaceXY codeQonteo\">{types.GroupName}</span>\n                {/*    <TitleHead>Personas</TitleHead> */}\n                <h3 className=\"subTitle\">PERSONAS</h3>\n                <Tabs selectedTabClassName=\"totenactivetab\" className=\"spaceXY\">\n                    <TabList onClick={changeTab}>\n                        <Tab tab-index=\"\">TOTAL ACUMULADO</Tab>\n                        {tabs.map((t, _i) => (\n                            <Tab key={_i} tab-index={t.code.toString()}>{t.name}</Tab>\n                        ))}\n                    </TabList>\n                    <TabPanel>\n                        <div className=\"\">\n\n                            <div className=\"boxGridFour\">\n                                <BoxDate count={totemTotal?.today?.count} percent={totemTotal?.today?.percent} txtdetail=\"HOY\"/>\n                                <BoxWithOutPercent theme=\"light\" count={totemTotal?.yesterday?.total} txtdetail=\"AYER\" />\n                                <BoxWithPercent theme=\"light\" count={totemTotal?.week?.total} percent={totemTotal?.week?.percent} txtdetail=\"ESTA SEMANA\" />\n                                <BoxDateRange theme=\"light\" count={totemTotal?.total?.count} txtdetail=\"TOTAL\" />\n                            </div>\n                         \n                            <div className=\"boxGridFour spaceTop\">\n                                <BoxGender gender=\"female\" count={totemTotal?.today?.female} total={totemTotal?.today?.count} txtDay=\"HOY\" />\n                                <BoxGender gender=\"female\" count={totemTotal?.yesterday?.female} total={totemTotal?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                <BoxGender gender=\"female\" count={totemTotal?.week?.female} total={totemTotal?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                <BoxGender gender=\"female\" count={totemTotal?.total?.female} total={totemTotal?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                            </div>\n                            <div className=\"boxGridFour spaceTop\">\n                                <BoxGender gender=\"male\" count={totemTotal?.today?.male} total={totemTotal?.today?.count} txtDay=\"HOY\" />\n                                <BoxGender gender=\"male\" count={totemTotal?.yesterday?.male} total={totemTotal?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                <BoxGender gender=\"male\" count={totemTotal?.week?.male} total={totemTotal?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                <BoxGender gender=\"male\" count={totemTotal?.total?.male} total={totemTotal?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                            </div>\n\n                        </div>\n\n                    </TabPanel>\n                \n                    {resources.map((r,_i) => (\n                        \n                        <TabPanel key={_i}>\n                                \n                            <div className=\"\">\n\n                                <div className=\"boxGridFour\">\n                                    <BoxDate count={r?.today?.count} percent={r?.today?.percent} />\n                                    <BoxWithOutPercent theme=\"light\" count={r?.yesterday?.total} />\n                                    <BoxWithPercent theme=\"light\" count={r?.week?.total} percent={r?.week?.percent} />\n                                    <BoxDateRange theme=\"light\" count={r?.total?.count} />\n                                </div>\n\n                                {\n                                    (r?.total?.female) &&\n                                    <div className=\"boxGridFour spaceTop\">\n                                        <BoxGender gender=\"female\" count={r?.today?.female} total={r?.today?.count} txtDay=\"HOY\" />\n                                        <BoxGender gender=\"female\" count={r?.yesterday?.female} total={r?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                        <BoxGender gender=\"female\" count={r?.week?.female} total={r?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                        <BoxGender gender=\"female\" count={r?.total?.female} total={r?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                                    </div>\n                                }\n\n                                {\n                                    (r?.total?.male) &&\n                                    <div className=\"boxGridFour spaceTop\">\n                                        <BoxGender gender=\"male\" count={r?.today?.male} total={r?.today?.count} txtDay=\"HOY\" />\n                                        <BoxGender gender=\"male\" count={r?.yesterday?.male} total={r?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                        <BoxGender gender=\"male\" count={r?.week?.male} total={r?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                        <BoxGender gender=\"male\" count={r?.total?.male} total={r?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                                    </div>\n                                }\n\n                            </div>\n\n                        </TabPanel>\n\n                    ))}\n\n                </Tabs>\n\n                <div className=\"spaceXY d-block\">\n\n\n\n                    {hoursPersonTotal.length > 0 && <>\n                        <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR HORA DEL DÍA</h3>\n                        <span className=\"spaceBottom text-center d-block\">( {dateStartHourPerson} - {dateEndHourPerson} )</span>\n                        <ButtonHourTotal />\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Hora más transitada: {maxHourPersonTotal?.hour} con {formatNumber(maxHourPersonTotal?.total)} personas</span>\n                            <DateHour />\n                        </div>\n                    </>}\n\n\n                    <GraficBar data={hoursPersonTotal} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Personas:\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        scalebg=\"#0502D3\"\n                        theme=\"bg-yellow\"\n                        id=\"grafichourTotal\"\n                    />\n                \n                </div>\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR HORA DEL DÍA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartHourMalePerson} - {dateEndHourMalePerson} )</span>\n                    {hoursPersonMale.length > 0 && <ButtonHourMale />}\n\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Hora más transitada: {maxHourPersonMale?.hour} con {formatNumber(maxHourPersonMale?.total)} personas</span>\n                        {hoursPersonMale.length > 0 && <DateHourMale />}\n                    </div>\n                    <GraficBar data={hoursPersonMale} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Hombres:\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        scalebg=\"#0502D3\" id=\"grafichourMale\"\n                        id=\"grafichourMale\"\n                    />\n\n                    \n                </div>\n                <div className=\"spaceXY d-block\">\n                    {hoursPersonFemale.length > 0 && <>\n                        <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR HORA DEL DÍA</h3>\n                        <span className=\"spaceBottom range-date text-center d-block\">( {dateStartHourFemalePerson} - {dateEndHourFemalePerson} )</span>\n                        <ButtonHourFemale />\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Hora más transitada: {maxHourPersonFemale?.hour} con {formatNumber(maxHourPersonFemale?.total)} personas</span>\n                            <DateHourFemale />\n                        </div>\n                    </>}\n                    <GraficBar data={hoursPersonFemale} label=\"Total de Mujeres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Mujeres:\"\n                        scltxtlbl=\"Cantidad de Mujeres\"\n                        scalebg=\"#0502D3\"\n                        id=\"grafichourfemale\"\n                    />\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekPerson} - {dateEndWeekPerson} )</span>\n                    {weekPersonTotal.length > 0 && <ButtonWeekTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonTotal?.day} con {formatNumber(maxWeekPersonTotal?.total)} personas</span>\n                        {weekPersonTotal.length > 0 && <DateWeek />}\n                    </div>\n                    <GraficLine data={weekPersonTotal} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n                    />\n                </div>\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR DÍA DE LA SEMANA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekMalePerson} - {dateEndWeekMalePerson} )</span>\n                    {weekPersonMale.length > 0 && <ButtonWeekMale />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonMale?.day} con {formatNumber(maxWeekPersonMale?.total)} personas</span>\n                        {weekPersonMale.length > 0 && <DateWeekMale />}\n\n                    </div>\n                    <GraficLine data={weekPersonMale} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de Hombres\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        id=\"graficweekmale\"\n                    />\n                </div>\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR DÍA DE LA SEMANA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekFemalePerson} - {dateEndWeekFemalePerson} )</span>\n                    {weekPersonFemale.length > 0 && <ButtonWeekFemale />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonFemale?.day} con {formatNumber(maxWeekPersonFemale?.total)} personas</span>\n                        {weekPersonFemale.length > 0 && <DateWeekFemale />}\n\n                    </div>\n                    <GraficLine data={weekPersonFemale} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de Mujeres\"\n                        scltxtlbl=\"Cantidad de Mujeres\"\n                        id=\"graficweekfemale\"\n                    />\n                </div>\n        \n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">ACUMULADO DE PERSONAS POR CADA DÍA DEL MES</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthPerson} - {dateEndMonthPerson} )</span>\n                    {monthPersonTotal.length > 0 && <ButtonMonthTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonTotal?.day} con {maxMonthPersonTotal?.total} personas</span>\n                        {monthPersonTotal.length > 0 && <DateMonth />}\n\n                    </div>\n                    <GraficBar\n                        data={monthPersonTotal}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-yellow\"\n                        id=\"graficmonth\"\n                    />\n                </div>\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">ACUMULADO DE HOMBRES POR CADA DÍA DEL MES</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthMalePerson} - {dateEndMonthMalePerson} )</span>\n                    {monthPersonMale.length > 0 && <ButtonMonthMale />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonMale?.day} con {maxMonthPersonMale?.total} personas</span>\n                        {monthPersonMale.length > 0 && <DateMonthMale />}\n\n                    </div>\n                    <GraficBar\n                        data={monthPersonMale}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Hombres\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        id=\"graficmonthmale\"\n                    />\n                </div>\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">ACUMULADO DE MUJERES POR CADA DÍA DEL MES</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthFemalePerson} - {dateEndMonthFemalePerson} )</span>\n                    {monthPersonFemale.length > 0 && <ButtonMonthFemale />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonFemale?.day} con {maxMonthPersonFemale?.total} personas</span>\n                        {monthPersonFemale.length > 0 && <DateMonthFemale />}\n\n                    </div>\n                    <GraficBar\n                        data={monthPersonFemale}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficmonthfemale\"\n                    />\n                </div>\n\n                <div className=\"spaceXY  d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE SEMANA ACUMULADO DE PERSONAS POR HORA DEL DÍA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartHeatMap} - {dateEndHeatMap} )</span>\n                    {heatmapPersonTotal.length > 0 && <ButtonHeatMap />}\n                    <HeatMapDesktop data={heatmapPersonTotal} range={heatmapPersonRange} />\n                </div>\n                <div className=\"spaceXY  d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL ACUMULADO - GÉNERO</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartAgePerson} - {dateEndAgePerson} )</span>\n                    {rangePersonAges.length > 0 && <ButtonRangeAges />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\"></span>\n                        {rangePersonAges.length > 0 && <DateAgeRanges />}\n                    </div>\n\n                    <GraficCompare data={rangePersonAges} id=\"graficAgeRange\" />               \n                </div>\n            </div>\n        </Main>\n    )\n}\n","import React,{useEffect,useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\nimport { LoginScreen } from '../interfaz/pages/auth/LoginScreen';\nimport { PersonScreen } from '../interfaz/pages/desktop/person/PersonScreen';\n\nexport const PublicRoute =({component: Component,isAuthenticated, ...rest}) => {\n\n    \n    return(\n        <>\n        {isAuthenticated ? <Redirect to=\"/\" />   :  <Route  {...rest} render={props => (\n            <Component {...props} />  \n    )}  />}\n    </>\n    )\n    }\n    ","import React , { useState, useEffect } from 'react';\n\n// React-router-dom\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRouter = ({component: Component,isAuthenticated, ...rest}) => {\n\n\n\nreturn (\n    <>\n        {isAuthenticated ?  <Route {...rest} render={props => (\n            <Component {...props} />  \n    )} />   :  <Redirect to=\"/auth/login\" /> }\n    </>\n  /*   loggedIn  \n    ? \n    <Route {...rest} render={props => (\n            <Component {...props} />  \n    )} />   \n    :\n    <Redirect to=\"/auth/login\" /> */\n)\n}\n","import React, { useState } from 'react'\n\n/**\n * @module Hooks\n */\n\n/**\n * \n * @param {Object} buttons Objecto con los botonnes a generar\n * @returns {Object} \n */\n\nconst useButtonsReport = (buttons={}) => {\n    const [sectionValue, setSectionValue] = useState(Object.keys(buttons)[0]);\n    const ButtonsHtml=()=>(\n        <div  className=\"groupButtons text-center spaceBottom\">\n            {Object.keys(buttons).map((v,_i)=>(\n                  <button  key={_i} onClick={({target})=>setSectionValue(v)} className={`filterBtn ${v===sectionValue  ? 'active' : ''}`}>{buttons[v]}</button>\n            ))}\n        </div>\n        \n    )\n\n    return [ButtonsHtml,sectionValue,setSectionValue,buttons];\n}\n\nexport {useButtonsReport}","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\"\n\n/**\n * @module Actions\n */\n\n/**\n * funcion para traer los datos de Trazabilidad\n * @returns callback con los datos\n */\nconst getTrazabilidad = () => {\n    return async (dispatch,getState) => {\n        const { groups } = getState().auth;\n        const groupId = groups.filter(g => g.code === types.groupName)[0].id;\n        const resp = await (await fetchConToken(`/resources/tracking?group_id=${groupId}`)).json();\n        const { resources, hours } = resp\n\n        dispatch(initTrazabilidad({\n            resources,\n            hours\n        }))\n    }\n}\n\n/**\n * funcion para inizializar los datos de tranzabilidad\n * @param {Object} data resources y hots de trazabilidad\n */\nconst initTrazabilidad = (data) => ({\n    type: types.initialDataTrazabilidad,\n    payload: data\n})\n\n/**\n * funcion para traer los datos por las hora\n * @param {Object} payload \n */\nconst setTrazabilidadByHour = (payload) => ({\n    type: types.changeTrazabilidadByHour,\n    payload\n})\n\nexport{\n    getTrazabilidad,\n    setTrazabilidadByHour\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { useButtonsReport } from '../../../../hooks/useButtonsReport'\nimport { Main } from '../../../ui/layout/Main'\nimport data from '../../../../data/sensor.json'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTrazabilidad, setTrazabilidadByHour } from '../../../../action/trazabilidad'\n\nconst maxHour = 24;\nexport const TrazibilidadScreen = ({ location }) => {\n    const dispatch = useDispatch()\n    const [graphicsData, setGraphicsData] = useState([]);\n    const { resources, hours } = useSelector(state => state.trazabilidad);\n    const [EquipoHtmlBtn, valueEquipo, setEquipo, equipoJson] = useButtonsReport({ todos: 'TODOS', CCPN001: 'TÓTEM 1', CCPN002: 'TÓTEM 2', CCPN003: 'PANISTERÍA'/* , donbuffet: 'DON BUFFET', mediterraneo: 'MEDITERRÁNEO', entrepaginas: 'ENTRE PÁGINAS' */ })\n    const [ContactoHtmlBtn, valueContacto, setContacto] = useButtonsReport({ todos: 'TODOS', cliente: 'CLIENTES', visitantes: 'VISITANTES' })\n    const [PeriodoHtmlBtn, valuePeriodo, setPeriodo] = useButtonsReport({ todos: 'TODOS', d7: '07 DÍAS', d15: '15 DÍAS', d30: '30 DÍAS' })\n    const [GeneroHtmlBtn, valueGenero, setGenero] = useButtonsReport({ total: 'TODOS', male: 'HOMBRES', female: 'MUJERES' })\n    const [isPlay, setIsPlay] = useState(true);\n    const [timeOut, setTimeOut] = useState(null)\n    const [age, setAge] = useState({\n        agestart: '',\n        ageend: '',\n        all: true\n    })\n    const inputStartAge = useRef(null)\n    const inputEndAge = useRef(null)\n    const [time, setTime] = useState({\n        timestart: '',\n        timeend: '',\n        all: true\n    })\n    const inputStartTime = useRef(null)\n    const inputEndTime = useRef(null)\n    const [countHours, setCountHours] = useState([]);\n\n    const [counter, setCounter] = useState(0)\n\n    const [numberHour, setNumberHour] = useState('');\n    const draw = (data, value = 'total') => {\n        let dataf;\n        dataf=data.filter(d=>d.name===valueEquipo);\n        if(dataf.length===0){\n            dataf=data;\n        }\n        const canvas = document.getElementById('monitoreoComercio');\n        const ctx = canvas.getContext(\"2d\");\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        dataf.forEach(c => {\n            ctx.beginPath();\n            ctx.arc(c.x, c.y, c.ratio+40, 0, 2 * Math.PI, false);\n            ctx.fillStyle = c.color;\n            ctx.fill();\n            ctx.font = \"13px Arial\";\n            ctx.fillStyle = \"#FFF\";\n            ctx.fillText(c[valueGenero], c.labelX, c.labelY);\n        })\n    }\n\n    useEffect(() => {\n        (() => {\n            /*             setGraphicsData(resources); */\n            dispatch(getTrazabilidad())\n        })()\n    }, [])\n    useEffect(() => {\n        const countHrs = new Array(24).fill(0).map((_, i) => i);\n        setCountHours(countHrs);\n    }, [])\n\n\n    useEffect(() => {\n        const twodBtn=document.querySelector('#sec_genero .groupButtons button:nth-child(2)');\n        const threetBtn=document.querySelector('#sec_genero .groupButtons button:nth-child(3)');\n        if(valueEquipo==='CCPN003'){\n            setGenero('total')\n            twodBtn.classList.add('hide');\n            threetBtn.classList.add('hide');\n        }else{\n            twodBtn.classList.remove('hide');\n            threetBtn.classList.remove('hide');\n        }\n        draw(resources, valueGenero);\n    }, [resources, , valueGenero,valueEquipo])\n    const newHour = (hour) => {\n        const dataHourFilter = hours.filter(h => h.hour === hour);\n\n        dispatch(setTrazabilidadByHour(dataHourFilter[0].resources))\n\n    }\n\n    /*  const setRange = (value, type) => {\n         const valueCount = value.split(',');\n         if (type === 'time') {\n             inputStartTime.current.value = ''\n             inputEndTime.current.value = ''\n             setTime({\n                 all: false,\n                 timestart: valueCount[0],\n                 timeend: valueCount[1]\n             })\n         } else {\n             inputStartAge.current.value = ''\n             inputEndAge.current.value = ''\n             setAge({\n                 all: false,\n                 agestart: valueCount[0],\n                 ageend: valueCount[1]\n             })\n         }\n     } */\n\n    const isPlayButton = () => {\n        setIsPlay(!isPlay)\n\n    }\n    const resetTimer = () => {\n        startCounter(maxHour);\n        setNumberHour('');\n        setCounter(0);\n        setIsPlay(true);\n        dispatch(getTrazabilidad())\n        /* \n                setGraphicsData(data.sensores); */\n\n    }\n    const setHour = (num) => {\n        setNumberHour(num);\n        setCounter(num);\n        setIsPlay(true);\n        const dataHourFilter = hours.filter(h => h.hour === num);\n\n        dispatch(setTrazabilidadByHour(dataHourFilter[0].resources))\n    }\n\n    const startCounter = (number) => {\n        if (!isPlay) {\n            clearTimeout(timeOut)\n            return false;\n        }\n        if (number >= maxHour) {\n            setCounter(0);\n            setIsPlay(true)\n            setIsPlay(true)\n            clearTimeout(timeOut)\n            return false;\n        }\n\n        let interval = setTimeout(() => {\n            setNumberHour(n => number)\n            newHour(number);\n            setCounter(n => number + 1)\n            startCounter(number + 1);\n        }, 1000);\n        setTimeOut(interval)\n\n    }\n\n    return (\n        <Main>\n            <h3 className=\"subTitle spaceTop\">TRAZABILIDAD DE USUARIOS EN COMERCIO</h3>\n            <div className=\"d-grid-report  content-btntext spaceTop\">\n                <p className=\"text-report\">Seleccione equipo:</p>\n                <EquipoHtmlBtn />\n            </div>\n            {/* <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione tipo de<br /> Contacto:</p>\n                <ContactoHtmlBtn />\n            </div> */}\n            <div className=\"d-grid-report  content-btntext\" id=\"sec_genero\">\n                <p className=\"text-report\">Seleccione Género:</p>\n                <GeneroHtmlBtn />\n            </div>\n            {/*  <div className=\"d-grid-report  content-btntext \">\n                <p className=\"text-report\">Seleccione una Edad:</p>\n                <div className=\"groupButtons report\">\n                    <button onClick={() => setAge({ all: true, agestart: '', ageend: '' })} className={`filterBtn ${age.all ? 'active' : ''}`}>TODOS</button>\n                    <select onChange={({ target }) => setRange(target.value, 'age')} className=\"filterBtn\">\n                        <option value=\"\" hidden>EDAD ESPECIFICA</option>\n                        <option value=\"-18,24\">-18 a 24</option>\n                        <option value=\"24,30\">24 a 30</option>\n                        <option value=\"30,36\">30 a 36</option>\n                        <option value=\"36,42\">36 a 42</option>\n                        <option value=\"42,48\">42 a 48</option>\n                        <option value=\"54,60\">54 a 60+</option>\n                    </select>\n                    <input min=\"1\" placeholder=\"INGRESE EDAD DE INICIO\" ref={inputStartAge} name=\"agestart\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                    <input min=\"1\" placeholder=\"INGRESE EDAD DE FIN\" ref={inputEndAge} name=\"ageend\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                </div>\n            </div> */}\n            {/*  <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione Periodo:</p>\n                <PeriodoHtmlBtn />\n            </div> */}\n            {/* <div className=\"d-grid-report  content-btntext \">\n                <p className=\"text-report\">Seleccione una Hora:</p>\n                <div className=\"groupButtons report\">\n                    <button onClick={() => setTime({ all: true, timeend: '', timestart: '' })} className={`filterBtn ${time.all ? 'active' : ''}`}>TODOS</button>\n                    <select onChange={({ target }) => setRange(target.value, 'time')} className=\"filterBtn\">\n                        <option value=\"\" hidden>SELECCIONE RANGO DE HORA</option>\n                        <option value=\"0,4\">0h a 4h</option>\n                        <option value=\"4,8\">4h a 8h</option>\n                        <option value=\"12,16\">12h a 16h</option>\n                        <option value=\"20,24\">20h a 24h</option>\n                    </select>\n                    <input min=\"1\" placeholder=\"INGRESE HORA DE INICIO\" ref={inputStartTime} name=\"timestart\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                    <input min=\"1\" placeholder=\"INGRESE HORA DE FIN\" ref={inputEndTime} name=\"timeend\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                </div>\n            </div> */}\n            <div className=\"d-grid-report spaceTopSmall  content-btntext\">\n                <p className=\"text-report\"></p>\n                <button className={`filterBtn w-fit `} onClick={resetTimer}>TODAS LAS HORAS</button>\n            </div>\n            <div className=\"d-grid-report spaceTopSmall  content-btntext\">\n                <p className=\"text-report\"></p>\n                <div className=\"listhour\">\n                    {countHours.map((h, index) => (\n                        <span key={h} onClick={() => setHour(h)} className={`listhour__item ${Number(h) === numberHour ? 'active' : ''}`}>{h}</span>\n                    ))}\n                </div>\n            </div>\n            <div className=\"contentcanvas spaceTop\">\n                <canvas style={{ backgroundImage: `url(/assets/images/planoflujo.jpg)` }} className=\"mt\" id=\"monitoreoComercio\" width=\"1024\" height=\"556\"></canvas>\n                <div className=\"contencanvas__play\">\n                    <img className=\"contencanvas__btn\" onClick={() => { startCounter(counter); isPlayButton() }} src='/assets/icons/play.svg' alt=\"imgButton\" />\n                </div>\n            </div>\n        </Main>\n    )\n}\n","import jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport {saveAs} from 'file-saver'\nimport { fetchConToken } from \"./fetch\";\nimport {format} from 'date-fns'\n\n/**\n * @module Helpers\n */\n\n/**\n * funcion para exportar PDF\n * @param {String} grafic Grafico a impimir\n * @param {String} startdate fecha de inicio\n * @param {String} enddate fechad de fin\n * @param {String} title Titulo\n * @param {String} text texto\n * @param {String} year año\n * @param {*} totem \n */\nconst exportPDFPerson =async (grafic,startdate,enddate,title,text,year,totem=0) => {\n    let url='';\n    const elementPng = document.getElementById(grafic);\n    const doc = new jsPDF('l', 'pt');\n    const img = new Image()\n    img.src = './assets/images/pdf/logoleft.png'\n    doc.addImage(img, 'png', 30, 10, 100, 20)\n    const img2 = new Image()\n    img2.src = './assets/images/pdf/logorigth.png'\n    doc.addImage(img2, 'png', 750, 13, 65, 15)\n\n    doc.setFontSize(18);\n    doc.text(280, 90, title)\n\n    doc.setFontSize(9);\n    doc.text(650, 140, `Rango: ${startdate} - ${enddate}`)\n\n    doc.setFontSize(9);\n    doc.text(50, 140, text)\n    await toPng(elementPng).then(urlG=>url=urlG);\n    doc.addImage(url, 'jpg', 120, 180, 600, 350);\n\n    doc.setFontSize(9);\n    doc.text(50, 570, `Reporte generado ${format(new Date(),'yyyy-MM-dd HH:mm:ss')} PE.CCPN.01`)\n\n    doc.setFontSize(9);\n    let totemText='Acumulado'\n    if (Number(totem) === 1) {\n        totemText='totem 1'\n    } else if (Number(totem) === 2){\n        totemText='totem 2'\n        \n    }\n    doc.text(650, 570, `Tipo de totem: ${totemText}`)\n    \n\n    doc.save(`DSP-SODA-PE.CCPN.01-${startdate}-${enddate}-${title.replace(/\\s/g, '-')}.pdf.pdf`)\n}\n\n\nconst processExcel = async (type, interval, dateFrom, dateTo) => {\n    const peticion = await fetchConToken('/export', {\n        \"type\": type,\n        \"format\": \"csv\",\n        \"interval\": interval,\n        \"date_from\": dateFrom,\n        \"date_to\": dateTo\n    }, 'POST')\n    const json = await peticion.blob();\n    return json;\n}\n\nconst exportExcel = (type, startdate, enddate, filename) => {\n    processExcel('p', type, startdate, enddate).then(r => saveAs(r, `DSP-SODA-CO-PMXCO-BOG-A01-${startdate}-${enddate}-TOTAL-${filename}.csv`))\n}\n\nconst downloadImageDesktop=async (grafic,datestart,enddate,type,interval)=>{\n    let urlg='';\n    const elementPng = document.getElementById(grafic);\n  /*   const cloneElement=elementPng.cloneNode(true);\n     */\n    const linkHref = document.createElement('a');\n    await toPng(elementPng).then(urlG=>urlg=urlG);\n    fetchConToken('/upload-image', {\n        data: {\n            user_id: \"704\",\n            type,\n            interval,\n            date_from: datestart,\n            date_to:  enddate  ,\n            image: urlg\n        }\n    }, 'POST').then(resp => resp.json()).then((resp) => {\n        linkHref.setAttribute('target', '__blank');\n        linkHref.href = resp.url;\n        linkHref.click();\n    })\n}\n\nexport {\n    exportPDFPerson,\n    exportExcel,\n    downloadImageDesktop\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGraphicsInHourForCurrentDate, setGraphicsInRangeForCurrentDate, setGraphicsInWeekForCurrentDate, startPersonData } from '../../../action/person';\nimport { formatNumber } from '../../../helpers/calculo';\nimport { useDate } from '../../../hooks/useDate';\nimport { GraficBar } from '../../ui/grafics/GraficBar';\nimport { BoxDate } from '../../ui/utils/boxes/BoxDate'\nimport { BoxGender } from '../../ui/utils/boxes/BoxGender'\nimport { format } from 'date-fns'\nimport { downloadImageDesktop, exportPDFPerson } from '../../../helpers/exportPDF';\nimport { BoxWithOutPercent } from '../../ui/utils/boxes/BoxWithOutPercent';\nimport { BoxWithPercent } from '../../ui/utils/boxes/BoxWithPercent';\nimport { GraficCompare } from '../../ui/grafics/GraficCompare';\nimport { startToten } from '../../../action/toten';\nimport { BoxDateRange } from '../../ui/utils/boxes/BoxDateRange';\n\nexport const MobileScreen = () => {\n    const dispatch = useDispatch();\n    const { hoursPersonTotal, hoursPersonMale, hoursPersonFemale, weekPersonTotal, weekPersonMale,\n        weekPersonFemale,\n        rangePersonAges,\n        maxHourPerson,\n        maxHourPersonMale,\n        maxHourPersonFemale,\n        maxWeekPerson,\n        maxWeekPersonMale,\n        maxWeekPersonFemale} = useSelector(state => state.person);\n    const { totemTotal, resources, tabs } = useSelector(state => state.toten);\n    const [toten, setToten] = useState('');\n        \n        \n    /*  */\n    const [DateHour,startDateHour,endDateHour, setStartDateHrTotal, setEndDateHrTotal] = useDate(setGraphicsInHourForCurrentDate, '', 'total', 'dateStartHourPerson', 'dateEndHourPerson', '');\n    const [DateHourMale,startDateHourMale ,endDateHourMale , setStartDateHrMale, setEndDateHrMale] = useDate(setGraphicsInHourForCurrentDate, '', 'male', 'dateStartHourMalePerson', 'dateEndHourMalePerson', '');\n    const [DateHourFemale,startDateHourFemale , endDateHourFemale, setStartDateHrFemale, setEndDateHrFemale] = useDate(setGraphicsInHourForCurrentDate, '', 'female', 'dateStartHourFemalePerson', 'dateEndHourFemalePerson', '');\n    const [DateWeek, dateStartWeekPerson,dateEndWeekPerson , setStartDateWkTotal, setEndDateWkTotal] = useDate(setGraphicsInWeekForCurrentDate, '', 'total', 'dateStartWeekPerson', 'dateEndWeekPerson', '');\n    const [DateWeekMale,dateStartWeekMalePerson ,dateEndWeekMalePerson , setStartDateWkMale, setEndDateWkMale] = useDate(setGraphicsInWeekForCurrentDate, '', 'male', 'dateStartWeekMalePerson', 'dateEndWeekMalePerson', '');\n    const [DateWeekFemale,dateStartWeekFemalePerson ,dateEndWeekFemalePerson , setStartDateWkFemale, setEndDateWkFemale] = useDate(setGraphicsInWeekForCurrentDate, '', 'female', 'dateStartWeekFemalePerson', 'dateEndWeekFemalePerson', '');\n    const [DateAgeRanges,dateStartAgePerson ,dateEndAgePerson , setStartDateAgeRg, setEndDateAgeRg] = useDate(setGraphicsInRangeForCurrentDate, '', 'total', 'dateStartAgePerson', 'dateEndAgePerson', '');\n    useEffect(() => {\n        (() => {\n            dispatch(startPersonData());\n            dispatch(startToten());\n        })()\n    }, [dispatch])\n    const refresh=()=>{\n        window.location.reload();\n    }\n\n    return (\n        <div id=\"mobileversion\">\n            <header>\n                <div className=\"headerTop d-flex auth\">\n                    <img className=\"imgSmall\" src=\"/assets/images/header/onlysoda.png\" alt=\"logosoda\" />\n                    <h1 className=\"titleHeadAuth\">\n                        data <br />\n                    street <br />\n                    performance\n                </h1>\n                </div>\n                <div className=\"w-100 text-center logoMiddle\">\n                    <img src=\"./assets/images/header/soda.png\" alt=\"logosoda\" />\n                </div>\n            </header>\n            <div className=\"codecontent\">\n                <span className=\"code\">PE.CCPN.01</span>\n            </div>\n\n            <div className=\"actionButtons\">\n                <div className=\"grid-2\">\n                    <button className=\"active\"><img src=\"./assets/icons/mobile/person-mobile.svg\" alt=\"person\" /><span>Personas</span></button>\n                </div>\n                <div className=\"grid-2\">\n                    <button><img src=\"./assets/icons/mobile/calendar-mobile.png\" alt=\"calendar\" /><span>Tiempo Real</span></button>\n                    <button onClick={refresh}><img src=\"./assets/icons/mobile/calendar-mobile.png\"  alt=\"calendar\" /><span>Actualizar</span></button>\n\n                </div>\n            </div>\n            <div className=\"codecontent\">\n                <span className=\"code\">PERSONAS</span>\n            </div>\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <BoxDate count={totemTotal?.today?.count} percent={totemTotal?.today?.percent} />                               \n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender gender=\"female\" count={totemTotal?.today?.female} total={totemTotal?.today?.count} txtdetail=\"HOY\" />                            \n                    <BoxGender gender=\"male\" count={totemTotal?.today?.male} total={totemTotal?.today?.count} txtdetail=\"HOY\" />                    \n                </div>\n            </div>\n            <div className=\"spaceXY fitmobile\">\n                <BoxWithOutPercent theme=\"light\" count={totemTotal?.yesterday?.total} txtdetail=\"AYER\" />\n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender gender=\"female\" count={totemTotal?.yesterday?.female} total={totemTotal?.yesterday?.count} txtdetail=\"AYER\" />                            \n                    <BoxGender gender=\"male\" count={totemTotal?.yesterday?.male} total={totemTotal?.yesterday?.count} txtdetail=\"AYER\" />                    \n                    \n                </div>\n            </div>\n            <div className=\"spaceXY fitmobile\">\n                <BoxWithPercent count={totemTotal?.week?.total} percent={totemTotal?.week?.percent} txtdetail=\"ESTA SEMANA\" />\n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender gender=\"female\" count={totemTotal?.week?.female} total={totemTotal?.week?.count} txtdetail=\"ESTA SEMANA\" />                            \n                    <BoxGender gender=\"male\" count={totemTotal?.week?.male} total={totemTotal?.week?.count} txtdetail=\"ESTA SEMANA\" />                    \n                    \n                </div>\n            </div>\n            <div className=\"spaceXY fitmobile\">\n                <BoxDateRange theme=\"light\" count={totemTotal?.total?.count} txtdetail=\"TOTAL\" />\n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender gender=\"female\" count={totemTotal?.total?.female} total={totemTotal?.total?.count} txtdetail=\"TOTAL\" />                            \n                    <BoxGender gender=\"male\" count={totemTotal?.total?.male} total={totemTotal?.total?.count} txtdetail=\"TOTAL\" />                    \n                    \n                </div>\n            </div>\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR HORA DEL DÍA</h3>\n\n                <div className=\"detailGrafic spaceXY \">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPerson?.hour} con {formatNumber(maxHourPerson?.total)} personas</span>\n                    {hoursPersonTotal.length > 0 && <DateHour />}\n                </div>\n                <GraficBar data={hoursPersonTotal} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Personas:\"\n                    scltxtlbl=\"Cantidad de Personas\"\n                    scalebg=\"#0502D3\"\n                    theme=\"bg-yellow\"\n                    id=\"grafichourTotal\" />\n                <div className=\"btnExportsGraphics\">\n\n                    <button onClick={() => downloadImageDesktop('grafichourTotal', format(startDateHour, 'yyyy-MM-dd'), format(endDateHour, 'yyyy-MM-dd'), 'hour', 'P')}><img src=\"./assets/icons/share.svg\" /></button>\n                </div>\n            </div>\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR HORA DEL DÍA</h3>\n\n                <div className=\"detailGrafic spaceXY \">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPersonMale?.hour} con {formatNumber(maxHourPersonMale?.total)} personas</span>\n                    {hoursPersonMale.length > 0 && <DateHourMale />}\n                </div>\n                <GraficBar data={hoursPersonMale} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Hombres:\"\n                    scltxtlbl=\"Cantidad de Hombres\"\n                    scalebg=\"#0502D3\"\n                    theme=\"bg-yellow\"\n                    id=\"grafichourMale\" />\n                <div className=\"btnExportsGraphics\">\n\n                    <button onClick={() => downloadImageDesktop('grafichourMale', format(startDateHourMale, 'yyyy-MM-dd'), format(endDateHourMale, 'yyyy-MM-dd'), 'hour', 'P')}><img src=\"./assets/icons/share.svg\" /></button>\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR HORA DEL DÍA</h3>\n\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPersonFemale?.hour} con {formatNumber(maxHourPersonFemale?.total)} personas</span>\n                    {hoursPersonFemale.length > 0 && <DateHourFemale />}\n                </div>\n                <GraficBar data={hoursPersonFemale} label=\"Total de Mujeres\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Mujeres:\"\n                    scltxtlbl=\"Cantidad de Mujeres\"\n                    scalebg=\"#0502D3\"\n                    id=\"grafichourfemale\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {hoursPersonFemale.length > 0 && <button onClick={() => downloadImageDesktop('grafichourfemale', startDateHourFemale, endDateHourFemale, 'hour', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>\n                    }\n\n                </div>\n            </div>\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPerson?.day} con {formatNumber(maxWeekPerson?.total)} personas</span>\n                    {weekPersonTotal.length > 0 && <DateWeek />}\n                </div>\n                <GraficBar data={weekPersonTotal} label=\"Tiempo (Días)\"\n                    dtsetbg=\"#0a18f1\"\n                    optionbg=\"#454545\"\n                    scalebg=\"#0502D3\"\n                    title=\"Día\"\n                    labelop=\"tránsito de personas\"\n                    scltxtlbl=\"Cantidad de Personas\"\n                    id=\"graficweek\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {weekPersonTotal.length > 0 && <button onClick={() => downloadImageDesktop('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'week', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR DÍA DE LA SEMANA</h3>\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonMale?.day} con {formatNumber(maxWeekPersonMale?.total)} personas</span>\n                    {weekPersonMale.length > 0 && <DateWeekMale />}\n\n                </div>\n                <GraficBar data={weekPersonMale} label=\"Tiempo (Días)\"\n                    dtsetbg=\"#0a18f1\"\n                    optionbg=\"#454545\"\n                    scalebg=\"#0502D3\"\n                    title=\"Día\"\n                    labelop=\"tránsito de Hombres\"\n                    scltxtlbl=\"Cantidad de Hombres\"\n                    id=\"graficweekmale\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {weekPersonMale.length > 0 && <button onClick={() => downloadImageDesktop('graficweekmale', dateStartWeekMalePerson, dateEndWeekMalePerson, 'week', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR DÍA DE LA SEMANA</h3>\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonFemale?.day} con {formatNumber(maxWeekPersonFemale?.total)} personas</span>\n                    {weekPersonFemale.length > 0 && <DateWeekFemale />}\n\n                </div>\n                <GraficBar data={weekPersonFemale} label=\"Tiempo (Días)\"\n                    dtsetbg=\"#0a18f1\"\n                    optionbg=\"#454545\"\n                    scalebg=\"#0502D3\"\n                    title=\"Día\"\n                    labelop=\"tránsito de Mujeres\"\n                    scltxtlbl=\"Cantidad de Mujeres\"\n                    id=\"graficweekfemale\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {weekPersonFemale.length > 0 && <button onClick={() => downloadImageDesktop('graficweekfemale', dateStartWeekFemalePerson, dateEndWeekFemalePerson, 'week', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n            <div className=\"spaceXY fitmobile\">\n                <h3 className=\"subTitle  text-center\">TOTAL ACUMULADO - GÉNERO</h3>\n\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\"></span>\n                    {rangePersonAges.length > 0 && <DateAgeRanges />}\n                </div>\n                <div className=\"btnExportsGraphics\">\n                    <GraficCompare data={rangePersonAges} id=\"graficAgeRange\" />\n                    {rangePersonAges.length > 0 && <button onClick={() => downloadImageDesktop('graficAgeRange', dateStartAgePerson, dateEndAgePerson, 'age', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n\n\n        </div>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useButtonsReport } from '../../../../hooks/useButtonsReport'\nimport { useDateReport } from '../../../../hooks/useDateReport'\nimport { Main } from '../../../ui/layout/Main'\nimport { format, subDays } from 'date-fns'\nimport Swal from 'sweetalert2'\nObject.filter = (obj, predicate) =>\n    Object.keys(obj)\n        .filter(key => predicate(obj[key]))\n        .reduce((res, key) => Object.assign(res, { [key]: obj[key] }), {});\n\nexport const EspecificoScreen = ({ location, history }) => {\n    const [TipoHtmlBtn, valueTipo, setTipo] = useButtonsReport({ c: 'COMERCIAL', e: 'EJECUTIVO' })\n    const [EquipoHtmlBtn, valueEquipo, setEquipo, equipoJson] = useButtonsReport({ todos: 'TODOS', CCPN001: 'TÓTEM 1', CCPN002: 'TÓTEM 2', CCPN003: 'PANISTERÍA'/* , donbuffet: 'DON BUFFET', mediterraneo: 'MEDITERRÁNEO', entrepaginas: 'ENTRE PÁGINAS' */ })\n    const [PeriodoHtmlBtn, valuePeriodo, setPeriodo] = useButtonsReport({ todos: 'TODOS', d7: '07 DÍAS', d15: '15 DÍAS', d30: '30 DÍAS' })\n    const [ContactoHtmlBtn, valueContacto, setContacto] = useButtonsReport({ todos: 'TODOS', cliente: 'CLIENTES', visitantes: 'VISITANTES' })\n    const [GeneroHtmlBtn, valueGenero, setGenero] = useButtonsReport({ todos: 'TODOS', male: 'HOMBRES', female: 'MUJERES' })\n    const [DateHtml, startDateValue, endDateValue] = useDateReport()\n    const [age, setAge] = useState({\n        agestart: '',\n        ageend: '',\n        all: true\n    })\n    const inputStartAge = useRef(null)\n    const inputEndAge = useRef(null)\n\n    const [time, setTime] = useState({\n        timestart: '',\n        timeend: '',\n        all: true\n    })\n    const inputStartTime = useRef(null)\n    const inputEndTime = useRef(null)\n\n    const [isEspecific, setIsEspecific] = useState(false);\n\n\n    const generar = async () => {\n        let data;\n\n        if (isEspecific) {\n\n            if (age.all === false && age.agestart == '') {\n                return Swal.fire('Error', 'El campo de inicio de edad no puedo estar vacio', 'error')\n            }\n            if (age.all == false && age.ageend === '' /* && inputEndAge.value==='' */) {\n                return Swal.fire('Error', 'El campo de fin de edad no puedo estar vacio', 'error')\n            }\n            if (time.all === false && time.timestart == '') {\n                return Swal.fire('Error', 'El campo de inicio de hora no puedo estar vacio', 'error')\n            }\n            if (time.all == false && time.timeend === '' /* && inputEndAge.value==='' */) {\n                return Swal.fire('Error', 'El campo de fin de hora no puedo estar vacio', 'error')\n            }\n\n            //\n\n            if (age.all === false && Number(age.agestart) > Number(age.ageend)) {\n                return Swal.fire('Error', 'El campo de inicio de edad no puedo ser mayor a la edad de fin', 'error')\n            }\n            if (time.all === false && Number(time.timestart) >= 24) {\n                return Swal.fire('Error', 'El formato debe de ser 24H', 'error')\n            }\n            if (time.all === false && Number(time.timeend) >= 24) {\n                return Swal.fire('Error', 'El formato debe de ser 24H', 'error')\n            }\n            if (time.all === false && Number(time.timestart) >= Number(time.timeend)) {\n                return Swal.fire('Error', 'El campo de inicio de hora no puedo ser mayor a la hora de fin', 'error')\n            }\n\n            let timeStart = time.timestart;\n            let timeFinal = time.timeend;\n\n            if (time.timestart.length === 1) {\n                timeStart = 0 + time.timestart;\n\n\n            }\n            if (time.timestart.length === 1) {\n                timeFinal = 0 + time.timeend;\n            }\n            data = {\n                contact_type: valueContacto,\n                report_type: valueTipo,\n                resource: (equipoJson[valueEquipo]).toLowerCase(),\n                gender: valueGenero === 'todos' ? 'total' : valueGenero,\n                date_from: format(startDateValue, 'yyyy-MM-dd'),\n                date_to: format(endDateValue, 'yyyy-MM-dd'),\n                age_from: age.agestart,\n                age_to: age.ageend,\n                time_from: time.timestart,\n                time_to: time.timeend\n            }\n\n        } else {\n            if (valuePeriodo === 'todos') {\n\n                data = {\n                    report_type: valueTipo,\n                    resource: valueEquipo,\n                    date_from: '2020-12-02',\n                    date_to: format(new Date(), 'yyyy-MM-dd'),\n                    time_from: '2020-12-02%00:00',\n                    time_to: `${format(new Date(), 'yyyy-MM-dd')}%00:00`,\n                    gender: 'total'\n                }\n            } else {\n                const newDate = subDays(new Date(), Number(valuePeriodo.replace('d', '')));\n\n                data = {\n                    report_type: valueTipo,\n                    resource: (equipoJson[valueEquipo]).toLowerCase(),\n                    date_from: format(newDate, 'yyyy-MM-dd'),\n                    date_to: format(new Date(), 'yyyy-MM-dd'),\n                    time_from: `${format(newDate, 'yyyy-MM-dd')}%00:00`,\n                    time_to: `${format(new Date(), 'yyyy-MM-dd')}%00:00`,\n                    gender: 'total'\n                }\n            }\n        }\n\n        const dataFilter = Object.filter(data, reporte => reporte !== 'todos' && reporte !== '');\n        if (valueTipo === 'c') {\n            return history.push('/reportes-screen/comercial', dataFilter);\n        }\n        history.push('/reportes-screen/ejecutivo', dataFilter);\n    }\n\n    const resetEspecifico = () => {\n        setContacto('todos')\n        setGenero('todos')\n\n        setAge({\n            all: true,\n            ageend: '',\n            agestart: ''\n        })\n        setTime({\n            all: true,\n            timestart: '',\n            timeend: ''\n        })\n        setIsEspecific(!isEspecific);\n        /*   if (!!document.getElementById('contentEspec')) {\n              inputStartTime.current.value = ''\n              inputEndTime.current.value = ''\n              inputStartAge.current.value = ''\n              inputEndAge.current.value = ''\n  \n          } */\n    }\n\n    const setRange = (value, type) => {\n        const valueCount = value.split(',');\n        if (type === 'time') {\n            inputStartTime.current.value = ''\n            inputEndTime.current.value = ''\n            setTime({\n                all: false,\n                timestart: valueCount[0],\n                timeend: valueCount[1]\n            })\n        } else {\n            inputStartAge.current.value = ''\n            inputEndAge.current.value = ''\n            setAge({\n                all: false,\n                agestart: valueCount[0],\n                ageend: valueCount[1]\n            })\n        }\n    }\n\n\n    useEffect(() => {\n        (() => {\n            const btn = document.querySelector('#sec_genero');\n            if (isEspecific) {\n                if (valueEquipo === 'CCPN003') {\n                    setGenero('todos')\n                    setTimeout(() => {\n                        btn.querySelector('.groupButtons button:nth-child(2)').classList.add('hide')\n                        btn.querySelector('.groupButtons button:nth-child(3)').classList.add('hide')\n                    }, 10);\n                    /* \n                    btn.querySelector('.groupButtons button:nth-child(2)').classList.add('hide')\n                    btn.querySelector('.groupButtons button:nth-child(3)').classList.add('hide')\n                     */\n                } else {\n                    console.log('no dio en el sensor no se ocultara los botones')\n                }\n            }\n        })()\n    }, [isEspecific,valueEquipo,valueTipo])\n\n    return (\n        <Main>\n            <h3 className=\"subTitle spaceXY\">GENERA TU REPORTE</h3>\n            <h3 className=\"subTitle color-secundary\">REPORTE GENERAL</h3>\n            <div className=\"d-grid-report spaceTop content-btntext\">\n                <p className=\"text-report\">Seleccione tipo de<br /> reporte:</p>\n                <TipoHtmlBtn />\n            </div>\n            <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione equipo:</p>\n                <EquipoHtmlBtn />\n            </div>\n            {!isEspecific &&\n                <div className=\"d-grid-report  content-btntext\">\n                    <p className=\"text-report\">Seleccione Periodo:</p>\n                    <PeriodoHtmlBtn />\n                </div>\n            }\n\n\n            <div className=\"groupButtons text-center spaceTop\">\n\n                <button onClick={resetEspecifico} className={`filterBtn`}>ESPECIFICO</button>\n                {!isEspecific && <button onClick={generar} className={`filterBtn`}>GENERAR</button>\n                }\n            </div>\n\n            {/*  */}\n\n            {isEspecific &&\n                <div id=\"contentEspec\">\n                    <h3 className=\"subTitle color-secundary spaceXY\">REPORTE ESPECIFICO</h3>\n                    {/*  <div className=\"d-grid-report  content-btntext\">\n                        <p className=\"text-report\">Seleccione tipo de<br /> Contacto:</p>\n                        <ContactoHtmlBtn />\n                    </div> */}\n                    <div className=\"d-grid-report  content-btntext\" id=\"sec_genero\">\n                        <p className=\"text-report\">Seleccione Género:</p>\n                        <GeneroHtmlBtn />\n                    </div>\n                    <div className=\"d-grid-report  content-btntext\">\n                        <p className=\"text-report\">Seleccione una Fecha:</p>\n                        <DateHtml />\n                    </div>\n                    {/*   <div className=\"d-grid-report  content-btntext \">\n                        <p className=\"text-report\">Seleccione una Edad:</p>\n                        <div className=\"groupButtons report\">\n                            <button onClick={() => setAge({ all: true, agestart: '', ageend: '' })} className={`filterBtn ${age.all ? 'active' : ''}`}>TODOS</button>\n                            <select onChange={({ target }) => setRange(target.value, 'age')} className=\"filterBtn\">\n                                <option value=\"-18,24\">-18 a 24</option>\n                                <option value=\"24,30\">24 a 30</option>\n                                <option value=\"30,36\">30 a 36</option>\n                                <option value=\"36,42\">36 a 42</option>\n                                <option value=\"42,48\">42 a 48</option>\n                                <option value=\"54,60\">54 a 60+</option>\n                            </select>\n                            <input min=\"1\" ref={inputStartAge} name=\"agestart\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                            <input min=\"1\" ref={inputEndAge} name=\"ageend\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                        </div>\n                    </div> */}\n                    {/*   <div className=\"d-grid-report spaceBottom content-btntext \">\n                        <p className=\"text-report\">Seleccione una Hora:</p>\n                        <div className=\"groupButtons report\">\n                            <button onClick={() => setTime({ all: true, timeend: '', timestart: '' })} className={`filterBtn ${time.all ? 'active' : ''}`}>TODOS</button>\n                            <select onChange={({ target }) => setRange(target.value, 'time')} className=\"filterBtn\">\n                                <option value=\"0,4\">0h a 4h</option>\n                                <option value=\"4,8\">4h a 8h</option>\n                                <option value=\"12,16\">12h a 16h</option>\n                                <option value=\"20,24\">20h a 24h</option>\n                            </select>\n                            <input min=\"1\" ref={inputStartTime} name=\"timestart\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                            <input min=\"1\" ref={inputEndTime} name=\"timeend\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                        </div>\n                    </div> */}\n\n                    {isEspecific &&\n                        <div className=\"spaceBottomSmall text-center\">\n                            <button onClick={generar} className={`filterBtn  `}>GENERAR</button>\n                        </div>\n                    }\n                </div>\n\n            }\n\n        </Main>\n    )\n}\n","import React, { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Swal from 'sweetalert2'\n\nimport { format, isAfter, isEqual,isBefore,endOfMonth } from 'date-fns'\n\n\nexport const useDateReport = () => {\n    const [startDateValue, setStartDateValue] = useState(new Date('2020-12-19'))\n    const [endDateValue, setEndDateValue] = useState(new Date())\n    const setStarDate = (date) => {\n     \n        \n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(endDateValue);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(endDateValue);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(endDateValue);\n        if (isAfter(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd)) || isEqual(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha Inicio debe ser menor que la fecha de fin','error')\n        }\n        setStartDateValue(date);\n     \n    }\n    const setEndDate = (date) => {\n        \n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(startDateValue);\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(startDateValue);\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(startDateValue);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n\n        if (isBefore( new Date(yearEnd, monthEnd,dayEnd),new Date(year, month, day)) || isEqual(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha fin debe ser mayor que la fecha de inicio','error')\n        }\n        setEndDateValue(date);\n\n       \n    }\n   \n    const DateHtml = () => (\n        <div className=\"filterDate\">\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={startDateValue}\n                    /*     locale=\"es\" */\n                    onChange={setStarDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n                />\n            </div>\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={endDateValue}\n                    /*  locale=\"es\" */\n                    onChange={setEndDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n\n                />\n            </div>\n        </div>\n    );\n\n    return [DateHtml,startDateValue,endDateValue]\n}\n","import React, { useState } from 'react'\nimport { useButtonsReport } from '../../../../hooks/useButtonsReport'\nimport { Main } from '../../../ui/layout/Main'\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nexport const OperacionalScreen = () => {\n\n    const [EquipoHtmlBtn, valueEquipo, setEquipo] = useButtonsReport({ todos: 'TODOS', toten1: 'TÓTEM 1', toten2: 'TÓTEM 2' })\n    const [PeriodoHtmlBtn, valuePeriodo, setPeriodo] = useButtonsReport({ todos: 'TODOS', 7: '07 DÍAS', 15: '15 DÍAS', 30: '30 DÍAS' })\n    const [isLoading, setIsLoading] = useState(false);\n    const generar=()=>{\n        const imgExport = document.querySelector('#exportTable');\n        setIsLoading(true);\n        toPng(imgExport).then((dataUrl) => {\n\n            const doc = new jsPDF('l', 'pt');\n            const img = new Image()\n            img.src = '/assets/images/pdf/logoleft.png'\n            const img2 = new Image()\n            img2.src = '/assets/images/pdf/logorigth.png'\n            doc.addImage(img, 'png', 30, 10, 100, 20)\n            doc.addImage(img2, 'png', 750, 13, 65, 15)\n\n            doc.setFontSize(14);\n            doc.setTextColor('0502D3');\n\n            doc.text(30, 80, 'REPORTE OPERACIONAL')\n\n\n            doc.setFontSize(12);\n            doc.setTextColor('262626');\n            doc.text(30, 100, 'ULTIMOS 7 DÍAS')\n\n            doc.setFontSize(12);\n            doc.setTextColor('0502D3');\n            doc.text(30, 160, 'STATUS DE DISPOSITIVOS')\n\n            doc.setFontSize(9);\n            doc.setTextColor('0502D3');\n            doc.text(30, 200, 'HORA MÁS TRANSITADA: 23H CON 6740 PERSONAS')\n    \n            doc.setFontSize(9);\n            doc.setTextColor('424242');\n            doc.text(680, 200, 'RANGO:23/01/2021-26/01/2021')\n\n\n\n            doc.addImage(dataUrl, 10, 200, 830, 250)\n\n\n\n            doc.setFontSize(9);\n            doc.setTextColor('424242');\n            doc.text(30, 460, 'Reporte generado el 26/01/2021 - 19:43hrs/PE.CCPN.01')\n    \n            doc.setFontSize(9);\n            doc.setTextColor('424242');\n            doc.text(680, 460, 'Tipo de tótem: tótem acumulado')\n\n\n\n            doc.save('DSP-SODA-CCPN-PE-A01-20210216-20210223-REPORTE-OPERACIONAL.pdf');\n            \n            setIsLoading(false);\n        })\n    }\n\n\n    return (\n        <Main>\n             <h3 className=\"subTitle spaceXY\">REPORTE OPERACIONAL</h3>          \n            <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione equipo:</p>\n                <EquipoHtmlBtn />\n            </div>\n            <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione Periodo:</p>\n                <PeriodoHtmlBtn />\n            </div>\n\n            <div className=\"groupButtons text-center spaceXY\">\n                <button /* onClick={generar} */ className={`filterBtn`}>GENERAR</button>\n            </div>\n\n\n\n            <div id=\"exportTable\" className=\"contentTableSensor \">\n                    <table id=\"sensoresTable\"  >\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>DOM</th>\n                                <th>LUN</th>\n                                <th>MAR</th>\n                                <th>MIÉ</th>\n                                <th>JUE</th>\n                                <th>VIE</th>\n                                <th>SÁB</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>TOTEM 1</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                            </tr>\n                            <tr>\n                                <td>TOTEM 2</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                            </tr>\n                        </tbody>\n\n                    </table>\n                </div>\n\n\n                <div className=\"groupButtons text-center spaceXY\">\n                <button onClick={generar} className={`filterBtn active`}>{!isLoading ? 'GENERAR REPORTE'  : 'CARGANDO...'}</button>\n            </div>\n\n\n\n        </Main>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Main } from '../../../ui/layout/Main'\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport { BoxDate } from '../../../ui/utils/boxes/BoxDate'\nimport { BoxWithOutPercent } from '../../../ui/utils/boxes/BoxWithOutPercent'\nimport { BoxWithPercent } from '../../../ui/utils/boxes/BoxWithPercent'\nimport { BoxDateRange } from '../../../ui/utils/boxes/BoxDateRange'\nimport { BoxGender } from '../../../ui/utils/boxes/BoxGender'\nimport { GraficBar } from '../../../ui/grafics/GraficBar'\nimport { GraficLine } from '../../../ui/grafics/GraficLine'\nimport { fetchConToken } from '../../../../helpers/fetch'\nimport { format, subDays, differenceInDays } from 'date-fns'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const ComercialScreenReport = ({ location, history }) => {\n    const [dataFilter, setDataFilter] = useState({\n        hours: [],\n        week: [],\n        month: [],\n        progress: []\n    })\n    const [isLoading, setIsLoading] = useState(false);\n    const [textGender, setTextGender] = useState('PERSONAS');\n    const [differenceInDay, setDifferenceInDay] = useState('7');\n    useEffect(() => {\n        (async () => {\n            if (!location.state) {\n                history.push('/reportes/especifico')\n            }\n            console.log(location.state)\n            setDifferenceInDay(differenceInDays(new Date(location.state.date_to), new Date(location.state.date_from)));\n\n            let url = '?';\n            Object.keys(location.state).forEach(c => url += `${c}=${location.state[c]}&`);\n            url = url.substring(0, url.length - 1);\n\n            const resp = await (await fetchConToken(`/reports/specific${url}`)).json();\n            const hours = resp.hours.map(h => { return { label: h.time, x: h.hour, y: h[location.state.gender] } });\n            const week = resp.week.map(h => { return { label: h.dow, x: h.dow, y: h[location.state.gender] } });\n            const month = resp.month.map(h => { return { label: h.day, x: h.day, y: h[location.state.gender] } });\n            let progress;\n            if (location.state.gender === 'total') {\n                progress = resp.progress;\n            } else {\n                progress = resp.progress.filter(c => c.name === location.state.gender || c.name === 'total');\n            }\n            if (location.state.gender === 'male') {\n                setTextGender('HOMBRES')\n            }\n            if (location.state.gender === 'female') {\n                setTextGender('MUJERES')\n            }\n\n            progress = progress.map(p => {\n                if (p.name === 'male') {\n                    p.name = 'HOMBRES'\n                }\n                if (p.name === 'female') {\n                    p.name = 'MUJERES'\n                }\n                if (p.name === 'total') {\n                    p.name = 'TOTAL'\n                }\n                return p;\n            });\n            setDataFilter(\n                {\n                    ...resp,\n                    progress,\n                    hours,\n                    week,\n                    month\n                }\n            );\n\n        })()\n    }, [])\n\n\n    const generarPdf = async () => {\n        const elementGrilla = document.getElementById('exportGrilla');\n        /*      const elementProgress = document.getElementById('exportProgress'); */\n        const graficHour = document.querySelector('#grafichour');\n\n        const graficWeek = document.querySelector('#graficweek');\n        const graficMonth = document.querySelector('#graficmonth');\n        let urlGrilla = '';\n        /*     let urlProgress = ''; */\n        let urlGHour = '';\n        let urlGWeek = '';\n        let urlGMonth = '';\n\n        setIsLoading(true);\n        await toPng(elementGrilla).then((dataUrl) => urlGrilla = dataUrl)\n        /*     await toPng(elementProgress).then((dataUrl) => urlProgress = dataUrl) */\n\n        await toPng(graficHour).then((dataUrl) => urlGHour = dataUrl)\n        await toPng(graficWeek).then((dataUrl) => urlGWeek = dataUrl)\n        await toPng(graficMonth).then((dataUrl) => urlGMonth = dataUrl)\n\n        const doc = new jsPDF('p', 'pt');\n        const img = new Image()\n        img.src = '/assets/images/pdf/logoleft.png'\n        const img2 = new Image()\n        img2.src = '/assets/images/pdf/logorigth.png'\n        doc.addImage(img, 'png', 30, 10, 100, 20)\n        doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n        doc.setFontSize(9);\n        doc.setTextColor(10, 24, 241);\n        doc.text(30, 60, 'REPORTE COMERCIAL')\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 80, `ULTIMOS ${differenceInDay} DIAS`)\n\n        doc.addImage(urlGrilla, 'jpg', 60, 90, 480, 280);\n        /*************************************************************************** */\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 430, `TOTAL DE ${location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR HORA DEL DÍA DE AYER`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('0502D3');\n        doc.text(30, 480, `HORA MÁS TRANSITADA: ${dataFilter.max_hour.hour} CON ${formatNumber(dataFilter?.max_hour?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 480, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGHour, 'jpg', 80, 490, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 760, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 760, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n\n\n        /***************************************************************************** */\n        doc.addPage();\n        doc.addImage(img, 'png', 30, 10, 100, 20)\n        doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 90, `TOTAL DE ${location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR DÍA DE LA SEMANA`)\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 140, `DÍA DE LA SEMANA MÁS TRANSITADO: ${dataFilter.max_week_day.day} CON ${formatNumber(dataFilter?.max_week_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 140, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGWeek, 'jpg', 80, 150, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 420, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 420, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n        /******************************************************** */\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('black');\n        doc.text(170, 480, `ACUMULADO DE ${location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR CADA DÍA DEL MES`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 530, `DÍA DEL MES MAS TRANSITADO: ${dataFilter.max_month_day.day} CON ${formatNumber(dataFilter?.max_month_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 530, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n\n\n        doc.addImage(urlGMonth, 'jpg', 80, 540, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 810, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 810, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n         const salida = doc.output('blob');\n         const formData = new FormData();\n         formData.append('file', salida);\n         formData.append('name', `DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-', '')}-${(location.state.date_to).replaceAll('-', '')}-REPORTE-COMERICAL.pdf`);\n \n \n        doc.save(`DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-', '')}-${(location.state.date_to).replaceAll('-', '')}-REPORTE-COMERICAL.pdf`);\n        setIsLoading(false);\n        //esta en ultima cola \n  /*       const resp = await (await fetchConToken(`/reports/upload-file`, formData, 'UPLOAD')).json();\n   */  }\n    return (\n        <Main>\n            <div className=\"contenedor\">\n                {/*       <TitleHead>Personas</TitleHead> */}\n                <h3 className=\"subTitle spaceTop\">REPORTE COMERCIAL</h3>\n\n                <h3 className=\"subTitle spaceTopSmall color-secundary\">ULTIMOS {differenceInDay} DÍAS</h3>\n\n                <div className=\"spaceXY\" id=\"exportGrilla\">\n\n                    <div className=\"boxGridFour\">\n                        <BoxDate count={dataFilter?.boxes?.today?.count} percent={dataFilter?.boxes?.today?.percent} />\n                        <BoxWithOutPercent theme=\"light\" count={dataFilter?.boxes?.yesterday?.total} />\n                        <BoxWithPercent theme=\"light\" count={dataFilter?.boxes?.week?.total} percent={dataFilter?.boxes?.week?.percent} />\n                        <BoxDateRange theme=\"light\" count={dataFilter?.boxes?.total?.count} />\n                    </div>\n\n                    {(location.state?.gender == 'total' || location.state?.gender == 'male') && (\n                        <div className=\"boxGridFour spaceTop\">\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.today?.male} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.yesterday?.male} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.week?.male} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.total?.male} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                        </div>\n                    )}\n                    {(location.state?.gender == 'total' || location.state?.gender == 'female') && (\n                        <div className=\"boxGridFour spaceTop\">\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.today?.female} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.yesterday?.female} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.week?.female} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.total?.female} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                        </div>\n                    )}\n\n\n                </div>\n                {/* <div className=\"spaceXY \">\n                    <h3 className=\"subTitle  text-center color-secundary\">TIEMPO PROMEDIO DE ESTANCIA POR GENERÓ</h3>\n                    <span className=\"spaceBottom text-center d-block\">( {location.state.date_from} - {location.state.date_to} )</span>\n                    <div id=\"exportProgress\">\n                        <div className=\"tablePallete \">\n                            <span>Generó</span>\n                            <div className=\"pallete\">\n                                <div className=\"color\">\n                                    <span>HOY</span>\n                                    <span className=\"bg-yellow barra\"></span>\n                                </div>\n                                <div className=\"color\">\n                                    <span>SEMANA</span>\n                                    <span className=\"bg-blue barra\"></span>\n                                </div>\n                                <div className=\"color\">\n                                    <span>MES</span>\n                                    <span className=\"bg-ligthBlue barra\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"progressContent spaceTop\">\n                            {dataFilter.length === 0 && <div className=\"__loader_grafic\">\n                                <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                            </div>}\n                            {dataFilter.progress.map((p, _i) => (\n                                \n                                <div key={_i} className=\"iconProgrese\">\n                                    <div className=\"icon\">\n                                        <img src=\"/assets/icons/person.svg\" alt=\"iconTotal\" />\n                                        <span>{p.name}</span>\n                                    </div>\n                                    <div className=\"percentProgress\">\n                                        {p.bars.map((b, _i) => (\n                                            <div key={_i} className=\"progress\">\n                                                <div className={`percent bg-${b.bg} `} style={{ width: `${b.percent}%` }}>\n                                                    <span className={`${b.bg == 'blue' ? 'textWhite' : ''} `} >{b.minutes} Minutos</span>\n                                                </div>\n                                                <span>{b.percent}%</span>\n                                            </div>\n\n                                        ))}\n                                    </div>\n\n\n\n\n                                </div>\n\n\n                            ))}\n\n                        </div>\n\n                    </div>\n\n                </div>\n                */}\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE {location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR HORA DEL DÍA DE AYER</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Hora más transitada: {dataFilter.max_hour?.hour} con {dataFilter.max_hour?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficBar data={dataFilter.hours} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Hombres:\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        scalebg=\"#0502D3\" id=\"grafichourMale\"\n                        id=\"grafichour\"\n                        theme=\"bg-yellow\"\n                    />\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE {location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR DÍA DE LA SEMANA</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {dataFilter.max_week_day?.day} con {dataFilter.max_week_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficLine data={dataFilter.week} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n\n                    />\n\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">ACUMULADO DE {location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR CADA DÍA DEL MES</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {dataFilter.max_month_day?.day} con {dataFilter.max_month_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficBar\n                        data={dataFilter.month}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-primary\"\n                        id=\"graficmonth\"\n                    />\n\n                </div>\n\n\n                <div className=\"groupButtons text-center spaceXY\">\n\n                    <button disabled={isLoading} onClick={generarPdf} className={`filterBtn active`}>{!isLoading ? 'GENERAR REPORTE' : 'CARGANDO...'}</button>\n\n                </div>\n\n\n\n            </div>\n\n\n        </Main>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { GraficBar } from '../../../ui/grafics/GraficBar';\nimport { GraficLine } from '../../../ui/grafics/GraficLine';\nimport { Main } from '../../../ui/layout/Main';\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport { fetchConToken } from '../../../../helpers/fetch';\nimport { format, subDays } from 'date-fns'\nimport { formatNumber } from '../../../../helpers/calculo';\n\nexport const EjecutivoScreenReport = ({ location, history }) => {\n\n    const [dataFilter, setDataFilter] = useState({\n        hours: [],\n        week: [],\n        month: [],\n        progress: []\n    })\n    const [isLoading, setIsLoading] = useState(false);\n    const [textGender, setTextGender] = useState('PERSONAS')\n    useEffect(() => {\n        (async () => {\n            if (!location.state) {\n                return history.push('/reportes/especifico')\n            }\n            let url = '?';\n            Object.keys(location.state).forEach(c => url += `${c}=${location.state[c]}&`);\n            url = url.substring(0, url.length - 1);\n            const resp = await fetchConToken(`/reports/specific${url}`);\n            const body = await resp.json();\n            const hours = body.hours.map(h => { return { label: h.time, x: h.hour, y: h[location.state.gender] } });\n            const week = body.week.map(h => { return { label: h.dow, x: h.dow, y: h[location.state.gender] } });\n            const month = body.month.map(h => { return { label: h.day, x: h.day, y: h[location.state.gender] } });\n            if(location.state.gender==='male'){\n                setTextGender('HOMBRES')\n            }\n            if(location.state.gender==='female'){\n                setTextGender('MUJERES')\n            }\n          \n            setDataFilter(\n                {\n                    ...body,\n                    hours,\n                    week,\n                    month\n                }\n            );\n\n        })()\n    }, [])\n\n\n    const generar = async () => {\n        console.log('Se genero!')\n        const canvas = document.querySelector('#grafichour')\n        const canvas2 = document.querySelector('#graficweek')\n        const canvas3 = document.querySelector('#graficmonth ')\n        let urlGHour = '';\n        let urlGWeek = '';\n        let urlGMonth = '';\n        setIsLoading(true);\n        await toPng(canvas).then((dataUrl) => urlGHour = dataUrl)\n        await toPng(canvas2).then((dataUrl) => urlGWeek = dataUrl)\n        await toPng(canvas3).then((dataUrl) => urlGMonth = dataUrl)\n\n\n        const doc = new jsPDF('p', 'pt');\n        const img = new Image()\n        img.src = '/assets/images/pdf/logoleft.png'\n        const img2 = new Image()\n        img2.src = '/assets/images/pdf/logorigth.png'\n        doc.addImage(img, 'png', 30, 10, 100, 20)\n        doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('0502D3');\n\n        doc.text(30, 60, 'REPORTE EJUCUTIVO')\n\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 90, `TOTAL ${location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR HORA DEL DÍA DE AYER`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('0502D3');\n        doc.text(30, 140, `HORA MÁS TRANSITADA: ${dataFilter.max_hour.hour} CON ${formatNumber(dataFilter?.max_hour?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 140, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGHour, 'jpg', 80, 150, 430, 250);\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 420, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 420, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 480, `TOTAL DE ${location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR DÍA DE LA SEMANA`)\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 530, `DÍA DE LA SEMANA MÁS TRANSITADO: ${dataFilter.max_week_day.day} CON ${formatNumber(dataFilter?.max_week_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 530, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGWeek, 'jpg', 80, 540, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 810, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 810, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n        doc.addPage();\n\n        doc.addImage(img, 'png', 30, 20, 100, 20)\n        doc.addImage(img2, 'png', 500, 20, 65, 15)\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('black');\n        doc.text(170, 80, `ACUMULADO DE ${location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR CADA DÍA DEL MES`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 130, `DÍA DEL MES MAS TRANSITADO: ${dataFilter.max_month_day.day} CON ${formatNumber(dataFilter?.max_month_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 130, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGMonth, 'jpg', 80, 140, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 410, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 410, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n        const salida = doc.output('blob');\n        const formData = new FormData();\n        formData.append('upload_file', salida);\n        formData.append('name', `DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-', '')}-${(location.state.date_to).replaceAll('-', '')}-REPORTE-EJECUTIVO.pdf`);\n\n\n\n        doc.save(`DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-','')}-${(location.state.date_to).replaceAll('-','')}-REPORTE-COMERICAL.pdf`)\n        setIsLoading(false);\n        const resp = await (await fetchConToken(`/reports/upload-file`, formData, 'UPLOAD')).json();\n\n    }\n\n\n\n    return (\n        <Main>\n            <div className=\"contenedor\">\n                <h3 className=\"subTitle spaceTop\">REPORTE EJECUTIVO</h3>\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL {location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR HORA DEL DÍA DE AYER</h3>\n\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Hora más transitada: {dataFilter.max_hour?.hour} con {dataFilter.max_hour?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficBar data={dataFilter.hours} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Hombres:\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        scalebg=\"#0502D3\" id=\"grafichour\"\n                        id=\"grafichour\"\n                        theme=\"bg-yellow\"\n                    />\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE {location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR DÍA DE LA SEMANA</h3>\n\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {dataFilter.max_week_day?.day} con {dataFilter.max_week_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n                    </div>\n                    <GraficLine data={dataFilter.week} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n\n                    />\n\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">ACUMULADO DE {location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR CADA DÍA DEL MES</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {dataFilter.max_month_day?.day} con {dataFilter.max_month_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n                    </div>\n                    <GraficBar\n                        data={dataFilter.month}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-yellow\"\n                        id=\"graficmonth\"\n                    />\n                </div>\n\n\n                <div className=\"groupButtons text-center spaceXY\">\n\n                    <button disabled={isLoading} onClick={generar} className={`filterBtn active`}>{!isLoading ? 'GENERAR REPORTE' : 'CARGANDO...'}</button>\n\n                </div>\n\n            </div>\n        </Main>\n    )\n}\n","import React from 'react'\n\nexport const ButtonsExport = ({methodpdf,methodcsv,methodshare}) => {\n    return (\n        <div className=\"btnExportsGraphics\">\n            <button onClick={methodcsv}><img src=\"/assets/icons/downloadcsv.svg\" /></button>\n            <button onClick={methodpdf}><img src=\"/assets/icons/Impresion.svg\" /></button>\n            <button onClick={methodshare}><img src=\"/assets/icons/share.svg\" /></button>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom';\nimport { setGraphicsInHourForCurrentDate, setGraphicsInMonthForCurrentDate, setGraphicsInWeekForCurrentDate, startPersonData } from '../../../../action/person';\nimport { getTrazabilidad } from '../../../../action/trazabilidad';\nimport { formatNumber } from '../../../../helpers/calculo';\nimport { downloadImageDesktop, exportExcel, exportPDFPerson } from '../../../../helpers/exportPDF';\nimport { useButtons } from '../../../../hooks/useButtons';\nimport { useDate } from '../../../../hooks/useDate';\nimport { ButtonsExport } from '../../../ui/exports/ButtonsExport';\nimport { GraficBar } from '../../../ui/grafics/GraficBar';\nimport { GraficLine } from '../../../ui/grafics/GraficLine';\nimport { Main } from '../../../ui/layout/Main'\nconst validsSensors = ['ccpn001', 'ccpn002', 'ccpn003'];\nexport const SensorScreen = ({ history }) => {\n    const { resources } = useSelector(state => state.trazabilidad);\n    const person = useSelector(state => state.person);\n    const { hoursPersonTotal, hoursPersonMale, hoursPersonFemale, weekPersonTotal, weekPersonMale,\n        weekPersonFemale, monthPersonTotal,\n        monthPersonMale, monthPersonFemale,\n        heatmapPersonTotal, heatmapPersonRange,\n        rangePersonAges,\n        maxHourPersonTotal,\n        maxHourPersonMale,\n        maxHourPersonFemale,\n        maxWeekPersonTotal,\n        maxWeekPersonMale,\n        maxWeekPersonFemale,\n        maxMonthPersonTotal,\n        maxMonthPersonMale,\n        maxMonthPersonFemale } = useSelector(state => state.person);\n    const { dateStartHourPerson, dateEndHourPerson,\n        dateStartHourMalePerson, dateEndHourMalePerson,\n        dateStartHourFemalePerson, dateEndHourFemalePerson,\n        dateStartWeekPerson, dateEndWeekPerson,\n        dateStartWeekMalePerson, dateEndWeekMalePerson,\n        dateStartWeekFemalePerson, dateEndWeekFemalePerson,\n        dateStartMonthPerson, dateEndMonthPerson,\n        dateStartMonthMalePerson, dateEndMonthMalePerson,\n        dateStartMonthFemalePerson, dateEndMonthFemalePerson,\n        dateStartAgePerson, dateEndAgePerson,\n        dateStartHeatMap, dateEndHeatMap } = useSelector(state => state.date);\n    const { name } = useParams();\n    const dispatch = useDispatch();\n    const [DateHour] = useDate(setGraphicsInHourForCurrentDate, name, 'total', 'dateStartHourPerson', 'dateEndHourPerson', '');\n    const [DateWeek] = useDate(setGraphicsInWeekForCurrentDate, name,'total', 'dateStartWeekPerson', 'dateEndWeekPerson','');\n    const [DateMonth] = useDate(setGraphicsInMonthForCurrentDate,name,'total', 'dateStartMontPerson', 'dateEndMonthPerson','',true);\n    const [ButtonHourTotal, hourstotalrst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, name, 'total', 'dateStartHourPerson', 'dateEndHourMalePerson', 'hourstotalrst', 1);\n    const [ButtonWeekTotal, weektotalrst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    },setGraphicsInWeekForCurrentDate, name,'total', 'dateStartWeekPerson', 'dateEndWeekPerson','weektotalrst')\n    const [ButtonMonthTotal, monthtotalrst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    },setGraphicsInMonthForCurrentDate,name,'total', 'dateStartMontPerson', 'dateEndMonthPerson','monthtotalrst')\n    \n    useEffect(() => {\n        (() => {\n            if (!validsSensors.includes(name.toLowerCase())) {\n                history.push('/')\n            }\n            dispatch(getTrazabilidad());\n            dispatch(startPersonData())\n        })()\n    }, [])\n    return (\n        <Main>\n            <h3 className=\"subTitle spaceTop\">Tienda 1:Panistería</h3>\n            <div className=\"spaceTop\">\n                <div className=\"contentcanvas   m-auto\">\n                    <canvas style={{ backgroundImage: `url(/assets/images/planoflujo.jpg)` }} className=\"mt\" id=\"monitoreoSensor\" width=\"1024\" height=\"556\"></canvas>\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY d-block\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR HORA DEL DÍA</h3>\n                <span className=\"spaceBottom text-center d-block\">( {dateStartHourPerson} - {dateEndHourPerson} )</span>\n                {hoursPersonTotal.length > 0 && <ButtonHourTotal />}\n                <div className=\"detailGrafic spaceBottom\">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPersonTotal?.hour} con {formatNumber(maxHourPersonTotal?.total)} personas</span>\n                    {hoursPersonTotal.length > 0 && <DateHour />}\n                </div>\n                <GraficBar data={hoursPersonTotal} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Personas:\"\n                    scltxtlbl=\"Cantidad de Personas\"\n                    scalebg=\"#0502D3\"\n                    theme=\"bg-yellow\"\n                    id=\"grafichourTotal\"\n                />\n                {hoursPersonTotal.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('grafichourTotal', dateStartHourPerson, dateEndHourPerson, 'TOTAL DE HOMBRES POR HORA DEL DÍA', `HORA MÁS TRANSITADA: ${maxHourPersonTotal.hour} CON ${formatNumber(maxHourPersonTotal.total)} PERSONAS`, false, name)}\n                    methodcsv={() => exportExcel('hour', dateStartHourPerson, dateEndHourPerson, 'DE-HOMBRES-POR-HORA-DEL-DIA')}\n                    methodshare={() => downloadImageDesktop('grafichourTotal', dateStartHourPerson, dateEndHourPerson, 'hour', 'P')}\n                />}\n            </div>\n            <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekPerson} - {dateEndWeekPerson} )</span>\n                    {weekPersonTotal.length > 0 && <ButtonWeekTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonTotal?.day} con {formatNumber(maxWeekPersonTotal?.total)} personas</span>\n                        {weekPersonTotal.length > 0 && <DateWeek />}\n                    </div>\n                    <GraficLine data={weekPersonTotal} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n                    />\n\n                    {weekPersonTotal.length>0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'TOTAL DE PERSONAS POR DÍA DE LA SEMANA', `DIA MÁS TRANSITADO: ${maxWeekPersonTotal.day} CON ${formatNumber(maxWeekPersonTotal.total)} PERSONAS`, false, name)}\n                        methodcsv={() => exportExcel('week', dateStartWeekPerson, dateEndWeekPerson, 'DE-PERSONAS-POR-DIA-DE-LA-SEMANA')}\n                        methodshare={() => downloadImageDesktop('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'week', 'P')}\n                    />}\n                </div>\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">ACUMULADO DE PERSONAS POR CADA DÍA DEL MES</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthPerson} - {dateEndMonthPerson} )</span>\n                    {monthPersonTotal.length > 0 && <ButtonMonthTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonTotal?.day} con {maxMonthPersonTotal?.total} personas</span>\n                        {monthPersonTotal.length > 0 && <DateMonth />}\n\n                    </div>\n                    <GraficBar\n                        data={monthPersonTotal}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-yellow\"\n                        id=\"graficmonth\"\n                    />\n                    {monthPersonTotal.length>0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficmonth', dateStartMonthPerson, dateEndMonthPerson, 'TOTAL DE PERSONAS POR DÍA DEL MES', `DIA MÁS TRANSITADA: ${maxMonthPersonTotal.day} CON ${formatNumber(maxMonthPersonTotal.total)} PERSONAS`, false, name)}\n                        methodcsv={() => exportExcel('month', dateStartMonthPerson, dateEndMonthPerson, 'DE-PERSONAS-POR-DIA-DEL-MES')}\n                        methodshare={() => downloadImageDesktop('graficmonth', dateStartMonthPerson, dateEndMonthPerson, 'month', 'P')}\n                    />}\n                </div>\n\n\n        </Main>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport { BoxDate } from '../../ui/utils/boxes/BoxDate'\nimport { BoxWithOutPercent } from '../../ui/utils/boxes/BoxWithOutPercent'\nimport { BoxWithPercent } from '../../ui/utils/boxes/BoxWithPercent'\nimport { BoxDateRange } from '../../ui/utils/boxes/BoxDateRange'\nimport { Main } from '../../ui/layout/Main'\nimport { GraficBar } from '../../ui/grafics/GraficBar'\nimport { GraficLine } from '../../ui/grafics/GraficLine'\nimport { fetchConToken } from '../../../helpers/fetch'\nimport { BoxGender } from '../../ui/utils/boxes/BoxGender'\nimport { formatNumber } from '../../../helpers/calculo'\nimport { format } from 'date-fns'\nexport const ExportReport = () => {\n    const [dataFilter, setDataFilter] = useState({\n        hours: [],\n        week: [],\n        month: [],\n        progress: []\n    })\n\n    useEffect(() => {\n        (async () => {\n\n            const resp = await (await fetch(`https://dashboard.qonteo.com/REST/reports/specific?report_type=c`, {\n                headers: {\n                    'Content-type': 'Application/json',\n                    'Authorization': 'bear eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eydzdWInOiAnNDQyNDQ4JywgJ2lhdCc6IDE1OTg4ODczOTl9.20f471933ae0a9c58d525f4ab0c1eef7adab03f17c3bbe18a00cf30a1ef06948'\n                }\n            })).json();\n            console.log(resp)\n            const hours = resp.hours.map(h => { return { label: h.time, x: h.hour, y: h.total } });\n            const week = resp.week.map(h => { return { label: h.dow, x: h.dow, y: h.total } });\n            const month = resp.month.map(h => { return { label: h.day, x: h.day, y: h.total } });\n\n            setDataFilter(\n                {\n                    ...resp,\n                    hours,\n                    week,\n                    month\n                }\n            );\n\n        })()\n    }, [])\n\n    useEffect(() => {\n        (async () => {\n            if (dataFilter.hours.length > 0) {\n                const elementGrilla = document.getElementById('exportGrilla');\n                /*      const elementProgress = document.getElementById('exportProgress'); */\n                const graficHour = document.querySelector('#grafichour');\n\n                const graficWeek = document.querySelector('#graficweek');\n                const graficMonth = document.querySelector('#graficmonth');\n                let urlGrilla = '';\n                /*     let urlProgress = ''; */\n                let urlGHour = '';\n                let urlGWeek = '';\n                let urlGMonth = '';\n\n                await toPng(elementGrilla).then((dataUrl) => urlGrilla = dataUrl)\n                /*     await toPng(elementProgress).then((dataUrl) => urlProgress = dataUrl) */\n\n                await toPng(graficHour).then((dataUrl) => urlGHour = dataUrl)\n                await toPng(graficWeek).then((dataUrl) => urlGWeek = dataUrl)\n                await toPng(graficMonth).then((dataUrl) => urlGMonth = dataUrl)\n\n                const doc = new jsPDF('p', 'pt');\n                const img = new Image()\n                img.src = '/assets/images/pdf/logoleft.png'\n                const img2 = new Image()\n                img2.src = '/assets/images/pdf/logorigth.png'\n                doc.addImage(img, 'png', 30, 10, 100, 20)\n                doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n                doc.setFontSize(9);\n                doc.setTextColor(10, 24, 241);\n                doc.text(30, 60, 'REPORTE COMERCIAL')\n\n                doc.addImage(urlGrilla, 'jpg', 60, 90, 480, 280);\n                /*************************************************************************** */\n\n                doc.setFontSize(11);\n                doc.setTextColor('262626');\n                doc.text(170, 430, `TOTAL DE  PERSONAS POR HORA DEL DÍA DE AYER`)\n\n                doc.setFontSize(9);\n                doc.setTextColor('0502D3');\n                doc.text(30, 480, `HORA MÁS TRANSITADA: ${dataFilter.max_hour.hour} CON ${formatNumber(dataFilter?.max_hour?.total)} PERSONAS`)\n\n\n                doc.addImage(urlGHour, 'jpg', 80, 490, 430, 250);\n\n                doc.setFontSize(9);\n                doc.setTextColor('424242');\n                doc.text(30, 760, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n\n\n\n                /***************************************************************************** */\n                doc.addPage();\n                doc.addImage(img, 'png', 30, 10, 100, 20)\n                doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n                doc.setFontSize(11);\n                doc.setTextColor('262626');\n                doc.text(170, 90, 'TOTAL DE PERSONAS POR DÍA DE LA SEMANA')\n\n\n                doc.setFontSize(9);\n                doc.setTextColor('black');\n                doc.text(30, 140, `DÍA DE LA SEMANA MÁS TRANSITADO: ${dataFilter.max_week_day.day} CON ${formatNumber(dataFilter?.max_week_day?.total)} PERSONAS`)\n\n                doc.addImage(urlGWeek, 'jpg', 80, 150, 430, 250);\n\n                doc.setFontSize(9);\n                doc.setTextColor('424242');\n                doc.text(30, 420, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n                /******************************************************** */\n\n\n                doc.setFontSize(11);\n                doc.setTextColor('black');\n                doc.text(170, 480, `ACUMULADO DE PERSONAS POR CADA DÍA DEL MES`)\n\n                doc.setFontSize(9);\n                doc.setTextColor('black');\n                doc.text(30, 530, `DÍA DEL MES MAS TRANSITADO: ${dataFilter.max_month_day.day} CON ${formatNumber(dataFilter?.max_month_day?.total)} PERSONAS`)\n\n\n\n\n                doc.addImage(urlGMonth, 'jpg', 80, 540, 430, 250);\n\n                doc.setFontSize(9);\n                doc.setTextColor('424242');\n                doc.text(30, 810, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n                const salida = doc.output('blob');\n                const formData = new FormData();\n                formData.append('upload_file', salida);\n                formData.append('name', `DSP-SODA-CCPN-PE-A01-REPORTE-COMERICAL.pdf`);\n\n               \n                const resp = await (await fetch(`https://dashboard.qonteo.com/REST/reports/upload-file`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': 'bear eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eydzdWInOiAnNDQyNDQ4JywgJ2lhdCc6IDE1OTg4ODczOTl9.20f471933ae0a9c58d525f4ab0c1eef7adab03f17c3bbe18a00cf30a1ef06948'\n                    },\n                    body: formData\n                })).json();\n                console.log(resp)\n            }\n        })()\n    }, [dataFilter])\n\n    return (\n        <Main isSidebar={false}>\n            <div className=\"contenedor\">\n                {/*       <TitleHead>Personas</TitleHead> */}\n                <h3 className=\"subTitle spaceTop\">REPORTE COMERCIAL</h3>\n\n                <h3 className=\"subTitle spaceTopSmall color-secundary\">ULTIMOS  DÍAS</h3>\n\n                <div className=\"spaceXY\" id=\"exportGrilla\">\n\n                    <div className=\"boxGridFour\">\n                        <BoxDate count={dataFilter?.boxes?.today?.count} percent={dataFilter?.boxes?.today?.percent} />\n                        <BoxWithOutPercent theme=\"light\" count={dataFilter?.boxes?.yesterday?.total} />\n                        <BoxWithPercent theme=\"light\" count={dataFilter?.boxes?.week?.total} percent={dataFilter?.boxes?.week?.percent} />\n                        <BoxDateRange theme=\"light\" count={dataFilter?.boxes?.total?.count} />\n                    </div>\n\n                    <div className=\"boxGridFour spaceTop\">\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.today?.male} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.yesterday?.male} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.week?.male} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.total?.male} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                    </div>\n                    <div className=\"boxGridFour spaceTop\">\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.today?.female} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.yesterday?.female} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.week?.female} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.total?.female} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                    </div>\n\n\n\n                </div>\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE PERSONAS POR HORA DEL DÍA DE AYER</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Hora más transitada: {dataFilter.max_hour?.hour} con {dataFilter.max_hour?.total} personas</span>\n                        {/*   <span className=\"detailMax\">RANGO: - </span> */}\n\n                    </div>\n                    <GraficBar data={dataFilter.hours} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Hombres:\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        scalebg=\"#0502D3\" id=\"grafichourMale\"\n                        id=\"grafichour\"\n                        theme=\"bg-yellow\"\n                    />\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {dataFilter.max_week_day?.day} con {dataFilter.max_week_day?.total} personas</span>\n                        {/*  <span className=\"detailMax\">RANGO: - </span> */}\n\n                    </div>\n                    <GraficLine data={dataFilter.week} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n\n                    />\n\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">ACUMULADO DE PERSONAS POR CADA DÍA DEL MES</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {dataFilter.max_month_day?.day} con {dataFilter.max_month_day?.total} personas</span>\n                        {/*  <span className=\"detailMax\">RANGO: - </span> */}\n\n                    </div>\n                    <GraficBar\n                        data={dataFilter.month}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-primary\"\n                        id=\"graficmonth\"\n                    />\n\n                </div>\n\n\n\n\n\n            </div>\n\n\n        </Main>\n    )\n}\n","import React, { useEffect } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport { LoginScreen } from '../interfaz/pages/auth/LoginScreen';\nimport { RegisterScreen } from '../interfaz/pages/auth/RegisterScreen';\nimport { PersonScreen } from '../interfaz/pages/desktop/person/PersonScreen';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startChecking } from '../action/auth'\nimport { PublicRoute } from './PublicRouter';\nimport { PrivateRouter } from './PrivateRouter';\nimport { TrazibilidadScreen } from '../interfaz/pages/desktop/person/TrazibilidadScreen';\nimport { MobileScreen } from '../interfaz/pages/mobile/MobileScreen';\nimport { isBrowser } from 'react-device-detect';\nimport { EspecificoScreen } from '../interfaz/pages/desktop/person/EspecificoScreen';\nimport { OperacionalScreen } from '../interfaz/pages/desktop/person/OperacionalScreen';\nimport { ComercialScreenReport } from '../interfaz/pages/desktop/reports/ComercialScreenRerpot';\nimport { EjecutivoScreenReport } from '../interfaz/pages/desktop/reports/EjecutivoScreenReport';\nimport { ComercialAuto } from '../auto-exports/ComercialAuto';\nimport { SensorScreen } from '../interfaz/pages/desktop/trazabilidad/SensorScreen';\nimport { ExportReport } from '../interfaz/pages/reports/ExportReport';\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const { isCheking,uid } = useSelector(state => state.auth);\n    useEffect(() => {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    \n    if(!isCheking){\n        return <h3>Cargando...</h3>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute isAuthenticated={!!uid} path=\"/auth/login\" exact component={LoginScreen} />\n                    <PublicRoute isAuthenticated={!!uid} exact path=\"/auth/registrarse\" component={RegisterScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} path=\"/\" exact component={isBrowser ? PersonScreen : MobileScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes/especifico\" component={EspecificoScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes/operacional\" component={OperacionalScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes-screen/comercial\" component={ComercialScreenReport} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes-screen/ejecutivo\" component={EjecutivoScreenReport} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/trazabilidad/comercio\" component={TrazibilidadScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/sensor/:name\" component={SensorScreen} />\n                    <Route exact path=\"/export-test\" component={ExportReport} />\n                    <Redirect to=\"/\" />\n                </Switch>\n\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n/**\n * @module Reducers\n */\n\nconst initialState = {\n    isCheking: false,\n}\n\n/**\n * Reducer de autentificacion\n * @param {Object} state Objecto de estado de la autentificacion\n * @param {Object} action Objecto para cambiar el estado de la autentificacion\n * @returns {Object} Estado actual de la autentificacion\n */\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                isCheking: false,\n                ...action.payload\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                isCheking: true,\n            }\n        case types.logout:\n            return{\n                isCheking: true\n            }\n        case types.authChecking:\n            return {\n                isCheking: true,\n            }\n        default:\n            return state;\n    }\n}\n\nexport {authReducer};","import { types } from \"../types/types\";\nimport { format,endOfMonth ,subDays,startOfMonth,subMonths} from 'date-fns'\n\n/**\n * @module Reducers\n */\n\nconst initialize = {\n    dateStartHourPerson:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHourPerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartHourMalePerson:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHourMalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartHourFemalePerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHourFemalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartWeekPerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndWeekPerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartWeekMalePerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndWeekMalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartWeekFemalePerson:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndWeekFemalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartMonthPerson: format(subMonths(new Date(),1), 'yyyy-MM-dd'),\n    dateEndMonthPerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartMonthMalePerson: format(subMonths(new Date(),1), 'yyyy-MM-dd'),\n    dateEndMonthMalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartMonthFemalePerson: format(subMonths(new Date(),1), 'yyyy-MM-dd'),\n    dateEndMonthFemalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartHeatMap:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHeatMap:format(new Date(),'yyyy-MM-dd'),\n    dateStartAgePerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndAgePerson:format(new Date(),'yyyy-MM-dd'),\n}\n\n/**\n * Reducer de las fechas de inicio y fin\n * @param {Object} state Objecto de estado de los fechas inicio y fin\n * @param {Object} action action Objecto para cambiar el estado de los fechas inicio y fin\n * @returns {Object} Estado actual de los fechas inicio y fin\n */\n\nconst dateReducer=(state=initialize,action)=>{\n    switch (action.type) {\n        case types.changeDate:\n            return {\n                ...state,\n                [action.start]:action.startvalue,\n                [action.end]:action.endvalue\n            }\n        case types.resetDates:\n            return initialize\n        default:\n            return state;\n    }\n}\n\nexport {dateReducer}","import { types } from \"../types/types\"\n\n/**\n * @module Reducers\n */\n\nconst initialize = {\n  hoursPersonTotal:[],\n  hoursPersonMale:[],\n  hoursPersonFemale:[],\n  weekPersonTotal:[],\n  weekPersonMale:[],\n  weekPersonFemale:[],\n  monthPersonTotal:[],\n  monthPersonMale:[],\n  monthPersonFemale:[],\n  heatmapPersonTotal:[],\n  heatmapPersonRange:[],\n  rangePersonAges:[],\n  maxHourPersonTotal:{},\n  maxHourPersonMale:{},\n  maxHourPersonFemale:{},\n  maxWeekPersonTotal:{},\n  maxWeekPersonMale:{},\n  maxWeekPersonFemale:{},\n  maxMonthPersonTotal:{},\n  maxMonthPersonMale:{},\n  maxMonthPersonFemale:{},\n\n}\n\n\n/**\n * Reducer de datos por horas, semanas y meses\n * @param {Object} state Objecto de estado de los datos por tiempo y fechas\n * @param {Object} action action Objecto para cambiar el estado de los datos por tiempo y fechas\n * @returns {Object} Estado actual de los datos por tiempo y fechas\n */\n\nconst personReducer = (state = initialize, action) => {\n  switch (action.type) {\n    case types.initializePerson:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport {personReducer}","import { types } from \"../types/types\";\n\n/**\n * @module Reducers\n */\n\nconst init = {\n    resources: [],\n    totemTotal: {},\n    tabs: []\n}\n\n/**\n * \n * @param {Object} state Objecto de estado de los totens\n * @param {Object} action action Objecto para cambiar el estado de los totens\n * @returns {Object} Estado actual de los totens\n */\n\nconst totenReducer = (state = init, action) => {\n    switch (action.type) {\n        case types.getToten:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default totenReducer","import { types } from \"../types/types\";\n\n/**\n * @module Reducers\n */\n\nconst initialState = {\n    resources: [],\n    hours: [],\n}\n\n/**\n * \n * @param {Object} state Objecto de estado de los resources\n * @param {Object} action action Objecto para cambiar el estado de los resources\n * @returns {Object} Estado actual de los resources\n */\n\nconst trazabilidadReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.initialDataTrazabilidad:\n            return {\n                ...state,\n                ...action.payload\n            }\n        case types.changeTrazabilidadByHour:\n            return{\n                ...state,\n                resources:action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport {trazabilidadReducer}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { dateReducer } from \"./dateReducer\";\nimport { personReducer } from \"./personReducer\";\nimport  totenReducer  from \"./totenReducer\";\nimport {trazabilidadReducer} from \"./trazabilidadReducer\";\n\n\nexport const rootReducer=combineReducers({\n    auth:authReducer,\n    person:personReducer,\n    date:dateReducer,\n    toten:totenReducer,\n    trazabilidad:trazabilidadReducer\n})","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nexport const store=createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import React from 'react'\nimport { AppRouter } from './routes/AppRouter'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport './styles/styles.scss'\nexport const App = () => {\n    return (\n        <Provider store={store} >\n        <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}